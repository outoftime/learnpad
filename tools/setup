#!/usr/bin/env bash

# Build your development environment. Running this on an already-built
# environment will update to the latest dependencies.

set -e

export OSX=$(uname | grep -i '^darwin')

if ! docker-compose -v &> /dev/null
then
    echo "Before running this script, install Docker and Docker Compose."
    if [ -z "$OSX" ]
    then
        echo "Find installation instructions for your distro here:"
        echo "https://docs.docker.com/install/linux/docker-ce/ubuntu/"
    else
        echo "Download the latest community edition here:"
        echo "https://docs.docker.com/docker-for-mac/release-notes/"
    fi
    exit 1
fi

if ! docker info &> /dev/null
then
    echo "Before running this script, start the Docker application"
    exit 1
fi

if [ ! -f docker-compose.override.yml ]
then
    if [ -z "$OSX" ]
    then
        set -e
        ln -sv --no-target-directory docker-compose.bind.yml docker-compose.override.yml
    else
        set -e
        ln -sv --no-target-directory docker-compose.sync.yml docker-compose.override.yml
    fi
fi

docker pull popcodeorg/popcode:latest
docker-compose up --build --no-start

docker-compose run --rm app yarn install --frozen-lockfile

if [ ! -e .vscode ]
then
    ln -sv --no-target-directory contrib/vscode .vscode
    if ! grep --quiet --no-messages .vscode .git/info/exclude
    then
        mkdir --parents .git/info
        echo .vscode >> .git/info/exclude
    fi
fi

set +x

echo ""
echo "================================================================================"
echo ""
echo "Your development environment is ready! To run your development server, type:"
echo ""
echo "  ./tools/start"
echo ""
echo "To run tests, type:"
echo ""
echo "  ./tools/test"

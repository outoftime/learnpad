{
  "ast": null,
  "code": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Cookies from 'js-cookie';\nimport get from 'lodash-es/get';\nimport isEmpty from 'lodash-es/isEmpty';\nimport isNil from 'lodash-es/isNil';\nimport isNull from 'lodash-es/isNull';\nimport omit from 'lodash-es/omit';\nimport values from 'lodash-es/values';\nimport uuid from 'uuid/v4';\nimport once from 'lodash-es/once';\nimport { firebase } from '@firebase/app';\nimport '@firebase/auth';\nimport { bugsnagClient } from '../util/bugsnag';\nimport config from '../config';\nimport retryingFailedImports from '../util/retryingFailedImports';\nimport { getGapiSync, loadAndConfigureGapi, SCOPES as GOOGLE_SCOPES } from '../services/gapi';\nvar GITHUB_SCOPES = ['gist', 'public_repo', 'read:user', 'user:email'];\nvar VALID_SESSION_UID_COOKIE = 'firebaseAuth.validSessionUid';\nvar SESSION_TTL_MS = 5 * 60 * 1000;\nvar githubAuthProvider = new firebase.auth.GithubAuthProvider();\n\nfor (var _i = 0; _i < GITHUB_SCOPES.length; _i++) {\n  var scope = GITHUB_SCOPES[_i];\n  githubAuthProvider.addScope(scope);\n}\n\nvar googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  for (var _iterator = GOOGLE_SCOPES[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    var _scope = _step.value;\n    googleAuthProvider.addScope(_scope);\n  }\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator.return != null) {\n      _iterator.return();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\nvar _buildFirebase = buildFirebase(),\n    auth = _buildFirebase.auth,\n    loadDatabase = _buildFirebase.loadDatabase;\n\nfunction loadDatabaseSdk() {\n  return _loadDatabaseSdk.apply(this, arguments);\n}\n\nfunction _loadDatabaseSdk() {\n  _loadDatabaseSdk = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", retryingFailedImports(function () {\n              return import(\n              /* webpackChunkName: \"mainAsync\" */\n              '@firebase/database');\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadDatabaseSdk.apply(this, arguments);\n}\n\nfunction buildFirebase() {\n  var appName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  var app = firebase.initializeApp({\n    apiKey: config.firebaseApiKey,\n    authDomain: \"\".concat(config.firebaseApp, \".firebaseapp.com\"),\n    databaseURL: \"https://\".concat(config.firebaseApp, \".firebaseio.com\")\n  }, appName);\n  return {\n    auth: firebase.auth(app),\n    loadDatabase: once(\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadDatabaseSdk();\n\n            case 2:\n              return _context.abrupt(\"return\", firebase.database(app));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })))\n  };\n}\n\nexport function onAuthStateChanged(listener) {\n  return auth.onAuthStateChanged(function (user) {\n    listener({\n      user: user\n    });\n  });\n}\n\nfunction workspace(_x) {\n  return _workspace.apply(this, arguments);\n}\n\nfunction _workspace() {\n  _workspace = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(uid) {\n    var database;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return loadDatabase();\n\n          case 2:\n            database = _context3.sent;\n            return _context3.abrupt(\"return\", database.ref(\"workspaces/\".concat(uid)));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _workspace.apply(this, arguments);\n}\n\nexport function loadAllProjects(_x2) {\n  return _loadAllProjects.apply(this, arguments);\n}\n\nfunction _loadAllProjects() {\n  _loadAllProjects = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(uid) {\n    var userWorkspace, projects;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return workspace(uid);\n\n          case 2:\n            userWorkspace = _context4.sent;\n            _context4.next = 5;\n            return userWorkspace.child('projects').once('value');\n\n          case 5:\n            projects = _context4.sent;\n            return _context4.abrupt(\"return\", values(projects.val() || {}));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _loadAllProjects.apply(this, arguments);\n}\n\nfunction getProjectforSnapshot(project) {\n  var snapshotBlacklist = ['externalLocations'];\n  return omit(project, snapshotBlacklist);\n}\n\nexport function createProjectSnapshot(_x3) {\n  return _createProjectSnapshot.apply(this, arguments);\n}\n\nfunction _createProjectSnapshot() {\n  _createProjectSnapshot = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(project) {\n    var snapshotKey, database, projectForSnapshot;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            snapshotKey = uuid().toString();\n            _context5.next = 3;\n            return loadDatabase();\n\n          case 3:\n            database = _context5.sent;\n            projectForSnapshot = getProjectforSnapshot(project);\n            _context5.next = 7;\n            return database.ref('snapshots').child(snapshotKey).set(projectForSnapshot);\n\n          case 7:\n            return _context5.abrupt(\"return\", snapshotKey);\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _createProjectSnapshot.apply(this, arguments);\n}\n\nexport function loadProjectSnapshot(_x4) {\n  return _loadProjectSnapshot.apply(this, arguments);\n}\n\nfunction _loadProjectSnapshot() {\n  _loadProjectSnapshot = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(snapshotKey) {\n    var database, event;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return loadDatabase();\n\n          case 2:\n            database = _context6.sent;\n            _context6.next = 5;\n            return database.ref('snapshots').child(snapshotKey).once('value');\n\n          case 5:\n            event = _context6.sent;\n            return _context6.abrupt(\"return\", event.val());\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _loadProjectSnapshot.apply(this, arguments);\n}\n\nexport function saveProject(_x5, _x6) {\n  return _saveProject.apply(this, arguments);\n}\n\nfunction _saveProject() {\n  _saveProject = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(uid, project) {\n    var userWorkspace;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return workspace(uid);\n\n          case 2:\n            userWorkspace = _context7.sent;\n            _context7.next = 5;\n            return userWorkspace.child('projects').child(project.projectKey).setWithPriority(project, -Date.now());\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _saveProject.apply(this, arguments);\n}\n\nexport function loadCredentialsForUser(_x7) {\n  return _loadCredentialsForUser.apply(this, arguments);\n}\n\nfunction _loadCredentialsForUser() {\n  _loadCredentialsForUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(uid) {\n    var database, credentialEvent;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return loadDatabase();\n\n          case 2:\n            database = _context8.sent;\n            _context8.next = 5;\n            return database.ref(\"authTokens/\".concat(uid)).once('value');\n\n          case 5:\n            credentialEvent = _context8.sent;\n            return _context8.abrupt(\"return\", values(credentialEvent.val()));\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _loadCredentialsForUser.apply(this, arguments);\n}\n\nexport function signIn(_x8) {\n  return _signIn.apply(this, arguments);\n}\n\nfunction _signIn() {\n  _signIn = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(provider) {\n    var originalOnerror, userCredential;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            originalOnerror = window.onerror;\n\n            window.onerror = function (message) {\n              return message.toLowerCase().includes('network error');\n            };\n\n            _context9.prev = 2;\n\n            if (!(provider === 'github')) {\n              _context9.next = 9;\n              break;\n            }\n\n            _context9.next = 6;\n            return signInWithGithub();\n\n          case 6:\n            userCredential = _context9.sent;\n            _context9.next = 13;\n            break;\n\n          case 9:\n            if (!(provider === 'google')) {\n              _context9.next = 13;\n              break;\n            }\n\n            _context9.next = 12;\n            return signInWithGoogle();\n\n          case 12:\n            userCredential = _context9.sent;\n\n          case 13:\n            return _context9.abrupt(\"return\", userCredential);\n\n          case 14:\n            _context9.prev = 14;\n            setTimeout(function () {\n              window.onerror = originalOnerror;\n            });\n            return _context9.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[2,, 14, 17]]);\n  }));\n  return _signIn.apply(this, arguments);\n}\n\nexport function linkGithub() {\n  return _linkGithub.apply(this, arguments);\n}\n\nfunction _linkGithub() {\n  _linkGithub = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee10() {\n    var _ref5, credential;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return auth.currentUser.linkWithPopup(githubAuthProvider);\n\n          case 2:\n            _ref5 = _context10.sent;\n            credential = _ref5.credential;\n            return _context10.abrupt(\"return\", {\n              user: auth.currentUser,\n              credential: credential\n            });\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _linkGithub.apply(this, arguments);\n}\n\nexport function unlinkGithub() {\n  return _unlinkGithub.apply(this, arguments);\n}\n\nfunction _unlinkGithub() {\n  _unlinkGithub = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11() {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return Promise.all([auth.currentUser.unlink('github.com'), deleteCredentialForUser(auth.currentUser.uid, 'github.com')]);\n\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _unlinkGithub.apply(this, arguments);\n}\n\nexport function migrateAccount(_x9) {\n  return _migrateAccount.apply(this, arguments);\n}\n\nfunction _migrateAccount() {\n  _migrateAccount = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12(inboundAccountCredential) {\n    var inboundAccountFirebase, inboundAccountAuth, inboundUid, migratedProjects;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            inboundAccountFirebase = buildFirebase('migration');\n            inboundAccountAuth = inboundAccountFirebase.auth;\n            _context12.prev = 2;\n            _context12.next = 5;\n            return inboundAccountAuth.signInAndRetrieveDataWithCredential(inboundAccountCredential);\n\n          case 5:\n            inboundUid = inboundAccountAuth.currentUser.uid;\n            _context12.next = 8;\n            return logMigration(inboundUid, 'attempt');\n\n          case 8:\n            _context12.next = 10;\n            return migrateProjects(inboundAccountFirebase);\n\n          case 10:\n            migratedProjects = _context12.sent;\n            _context12.next = 13;\n            return migrateCredential(inboundAccountCredential, inboundAccountFirebase);\n\n          case 13:\n            _context12.next = 15;\n            return logMigration(inboundUid, 'success');\n\n          case 15:\n            return _context12.abrupt(\"return\", {\n              user: auth.currentUser,\n              migratedProjects: migratedProjects\n            });\n\n          case 16:\n            _context12.prev = 16;\n            inboundAccountAuth.app.delete();\n            return _context12.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[2,, 16, 19]]);\n  }));\n  return _migrateAccount.apply(this, arguments);\n}\n\nfunction migrateCredential(_x10, _x11) {\n  return _migrateCredential.apply(this, arguments);\n}\n\nfunction _migrateCredential() {\n  _migrateCredential = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee13(credential, _ref2) {\n    var inboundAccountAuth;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            inboundAccountAuth = _ref2.auth;\n            _context13.next = 3;\n            return inboundAccountAuth.currentUser.unlink(credential.providerId);\n\n          case 3:\n            _context13.next = 5;\n            return auth.currentUser.linkAndRetrieveDataWithCredential(credential);\n\n          case 5:\n            _context13.next = 7;\n            return saveCredentialForCurrentUser(credential);\n\n          case 7:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _migrateCredential.apply(this, arguments);\n}\n\nfunction migrateProjects(_x12) {\n  return _migrateProjects.apply(this, arguments);\n}\n\nfunction _migrateProjects() {\n  _migrateProjects = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee14(_ref3) {\n    var inboundAccountAuth, loadinboundAccountDatabase, currentAccountDatabase, inboundAccountDatabase, allProjectsValue, allProjects;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            inboundAccountAuth = _ref3.auth, loadinboundAccountDatabase = _ref3.loadDatabase;\n            _context14.next = 3;\n            return loadDatabase();\n\n          case 3:\n            currentAccountDatabase = _context14.sent;\n            _context14.next = 6;\n            return loadinboundAccountDatabase();\n\n          case 6:\n            inboundAccountDatabase = _context14.sent;\n            _context14.next = 9;\n            return inboundAccountDatabase.ref(\"workspaces/\".concat(inboundAccountAuth.currentUser.uid, \"/projects\")).once('value');\n\n          case 9:\n            allProjectsValue = _context14.sent;\n\n            if (!isNull(allProjectsValue)) {\n              _context14.next = 12;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", []);\n\n          case 12:\n            allProjects = allProjectsValue.val();\n\n            if (!(isNull(allProjects) || isEmpty(allProjects))) {\n              _context14.next = 15;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", []);\n\n          case 15:\n            _context14.next = 17;\n            return currentAccountDatabase.ref(\"workspaces/\".concat(auth.currentUser.uid, \"/projects\")).update(allProjects);\n\n          case 17:\n            return _context14.abrupt(\"return\", values(allProjects));\n\n          case 18:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _migrateProjects.apply(this, arguments);\n}\n\nfunction logMigration(_x13, _x14) {\n  return _logMigration.apply(this, arguments);\n}\n\nfunction _logMigration() {\n  _logMigration = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee15(inboundUid, eventName) {\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            bugsnagClient.notify(new Error(\"Account migration \".concat(eventName)), {\n              metaData: {\n                migration: {\n                  inboundUid: inboundUid\n                }\n              },\n              severity: 'info'\n            });\n\n          case 1:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _logMigration.apply(this, arguments);\n}\n\nfunction signInWithGithub() {\n  return _signInWithGithub.apply(this, arguments);\n}\n\nfunction _signInWithGithub() {\n  _signInWithGithub = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee16() {\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            return _context16.abrupt(\"return\", auth.signInWithPopup(githubAuthProvider));\n\n          case 1:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _signInWithGithub.apply(this, arguments);\n}\n\nfunction signInWithGoogle() {\n  return _signInWithGoogle.apply(this, arguments);\n}\n\nfunction _signInWithGoogle() {\n  _signInWithGoogle = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee17() {\n    var gapi, googleUser, googleCredential;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            gapi = getGapiSync();\n            _context17.next = 3;\n            return gapi.auth2.getAuthInstance().signIn({\n              prompt: 'select_account'\n            });\n\n          case 3:\n            googleUser = _context17.sent;\n            googleCredential = googleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n            return _context17.abrupt(\"return\", auth.signInAndRetrieveDataWithCredential(googleCredential));\n\n          case 6:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _signInWithGoogle.apply(this, arguments);\n}\n\nexport function signOut() {\n  return _signOut.apply(this, arguments);\n}\n\nfunction _signOut() {\n  _signOut = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee18() {\n    var gapi;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return loadAndConfigureGapi();\n\n          case 2:\n            gapi = _context18.sent;\n            _context18.next = 5;\n            return gapi.auth2.getAuthInstance().isSignedIn.get();\n\n          case 5:\n            if (!_context18.sent) {\n              _context18.next = 7;\n              break;\n            }\n\n            gapi.auth2.getAuthInstance().signOut();\n\n          case 7:\n            return _context18.abrupt(\"return\", auth.signOut());\n\n          case 8:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _signOut.apply(this, arguments);\n}\n\nexport function saveUserCredential(_x15) {\n  return _saveUserCredential.apply(this, arguments);\n}\n\nfunction _saveUserCredential() {\n  _saveUserCredential = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee19(_ref4) {\n    var uid, credential;\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            uid = _ref4.user.uid, credential = _ref4.credential;\n            _context19.next = 3;\n            return saveCredentialForUser(uid, credential);\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n  return _saveUserCredential.apply(this, arguments);\n}\n\nexport function saveCredentialForCurrentUser(_x16) {\n  return _saveCredentialForCurrentUser.apply(this, arguments);\n}\n\nfunction _saveCredentialForCurrentUser() {\n  _saveCredentialForCurrentUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee20(credential) {\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.next = 2;\n            return saveCredentialForUser(auth.currentUser.uid, credential);\n\n          case 2:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _saveCredentialForCurrentUser.apply(this, arguments);\n}\n\nfunction saveCredentialForUser(_x17, _x18) {\n  return _saveCredentialForUser.apply(this, arguments);\n}\n\nfunction _saveCredentialForUser() {\n  _saveCredentialForUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee21(uid, credential) {\n    var database;\n    return regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            _context21.next = 2;\n            return loadDatabase();\n\n          case 2:\n            database = _context21.sent;\n            _context21.next = 5;\n            return database.ref(\"authTokens/\".concat(providerPath(uid, credential.providerId))).set(credential);\n\n          case 5:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n  return _saveCredentialForUser.apply(this, arguments);\n}\n\nfunction deleteCredentialForUser(_x19, _x20) {\n  return _deleteCredentialForUser.apply(this, arguments);\n}\n\nfunction _deleteCredentialForUser() {\n  _deleteCredentialForUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee22(uid, providerId) {\n    var database;\n    return regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _context22.next = 2;\n            return loadDatabase();\n\n          case 2:\n            database = _context22.sent;\n            _context22.next = 5;\n            return database.ref(\"authTokens/\".concat(providerPath(uid, providerId))).remove();\n\n          case 5:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n  return _deleteCredentialForUser.apply(this, arguments);\n}\n\nfunction providerPath(uid, providerId) {\n  return \"\".concat(uid, \"/\").concat(providerId.replace('.', '_'));\n}\n\nexport function startSessionHeartbeat() {\n  setInterval(setSessionUid, 1000);\n}\nexport function getSessionUid() {\n  return Cookies.get(VALID_SESSION_UID_COOKIE);\n}\nexport function setSessionUid() {\n  var uid = get(auth, 'currentUser.uid');\n\n  if (!isNil(uid)) {\n    Cookies.set(VALID_SESSION_UID_COOKIE, uid, {\n      expires: new Date(Date.now() + SESSION_TTL_MS)\n    });\n  }\n}",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/clients/firebase.js"],
    "names": [
      "Cookies",
      "get",
      "isEmpty",
      "isNil",
      "isNull",
      "omit",
      "values",
      "uuid",
      "once",
      "firebase",
      "bugsnagClient",
      "config",
      "retryingFailedImports",
      "getGapiSync",
      "loadAndConfigureGapi",
      "SCOPES",
      "GOOGLE_SCOPES",
      "GITHUB_SCOPES",
      "VALID_SESSION_UID_COOKIE",
      "SESSION_TTL_MS",
      "githubAuthProvider",
      "auth",
      "GithubAuthProvider",
      "scope",
      "addScope",
      "googleAuthProvider",
      "GoogleAuthProvider",
      "buildFirebase",
      "loadDatabase",
      "loadDatabaseSdk",
      "appName",
      "undefined",
      "app",
      "initializeApp",
      "apiKey",
      "firebaseApiKey",
      "authDomain",
      "firebaseApp",
      "databaseURL",
      "database",
      "onAuthStateChanged",
      "listener",
      "user",
      "workspace",
      "uid",
      "ref",
      "loadAllProjects",
      "userWorkspace",
      "child",
      "projects",
      "val",
      "getProjectforSnapshot",
      "project",
      "snapshotBlacklist",
      "createProjectSnapshot",
      "snapshotKey",
      "toString",
      "projectForSnapshot",
      "set",
      "loadProjectSnapshot",
      "event",
      "saveProject",
      "projectKey",
      "setWithPriority",
      "Date",
      "now",
      "loadCredentialsForUser",
      "credentialEvent",
      "signIn",
      "provider",
      "originalOnerror",
      "window",
      "onerror",
      "message",
      "toLowerCase",
      "includes",
      "signInWithGithub",
      "userCredential",
      "signInWithGoogle",
      "setTimeout",
      "linkGithub",
      "currentUser",
      "linkWithPopup",
      "credential",
      "unlinkGithub",
      "Promise",
      "all",
      "unlink",
      "deleteCredentialForUser",
      "migrateAccount",
      "inboundAccountCredential",
      "inboundAccountFirebase",
      "inboundAccountAuth",
      "signInAndRetrieveDataWithCredential",
      "inboundUid",
      "logMigration",
      "migrateProjects",
      "migratedProjects",
      "migrateCredential",
      "delete",
      "providerId",
      "linkAndRetrieveDataWithCredential",
      "saveCredentialForCurrentUser",
      "loadinboundAccountDatabase",
      "currentAccountDatabase",
      "inboundAccountDatabase",
      "allProjectsValue",
      "allProjects",
      "update",
      "eventName",
      "notify",
      "Error",
      "metaData",
      "migration",
      "severity",
      "signInWithPopup",
      "gapi",
      "auth2",
      "getAuthInstance",
      "prompt",
      "googleUser",
      "googleCredential",
      "getAuthResponse",
      "id_token",
      "signOut",
      "isSignedIn",
      "saveUserCredential",
      "saveCredentialForUser",
      "providerPath",
      "remove",
      "replace",
      "startSessionHeartbeat",
      "setInterval",
      "setSessionUid",
      "getSessionUid",
      "expires"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import Cookies from 'js-cookie';\nimport get from 'lodash-es/get';\nimport isEmpty from 'lodash-es/isEmpty';\nimport isNil from 'lodash-es/isNil';\nimport isNull from 'lodash-es/isNull';\nimport omit from 'lodash-es/omit';\nimport values from 'lodash-es/values';\nimport uuid from 'uuid/v4';\nimport once from 'lodash-es/once';\nimport {firebase} from '@firebase/app';\nimport '@firebase/auth';\n\nimport {bugsnagClient} from '../util/bugsnag';\nimport config from '../config';\nimport retryingFailedImports from '../util/retryingFailedImports';\nimport {\n  getGapiSync,\n  loadAndConfigureGapi,\n  SCOPES as GOOGLE_SCOPES,\n} from '../services/gapi';\n\nconst GITHUB_SCOPES = ['gist', 'public_repo', 'read:user', 'user:email'];\nconst VALID_SESSION_UID_COOKIE = 'firebaseAuth.validSessionUid';\nconst SESSION_TTL_MS = 5 * 60 * 1000;\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\nfor (const scope of GITHUB_SCOPES) {\n  githubAuthProvider.addScope(scope);\n}\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nfor (const scope of GOOGLE_SCOPES) {\n  googleAuthProvider.addScope(scope);\n}\n\nconst {auth, loadDatabase} = buildFirebase();\n\nasync function loadDatabaseSdk() {\n  return retryingFailedImports(() =>\n    import(\n      /* webpackChunkName: \"mainAsync\" */\n      '@firebase/database'\n    ),\n  );\n}\n\nfunction buildFirebase(appName = undefined) {\n  const app = firebase.initializeApp(\n    {\n      apiKey: config.firebaseApiKey,\n      authDomain: `${config.firebaseApp}.firebaseapp.com`,\n      databaseURL: `https://${config.firebaseApp}.firebaseio.com`,\n    },\n    appName,\n  );\n\n  return {\n    auth: firebase.auth(app),\n\n    loadDatabase: once(async () => {\n      await loadDatabaseSdk();\n      return firebase.database(app);\n    }),\n  };\n}\n\nexport function onAuthStateChanged(listener) {\n  return auth.onAuthStateChanged(user => {\n    listener({user});\n  });\n}\n\nasync function workspace(uid) {\n  const database = await loadDatabase();\n  return database.ref(`workspaces/${uid}`);\n}\n\nexport async function loadAllProjects(uid) {\n  const userWorkspace = await workspace(uid);\n  const projects = await userWorkspace.child('projects').once('value');\n  return values(projects.val() || {});\n}\n\nfunction getProjectforSnapshot(project) {\n  const snapshotBlacklist = ['externalLocations'];\n  return omit(project, snapshotBlacklist);\n}\n\nexport async function createProjectSnapshot(project) {\n  const snapshotKey = uuid().toString();\n  const database = await loadDatabase();\n  const projectForSnapshot = getProjectforSnapshot(project);\n  await database\n    .ref('snapshots')\n    .child(snapshotKey)\n    .set(projectForSnapshot);\n  return snapshotKey;\n}\n\nexport async function loadProjectSnapshot(snapshotKey) {\n  const database = await loadDatabase();\n  const event = await database\n    .ref('snapshots')\n    .child(snapshotKey)\n    .once('value');\n  return event.val();\n}\n\nexport async function saveProject(uid, project) {\n  const userWorkspace = await workspace(uid);\n  await userWorkspace\n    .child('projects')\n    .child(project.projectKey)\n    .setWithPriority(project, -Date.now());\n}\n\nexport async function loadCredentialsForUser(uid) {\n  const database = await loadDatabase();\n  const credentialEvent = await database.ref(`authTokens/${uid}`).once('value');\n  return values(credentialEvent.val());\n}\n\nexport async function signIn(provider) {\n  const originalOnerror = window.onerror;\n  window.onerror = message => message.toLowerCase().includes('network error');\n  try {\n    let userCredential;\n    if (provider === 'github') {\n      userCredential = await signInWithGithub();\n    } else if (provider === 'google') {\n      userCredential = await signInWithGoogle();\n    }\n    return userCredential;\n  } finally {\n    setTimeout(() => {\n      window.onerror = originalOnerror;\n    });\n  }\n}\n\nexport async function linkGithub() {\n  const {credential} = await auth.currentUser.linkWithPopup(githubAuthProvider);\n  return {user: auth.currentUser, credential};\n}\n\nexport async function unlinkGithub() {\n  await Promise.all([\n    auth.currentUser.unlink('github.com'),\n    deleteCredentialForUser(auth.currentUser.uid, 'github.com'),\n  ]);\n}\n\nexport async function migrateAccount(inboundAccountCredential) {\n  const inboundAccountFirebase = buildFirebase('migration');\n  const {auth: inboundAccountAuth} = inboundAccountFirebase;\n  try {\n    await inboundAccountAuth.signInAndRetrieveDataWithCredential(\n      inboundAccountCredential,\n    );\n    const inboundUid = inboundAccountAuth.currentUser.uid;\n    await logMigration(inboundUid, 'attempt');\n\n    const migratedProjects = await migrateProjects(inboundAccountFirebase);\n    await migrateCredential(inboundAccountCredential, inboundAccountFirebase);\n\n    await logMigration(inboundUid, 'success');\n\n    return {user: auth.currentUser, migratedProjects};\n  } finally {\n    inboundAccountAuth.app.delete();\n  }\n}\n\nasync function migrateCredential(credential, {auth: inboundAccountAuth}) {\n  await inboundAccountAuth.currentUser.unlink(credential.providerId);\n  await auth.currentUser.linkAndRetrieveDataWithCredential(credential);\n  await saveCredentialForCurrentUser(credential);\n}\n\nasync function migrateProjects({\n  auth: inboundAccountAuth,\n  loadDatabase: loadinboundAccountDatabase,\n}) {\n  const currentAccountDatabase = await loadDatabase();\n  const inboundAccountDatabase = await loadinboundAccountDatabase();\n\n  const allProjectsValue = await inboundAccountDatabase\n    .ref(`workspaces/${inboundAccountAuth.currentUser.uid}/projects`)\n    .once('value');\n\n  if (isNull(allProjectsValue)) {\n    return [];\n  }\n  const allProjects = allProjectsValue.val();\n\n  if (isNull(allProjects) || isEmpty(allProjects)) {\n    return [];\n  }\n\n  await currentAccountDatabase\n    .ref(`workspaces/${auth.currentUser.uid}/projects`)\n    .update(allProjects);\n\n  return values(allProjects);\n}\n\nasync function logMigration(inboundUid, eventName) {\n  bugsnagClient.notify(new Error(`Account migration ${eventName}`), {\n    metaData: {migration: {inboundUid}},\n    severity: 'info',\n  });\n}\n\nasync function signInWithGithub() {\n  return auth.signInWithPopup(githubAuthProvider);\n}\n\nasync function signInWithGoogle() {\n  const gapi = getGapiSync();\n  const googleUser = await gapi.auth2\n    .getAuthInstance()\n    .signIn({prompt: 'select_account'});\n  const googleCredential = googleAuthProvider.credential(\n    googleUser.getAuthResponse().id_token,\n  );\n  return auth.signInAndRetrieveDataWithCredential(googleCredential);\n}\n\nexport async function signOut() {\n  const gapi = await loadAndConfigureGapi();\n  if (await gapi.auth2.getAuthInstance().isSignedIn.get()) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n  return auth.signOut();\n}\n\nexport async function saveUserCredential({user: {uid}, credential}) {\n  await saveCredentialForUser(uid, credential);\n}\n\nexport async function saveCredentialForCurrentUser(credential) {\n  await saveCredentialForUser(auth.currentUser.uid, credential);\n}\n\nasync function saveCredentialForUser(uid, credential) {\n  const database = await loadDatabase();\n  await database\n    .ref(`authTokens/${providerPath(uid, credential.providerId)}`)\n    .set(credential);\n}\n\nasync function deleteCredentialForUser(uid, providerId) {\n  const database = await loadDatabase();\n  await database.ref(`authTokens/${providerPath(uid, providerId)}`).remove();\n}\n\nfunction providerPath(uid, providerId) {\n  return `${uid}/${providerId.replace('.', '_')}`;\n}\n\nexport function startSessionHeartbeat() {\n  setInterval(setSessionUid, 1000);\n}\n\nexport function getSessionUid() {\n  return Cookies.get(VALID_SESSION_UID_COOKIE);\n}\n\nexport function setSessionUid() {\n  const uid = get(auth, 'currentUser.uid');\n  if (!isNil(uid)) {\n    Cookies.set(VALID_SESSION_UID_COOKIE, uid, {\n      expires: new Date(Date.now() + SESSION_TTL_MS),\n    });\n  }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import classnames from 'classnames';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport map from 'lodash-es/map';\nimport partial from 'lodash-es/partial';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport libraries from '../../config/libraries';\nimport createMenu, { MenuItem } from './createMenu';\nimport LibraryPickerButton from './LibraryPickerButton';\nvar LibraryPicker = createMenu({\n  menuClass: 'top-bar__menu_left',\n  name: 'libraryPicker',\n  renderItems: function renderItems(_ref) {\n    var enabledLibraries = _ref.enabledLibraries,\n        onToggleLibrary = _ref.onToggleLibrary;\n    return map(libraries, function (library, key) {\n      var isActive = enabledLibraries.includes(key);\n      return React.createElement(MenuItem, {\n        isActive: isActive,\n        key: key,\n        onClick: partial(onToggleLibrary, key)\n      }, React.createElement(FontAwesomeIcon, {\n        className: classnames({\n          u__invisible: !isActive\n        }),\n        icon: faCheck\n      }), \" \".concat(library.name));\n    });\n  }\n})(LibraryPickerButton);\nLibraryPicker.propTypes = {\n  enabledLibraries: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onToggleLibrary: PropTypes.func.isRequired\n};\nexport default LibraryPicker;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/TopBar/LibraryPicker.jsx"
    ],
    "names": [
      "classnames",
      "faCheck",
      "FontAwesomeIcon",
      "map",
      "partial",
      "PropTypes",
      "React",
      "libraries",
      "createMenu",
      "MenuItem",
      "LibraryPickerButton",
      "LibraryPicker",
      "menuClass",
      "name",
      "renderItems",
      "enabledLibraries",
      "onToggleLibrary",
      "library",
      "key",
      "isActive",
      "includes",
      "u__invisible",
      "propTypes",
      "arrayOf",
      "string",
      "isRequired",
      "func"
    ],
    "mappings": "AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAAQC,OAAR,QAAsB,mCAAtB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,UAAP,IAAoBC,QAApB,QAAmC,cAAnC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,IAAMC,aAAa,GAAGH,UAAU,CAAC;AAC/BI,EAAAA,SAAS,EAAE,oBADoB;AAE/BC,EAAAA,IAAI,EAAE,eAFyB;AAI/BC,EAAAA,WAJ+B,6BAIkB;AAAA,QAApCC,gBAAoC,QAApCA,gBAAoC;AAAA,QAAlBC,eAAkB,QAAlBA,eAAkB;AAC/C,WAAOb,GAAG,CAACI,SAAD,EAAY,UAACU,OAAD,EAAUC,GAAV,EAAkB;AACtC,UAAMC,QAAQ,GAAGJ,gBAAgB,CAACK,QAAjB,CAA0BF,GAA1B,CAAjB;AAEA,aACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEC,QADZ;AAEE,QAAA,GAAG,EAAED,GAFP;AAGE,QAAA,OAAO,EAAEd,OAAO,CAACY,eAAD,EAAkBE,GAAlB;AAHlB,SAKE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAElB,UAAU,CAAC;AAACqB,UAAAA,YAAY,EAAE,CAACF;AAAhB,SAAD,CADvB;AAEE,QAAA,IAAI,EAAElB;AAFR,QALF,aASOgB,OAAO,CAACJ,IATf,EADF;AAaD,KAhBS,CAAV;AAiBD;AAtB8B,CAAD,CAAV,CAuBnBH,mBAvBmB,CAAtB;AAyBAC,aAAa,CAACW,SAAd,GAA0B;AACxBP,EAAAA,gBAAgB,EAAEV,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCC,UAD9B;AAExBT,EAAAA,eAAe,EAAEX,SAAS,CAACqB,IAAV,CAAeD;AAFR,CAA1B;AAKA,eAAed,aAAf",
    "sourcesContent": [
      "import classnames from 'classnames';\nimport {faCheck} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport map from 'lodash-es/map';\nimport partial from 'lodash-es/partial';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport libraries from '../../config/libraries';\n\nimport createMenu, {MenuItem} from './createMenu';\nimport LibraryPickerButton from './LibraryPickerButton';\n\nconst LibraryPicker = createMenu({\n  menuClass: 'top-bar__menu_left',\n  name: 'libraryPicker',\n\n  renderItems({enabledLibraries, onToggleLibrary}) {\n    return map(libraries, (library, key) => {\n      const isActive = enabledLibraries.includes(key);\n\n      return (\n        <MenuItem\n          isActive={isActive}\n          key={key}\n          onClick={partial(onToggleLibrary, key)}\n        >\n          <FontAwesomeIcon\n            className={classnames({u__invisible: !isActive})}\n            icon={faCheck}\n          />\n          {` ${library.name}`}\n        </MenuItem>\n      );\n    });\n  },\n})(LibraryPickerButton);\n\nLibraryPicker.propTypes = {\n  enabledLibraries: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onToggleLibrary: PropTypes.func.isRequired,\n};\n\nexport default LibraryPicker;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

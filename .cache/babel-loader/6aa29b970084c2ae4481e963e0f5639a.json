{
  "ast": null,
  "code": "/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar updateParsedComponent = require('../en/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = {\n  'domingo': 0,\n  'dom': 0,\n  'lunes': 1,\n  'lun': 1,\n  'martes': 2,\n  'mar': 2,\n  'miercoles': 3,\n  'miércoles': 3,\n  'mie': 3,\n  'jueves': 4,\n  'jue': 4,\n  'viernes': 5,\n  'vier': 5,\n  'sabado': 6,\n  'sábado': 6,\n  'sab': 6\n};\nvar PATTERN = new RegExp('(\\\\W|^)' + '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' + '(?:(este|pasado|pr[oó]ximo)\\\\s*)?' + '(' + Object.keys(DAYS_OFFSET).join('|') + ')' + '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' + '(?:\\\\s*(este|pasado|pr[óo]ximo)\\\\s*week)?' + '(?=\\\\W|$)', 'i');\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function ESWeekdayParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index + match[1].length;\n    var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n    var offset = DAYS_OFFSET[dayOfWeek];\n    if (offset === undefined) return null;\n    var modifier = null;\n    var prefix = match[PREFIX_GROUP];\n    var postfix = match[POSTFIX_GROUP];\n\n    if (prefix || postfix) {\n      var norm = prefix || postfix;\n      norm = norm.toLowerCase();\n\n      if (norm == 'pasado') {\n        modifier = 'this';\n      } else if (norm == 'próximo' || norm == 'proximo') {\n        modifier = 'next';\n      } else if (norm == 'este') {\n        modifier = 'this';\n      }\n    }\n\n    updateParsedComponent(result, ref, offset, modifier);\n    result.tags['ESWeekdayParser'] = true;\n    return result;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/parsers/es/ESWeekdayParser.js"
    ],
    "names": [
      "moment",
      "require",
      "Parser",
      "ParsedResult",
      "updateParsedComponent",
      "DAYS_OFFSET",
      "PATTERN",
      "RegExp",
      "Object",
      "keys",
      "join",
      "PREFIX_GROUP",
      "WEEKDAY_GROUP",
      "POSTFIX_GROUP",
      "exports",
      "ESWeekdayParser",
      "apply",
      "arguments",
      "pattern",
      "extract",
      "text",
      "ref",
      "match",
      "opt",
      "index",
      "length",
      "substr",
      "result",
      "dayOfWeek",
      "toLowerCase",
      "offset",
      "undefined",
      "modifier",
      "prefix",
      "postfix",
      "norm",
      "tags"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../en/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar':2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sabado': 6, 'sábado': 6, 'sab': 6,}\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:(este|pasado|pr[oó]ximo)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(este|pasado|pr[óo]ximo)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function ESWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        if (prefix || postfix) {\n            var norm = prefix || postfix;\n            norm = norm.toLowerCase();\n\n            if(norm == 'pasado') {\n                modifier = 'this';\n            }\n            else if(norm == 'próximo' || norm == 'proximo') {\n                modifier = 'next';\n            }\n            else if(norm== 'este') {\n                modifier =  'this';\n            }\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ESWeekdayParser'] = true;\n        return result;\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

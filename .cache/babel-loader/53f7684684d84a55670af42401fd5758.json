{
  "ast": null,
  "code": "function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { List, Map, Record } from 'immutable';\n\nvar Error =\n/*#__PURE__*/\nfunction (_Record) {\n  _inherits(Error, _Record);\n\n  function Error() {\n    _classCallCheck(this, Error);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Error).apply(this, arguments));\n  }\n\n  _createClass(Error, null, [{\n    key: \"fromJS\",\n    value: function fromJS(js) {\n      return new this(Object.assign({}, js, {\n        payload: new Map(js.payload || {}),\n        suppresses: new List(js.suppresses || [])\n      }));\n    }\n  }]);\n\n  return Error;\n}(Record({\n  row: null,\n  column: null,\n  reason: null,\n  payload: new Map(),\n  suppresses: new List(),\n  text: null,\n  raw: null,\n  type: 'error'\n}, 'Error'));\n\nexport { Error as default };",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/records/Error.js"],
    "names": [
      "List",
      "Map",
      "Record",
      "Error",
      "js",
      "Object",
      "assign",
      "payload",
      "suppresses",
      "row",
      "column",
      "reason",
      "text",
      "raw",
      "type"
    ],
    "mappings": ";;;;;;;;;;;;;;;;;;AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,QAAgC,WAAhC;;IAEqBC,K;;;;;;;;;;;;;2BAaLC,E,EAAI;AAChB,aAAO,IAAI,IAAJ,CACLC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,EAAlB,EAAsB;AACpBG,QAAAA,OAAO,EAAE,IAAIN,GAAJ,CAAQG,EAAE,CAACG,OAAH,IAAc,EAAtB,CADW;AAEpBC,QAAAA,UAAU,EAAE,IAAIR,IAAJ,CAASI,EAAE,CAACI,UAAH,IAAiB,EAA1B;AAFQ,OAAtB,CADK,CAAP;AAMD;;;;EApBgCN,MAAM,CACvC;AACEO,EAAAA,GAAG,EAAE,IADP;AAEEC,EAAAA,MAAM,EAAE,IAFV;AAGEC,EAAAA,MAAM,EAAE,IAHV;AAIEJ,EAAAA,OAAO,EAAE,IAAIN,GAAJ,EAJX;AAKEO,EAAAA,UAAU,EAAE,IAAIR,IAAJ,EALd;AAMEY,EAAAA,IAAI,EAAE,IANR;AAOEC,EAAAA,GAAG,EAAE,IAPP;AAQEC,EAAAA,IAAI,EAAE;AARR,CADuC,EAWvC,OAXuC,C;;SAApBX,K",
    "sourcesContent": [
      "import {List, Map, Record} from 'immutable';\n\nexport default class Error extends Record(\n  {\n    row: null,\n    column: null,\n    reason: null,\n    payload: new Map(),\n    suppresses: new List(),\n    text: null,\n    raw: null,\n    type: 'error',\n  },\n  'Error',\n) {\n  static fromJS(js) {\n    return new this(\n      Object.assign({}, js, {\n        payload: new Map(js.payload || {}),\n        suppresses: new List(js.suppresses || []),\n      }),\n    );\n  }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

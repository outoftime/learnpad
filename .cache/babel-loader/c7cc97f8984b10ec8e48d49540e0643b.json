{
  "ast": null,
  "code": "/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp('(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+|半|幾)(?:\\\\s*)' + '(?:個)?' + '(秒(?:鐘)?|分鐘|小時|鐘|日|天|星期|禮拜|月|年)' + '(?:(?:之|過)?後|(?:之)?內)', 'i');\nvar NUMBER_GROUP = 1;\nvar UNIT_GROUP = 2;\n\nexports.Parser = function ZHHantCasualDateParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index;\n    text = match[0];\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    var number = parseInt(match[NUMBER_GROUP]);\n\n    if (isNaN(number)) {\n      number = util.zhStringToNumber(match[NUMBER_GROUP]);\n    }\n\n    if (isNaN(number)) {\n      var string = match[NUMBER_GROUP];\n\n      if (string === '幾') {\n        number = 3;\n      } else if (string === '半') {\n        number = 0.5;\n      } else {\n        //just in case\n        return null;\n      }\n    }\n\n    var date = moment(ref);\n    var unit = match[UNIT_GROUP];\n    var unitAbbr = unit[0];\n\n    if (unitAbbr.match(/[日天星禮月年]/)) {\n      if (unitAbbr == '日' || unitAbbr == '天') {\n        date.add(number, 'd');\n      } else if (unitAbbr == '星' || unitAbbr == '禮') {\n        date.add(number * 7, 'd');\n      } else if (unitAbbr == '月') {\n        date.add(number, 'month');\n      } else if (unitAbbr == '年') {\n        date.add(number, 'year');\n      }\n\n      result.start.assign('year', date.year());\n      result.start.assign('month', date.month() + 1);\n      result.start.assign('day', date.date());\n      return result;\n    }\n\n    if (unitAbbr == '秒') {\n      date.add(number, 'second');\n    } else if (unitAbbr == '分') {\n      date.add(number, 'minute');\n    } else if (unitAbbr == '小' || unitAbbr == '鐘') {\n      date.add(number, 'hour');\n    }\n\n    result.start.imply('year', date.year());\n    result.start.imply('month', date.month() + 1);\n    result.start.imply('day', date.date());\n    result.start.assign('hour', date.hour());\n    result.start.assign('minute', date.minute());\n    result.start.assign('second', date.second());\n    result.tags.ZHHantDeadlineFormatParser = true;\n    return result;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/parsers/zh-Hant/ZHHantDeadlineFormatParser.js"
    ],
    "names": [
      "moment",
      "require",
      "Parser",
      "ParsedResult",
      "util",
      "PATTERN",
      "RegExp",
      "Object",
      "keys",
      "NUMBER",
      "join",
      "NUMBER_GROUP",
      "UNIT_GROUP",
      "exports",
      "ZHHantCasualDateParser",
      "apply",
      "arguments",
      "pattern",
      "extract",
      "text",
      "ref",
      "match",
      "opt",
      "index",
      "result",
      "number",
      "parseInt",
      "isNaN",
      "zhStringToNumber",
      "string",
      "date",
      "unit",
      "unitAbbr",
      "add",
      "start",
      "assign",
      "year",
      "month",
      "imply",
      "hour",
      "minute",
      "second",
      "tags",
      "ZHHantDeadlineFormatParser"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+|半|幾)(?:\\\\s*)' +\n    '(?:個)?' +\n    '(秒(?:鐘)?|分鐘|小時|鐘|日|天|星期|禮拜|月|年)' +\n    '(?:(?:之|過)?後|(?:之)?內)', 'i'\n);\n\nvar NUMBER_GROUP = 1;\nvar UNIT_GROUP = 2;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n      var index = match.index;\n      text  = match[0];\n\n      var result = new ParsedResult({\n          index: index,\n          text: text,\n          ref: ref\n      });\n\n      var number = parseInt(match[NUMBER_GROUP]);\n      if (isNaN(number)){\n        number = util.zhStringToNumber(match[NUMBER_GROUP]);\n      }\n\n      if (isNaN(number)){\n        var string = match[NUMBER_GROUP];\n        if (string === '幾'){\n          number = 3;\n        }else if(string === '半'){\n          number = 0.5;\n        }else{\n\n          //just in case\n          return null;\n        }\n      }\n\n      var date = moment(ref);\n      var unit = match[UNIT_GROUP];\n      var unitAbbr = unit[0];\n\n      if (unitAbbr.match(/[日天星禮月年]/)){\n        if(unitAbbr == '日' || unitAbbr == '天'){\n          date.add(number, 'd');\n        }else if(unitAbbr == '星' || unitAbbr == '禮'){\n          date.add(number * 7, 'd');\n        }else if(unitAbbr == '月'){\n          date.add(number, 'month');\n        }else if(unitAbbr == '年'){\n          date.add(number, 'year');\n        }\n\n        result.start.assign('year', date.year());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('day', date.date());\n        return result;\n      }\n\n      if(unitAbbr == '秒'){\n        date.add(number, 'second');\n      }else if(unitAbbr == '分'){\n        date.add(number, 'minute');\n      }else if(unitAbbr == '小' || unitAbbr == '鐘'){\n        date.add(number, 'hour');\n      }\n\n      result.start.imply('year', date.year());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('day', date.date());\n      result.start.assign('hour', date.hour());\n      result.start.assign('minute', date.minute());\n      result.start.assign('second', date.second());\n      result.tags.ZHHantDeadlineFormatParser = true;\n      return result;\n    };\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

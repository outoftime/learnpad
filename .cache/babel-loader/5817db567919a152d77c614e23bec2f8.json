{"ast":null,"code":"import { Map } from 'immutable';\nimport { EditorLocation, Notification, UiState } from '../records';\nvar defaultState = new UiState();\n\nfunction addNotification(state, type, severity) {\n  var metadata = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return state.setIn(['notifications', type], new Notification({\n    type: type,\n    severity: severity,\n    metadata: new Map(metadata)\n  }));\n}\n\nfunction dismissNotification(state, type) {\n  return state.update('notifications', function (notifications) {\n    return notifications.delete(type);\n  });\n}\n\nfunction closeTopBarMenu(state, menuToClose) {\n  return state.update('openTopBarMenu', function (menu) {\n    return menu === menuToClose ? null : menu;\n  });\n}\n/* eslint-disable complexity */\n\n\nexport default function ui(stateIn, action) {\n  var state = stateIn;\n\n  if (state === undefined) {\n    state = defaultState;\n  }\n\n  switch (action.type) {\n    case 'CHANGE_CURRENT_PROJECT':\n      return state.set('isEditingInstructions', false).update('openTopBarMenu', function (menu) {\n        return menu === 'projectPicker' ? null : menu;\n      }).set('archivedViewOpen', false);\n\n    case 'PROJECT_CREATED':\n      return state.set('isEditingInstructions', false);\n\n    case 'UPDATE_PROJECT_SOURCE':\n      return state.set('isTyping', true).deleteIn(['notifications', 'snapshot-created']);\n\n    case 'USER_DONE_TYPING':\n      return state.set('isTyping', false);\n\n    case 'FOCUS_LINE':\n      return state.set('requestedFocusedLine', new EditorLocation({\n        component: action.payload.component,\n        line: action.payload.line,\n        column: action.payload.column\n      }));\n\n    case 'CLEAR_CONSOLE_ENTRIES':\n      return state.set('requestedFocusedLine', new EditorLocation({\n        component: 'console',\n        line: 0,\n        column: 0\n      }));\n\n    case 'EDITOR_FOCUSED_REQUESTED_LINE':\n      return state.set('requestedFocusedLine', null);\n\n    case 'START_DRAG_COLUMN_DIVIDER':\n      return state.set('isDraggingColumnDivider', true);\n\n    case 'STOP_DRAG_COLUMN_DIVIDER':\n      return state.set('isDraggingColumnDivider', false);\n\n    case 'GIST_NOT_FOUND':\n      return addNotification(state, 'gist-import-not-found', 'error', {\n        gistId: action.payload.gistId\n      });\n\n    case 'GIST_IMPORT_ERROR':\n      return addNotification(state, 'gist-import-error', 'error', {\n        gistId: action.payload.gistId\n      });\n\n    case 'NOTIFICATION_TRIGGERED':\n      return addNotification(state, action.payload.type, action.payload.severity, action.payload.metadata);\n\n    case 'USER_DISMISSED_NOTIFICATION':\n      return dismissNotification(state, action.payload.type);\n\n    case 'UPDATE_NOTIFICATION_METADATA':\n      return state.updateIn(['notifications', action.payload.type, 'metadata'], function (metadata) {\n        return metadata.merge(action.payload.metadata);\n      });\n\n    case 'USER_LOGGED_OUT':\n    case 'LINK_GITHUB_IDENTITY':\n    case 'UNLINK_GITHUB_IDENTITY':\n      return closeTopBarMenu(state, 'currentUser');\n\n    case 'IDENTITY_UNLINKED':\n      return addNotification(state, 'identity-unlinked', 'notice');\n\n    case 'SNAPSHOT_CREATED':\n      return addNotification(state, 'snapshot-created', 'notice', {\n        snapshotKey: action.payload\n      });\n\n    case 'APPLICATION_LOADED':\n      if (action.payload.isExperimental) {\n        return state.set('isExperimental', true);\n      }\n\n      return state;\n\n    case 'SNAPSHOT_EXPORT_ERROR':\n      return addNotification(state, 'snapshot-export-error', 'error');\n\n    case 'SNAPSHOT_IMPORT_ERROR':\n      return addNotification(state, 'snapshot-import-error', 'error');\n\n    case 'SNAPSHOT_NOT_FOUND':\n      return addNotification(state, 'snapshot-not-found', 'error');\n\n    case 'TOGGLE_EDITOR_TEXT_SIZE':\n      return state.update('isTextSizeLarge', function (isTextSizeLarge) {\n        return !isTextSizeLarge;\n      });\n\n    case 'TOGGLE_TOP_BAR_MENU':\n      return state.update('openTopBarMenu', function (menu) {\n        return menu === action.payload ? null : action.payload;\n      });\n\n    case 'CLOSE_TOP_BAR_MENU':\n      return state.update('openTopBarMenu', function (menu) {\n        return menu === action.payload ? null : menu;\n      });\n\n    case 'PROJECT_EXPORT_NOT_DISPLAYED':\n      return addNotification(state, 'project-export-complete', 'notice', action.payload);\n\n    case 'PROJECT_EXPORT_ERROR':\n      if (action.payload.name === 'EmptyGistError') {\n        return addNotification(state, 'empty-gist', 'error');\n      }\n\n      return addNotification(state, \"\".concat(action.payload.exportType, \"-export-error\"), 'error', action.payload);\n\n    case 'PROJECT_COMPILATION_FAILED':\n      return addNotification(state, 'project-compilation-failed', 'error');\n\n    case 'PROJECT_COMPILED':\n      return dismissNotification(state, 'project-compilation-failed');\n\n    case 'START_EDITING_INSTRUCTIONS':\n      return state.set('isEditingInstructions', true);\n\n    case 'CANCEL_EDITING_INSTRUCTIONS':\n    case 'UPDATE_PROJECT_INSTRUCTIONS':\n      return state.set('isEditingInstructions', false);\n\n    case 'SHOW_SAVE_INDICATOR':\n      return state.set('saveIndicatorShown', true);\n\n    case 'HIDE_SAVE_INDICATOR':\n      return state.set('saveIndicatorShown', false);\n\n    case 'TOGGLE_ARCHIVED_VIEW':\n      return state.update('archivedViewOpen', function (archivedViewOpen) {\n        return !archivedViewOpen;\n      });\n\n    case 'IDENTITY_LINKED':\n      return addNotification(state, 'identity-linked', 'notice', {\n        provider: action.payload.credential.providerId\n      });\n\n    case 'LINK_IDENTITY_FAILED':\n      return addNotification(state, 'link-identity-failed', 'error');\n\n    case 'OPEN_ASSIGNMENT_CREATOR':\n      return state.setIn(['isAssignmentCreatorOpen'], true);\n\n    case 'CLOSE_ASSIGNMENT_CREATOR':\n      return state.setIn(['isAssignmentCreatorOpen'], false);\n\n    case 'ASSIGNMENT_CREATED':\n      return addNotification(state, 'project-export-complete', 'notice', action.payload.assignment).setIn(['isAssignmentCreatorOpen'], false);\n\n    case 'GAPI_CLIENT_UNAVAILABLE':\n      return addNotification(state, 'gapi-client-unavailable', 'error');\n\n    case 'ASSIGNMENT_NOT_CREATED':\n      return addNotification(state, 'assignment-not-created', 'error').setIn(['isAssignmentCreatorOpen'], false);\n\n    case 'OPEN_LOGIN_PROMPT':\n      return state.set('isLoginPromptOpen', true);\n\n    case 'CLOSE_LOGIN_PROMPT':\n    case 'LOG_IN':\n      return state.set('isLoginPromptOpen', false);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/peter/Desktop/code/popcode/src/reducers/ui.js"],"names":["Map","EditorLocation","Notification","UiState","defaultState","addNotification","state","type","severity","metadata","setIn","dismissNotification","update","notifications","delete","closeTopBarMenu","menuToClose","menu","ui","stateIn","action","undefined","set","deleteIn","component","payload","line","column","gistId","updateIn","merge","snapshotKey","isExperimental","isTextSizeLarge","name","exportType","archivedViewOpen","provider","credential","providerId","assignment"],"mappings":"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","sourcesContent":["import {Map} from 'immutable';\n\nimport {EditorLocation, Notification, UiState} from '../records';\n\nconst defaultState = new UiState();\n\nfunction addNotification(state, type, severity, metadata = {}) {\n  return state.setIn(\n    ['notifications', type],\n    new Notification({type, severity, metadata: new Map(metadata)}),\n  );\n}\n\nfunction dismissNotification(state, type) {\n  return state.update(\n    'notifications',\n    notifications => notifications.delete(type),\n  );\n}\n\nfunction closeTopBarMenu(state, menuToClose) {\n  return state.update(\n    'openTopBarMenu',\n    menu => menu === menuToClose ? null : menu,\n  );\n}\n\n/* eslint-disable complexity */\nexport default function ui(stateIn, action) {\n  let state = stateIn;\n  if (state === undefined) {\n    state = defaultState;\n  }\n\n  switch (action.type) {\n    case 'CHANGE_CURRENT_PROJECT':\n      return state.\n        set('isEditingInstructions', false).\n        update(\n          'openTopBarMenu',\n          menu => menu === 'projectPicker' ? null : menu,\n        ).set('archivedViewOpen', false);\n\n    case 'PROJECT_CREATED':\n      return state.set('isEditingInstructions', false);\n\n    case 'UPDATE_PROJECT_SOURCE':\n      return state.\n        set('isTyping', true).\n        deleteIn(['notifications', 'snapshot-created']);\n\n    case 'USER_DONE_TYPING':\n      return state.set('isTyping', false);\n\n    case 'FOCUS_LINE':\n      return state.set(\n        'requestedFocusedLine',\n        new EditorLocation({\n          component: action.payload.component,\n          line: action.payload.line,\n          column: action.payload.column,\n        }),\n      );\n\n    case 'CLEAR_CONSOLE_ENTRIES':\n      return state.set(\n        'requestedFocusedLine',\n        new EditorLocation({\n          component: 'console',\n          line: 0,\n          column: 0,\n        }),\n      );\n\n    case 'EDITOR_FOCUSED_REQUESTED_LINE':\n      return state.set('requestedFocusedLine', null);\n\n    case 'START_DRAG_COLUMN_DIVIDER':\n      return state.set('isDraggingColumnDivider', true);\n\n    case 'STOP_DRAG_COLUMN_DIVIDER':\n      return state.set('isDraggingColumnDivider', false);\n\n    case 'GIST_NOT_FOUND':\n      return addNotification(\n        state,\n        'gist-import-not-found',\n        'error',\n        {gistId: action.payload.gistId},\n      );\n\n    case 'GIST_IMPORT_ERROR':\n      return addNotification(\n        state,\n        'gist-import-error',\n        'error',\n        {gistId: action.payload.gistId},\n      );\n\n    case 'NOTIFICATION_TRIGGERED':\n      return addNotification(\n        state,\n        action.payload.type,\n        action.payload.severity,\n        action.payload.metadata,\n      );\n\n    case 'USER_DISMISSED_NOTIFICATION':\n      return dismissNotification(state, action.payload.type);\n\n    case 'UPDATE_NOTIFICATION_METADATA':\n      return state.updateIn(\n        ['notifications', action.payload.type, 'metadata'],\n        metadata => metadata.merge(action.payload.metadata),\n      );\n\n    case 'USER_LOGGED_OUT':\n    case 'LINK_GITHUB_IDENTITY':\n    case 'UNLINK_GITHUB_IDENTITY':\n      return closeTopBarMenu(state, 'currentUser');\n\n    case 'IDENTITY_UNLINKED':\n      return addNotification(\n        state,\n        'identity-unlinked',\n        'notice',\n      );\n\n    case 'SNAPSHOT_CREATED':\n      return addNotification(\n        state,\n        'snapshot-created',\n        'notice',\n        {snapshotKey: action.payload},\n      );\n\n    case 'APPLICATION_LOADED':\n      if (action.payload.isExperimental) {\n        return state.set('isExperimental', true);\n      }\n      return state;\n\n    case 'SNAPSHOT_EXPORT_ERROR':\n      return addNotification(state, 'snapshot-export-error', 'error');\n\n    case 'SNAPSHOT_IMPORT_ERROR':\n      return addNotification(state, 'snapshot-import-error', 'error');\n\n    case 'SNAPSHOT_NOT_FOUND':\n      return addNotification(state, 'snapshot-not-found', 'error');\n\n    case 'TOGGLE_EDITOR_TEXT_SIZE':\n      return state.update(\n        'isTextSizeLarge',\n        isTextSizeLarge => !isTextSizeLarge,\n      );\n\n    case 'TOGGLE_TOP_BAR_MENU':\n      return state.update(\n        'openTopBarMenu',\n        menu => menu === action.payload ? null : action.payload,\n      );\n\n    case 'CLOSE_TOP_BAR_MENU':\n      return state.update(\n        'openTopBarMenu',\n        menu => menu === action.payload ? null : menu,\n      );\n\n    case 'PROJECT_EXPORT_NOT_DISPLAYED':\n      return addNotification(\n        state,\n        'project-export-complete',\n        'notice',\n        action.payload,\n      );\n\n    case 'PROJECT_EXPORT_ERROR':\n      if (action.payload.name === 'EmptyGistError') {\n        return addNotification(\n          state,\n          'empty-gist',\n          'error',\n        );\n      }\n      return addNotification(\n        state,\n        `${action.payload.exportType}-export-error`,\n        'error',\n        action.payload,\n      );\n\n    case 'PROJECT_COMPILATION_FAILED':\n      return addNotification(\n        state,\n        'project-compilation-failed',\n        'error',\n      );\n\n    case 'PROJECT_COMPILED':\n      return dismissNotification(state, 'project-compilation-failed');\n\n    case 'START_EDITING_INSTRUCTIONS':\n      return state.set('isEditingInstructions', true);\n\n    case 'CANCEL_EDITING_INSTRUCTIONS':\n    case 'UPDATE_PROJECT_INSTRUCTIONS':\n      return state.set('isEditingInstructions', false);\n\n    case 'SHOW_SAVE_INDICATOR':\n      return state.set('saveIndicatorShown', true);\n\n    case 'HIDE_SAVE_INDICATOR':\n      return state.set('saveIndicatorShown', false);\n    case 'TOGGLE_ARCHIVED_VIEW':\n      return state.update(\n        'archivedViewOpen',\n        archivedViewOpen => !archivedViewOpen,\n      );\n\n    case 'IDENTITY_LINKED':\n      return addNotification(\n        state,\n        'identity-linked',\n        'notice',\n        {provider: action.payload.credential.providerId},\n      );\n\n    case 'LINK_IDENTITY_FAILED':\n      return addNotification(state, 'link-identity-failed', 'error');\n\n    case 'OPEN_ASSIGNMENT_CREATOR':\n      return state.setIn(\n        ['isAssignmentCreatorOpen'],\n        true,\n      );\n\n    case 'CLOSE_ASSIGNMENT_CREATOR':\n      return state.setIn(\n        ['isAssignmentCreatorOpen'],\n        false,\n      );\n\n    case 'ASSIGNMENT_CREATED':\n      return addNotification(\n        state,\n        'project-export-complete',\n        'notice',\n        action.payload.assignment,\n      ).setIn(\n        ['isAssignmentCreatorOpen'],\n        false,\n      );\n\n    case 'GAPI_CLIENT_UNAVAILABLE':\n      return addNotification(state, 'gapi-client-unavailable', 'error');\n\n    case 'ASSIGNMENT_NOT_CREATED':\n      return addNotification(\n        state,\n        'assignment-not-created',\n        'error',\n      ).setIn(\n        ['isAssignmentCreatorOpen'],\n        false,\n      );\n\n    case 'OPEN_LOGIN_PROMPT':\n      return state.set('isLoginPromptOpen', true);\n\n    case 'CLOSE_LOGIN_PROMPT':\n    case 'LOG_IN':\n      return state.set('isLoginPromptOpen', false);\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{
  "ast": null,
  "code": "/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = {\n  'sonntag': 0,\n  'so': 0,\n  'montag': 1,\n  'mo': 1,\n  'dienstag': 2,\n  'di': 2,\n  'mittwoch': 3,\n  'mi': 3,\n  'donnerstag': 4,\n  'do': 4,\n  'freitag': 5,\n  'fr': 5,\n  'samstag': 6,\n  'sa': 6\n};\nvar PATTERN = new RegExp('(\\\\W|^)' + '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' + '(?:a[mn]\\\\s*?)?' + '(?:(diese[mn]|letzte[mn]|n(?:ä|ae)chste[mn])\\\\s*)?' + '(' + Object.keys(DAYS_OFFSET).join('|') + ')' + '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' + '(?:\\\\s*(diese|letzte|n(?:ä|ae)chste)\\\\s*woche)?' + '(?=\\\\W|$)', 'i');\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function DEWeekdayParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index + match[1].length;\n    var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n    var offset = DAYS_OFFSET[dayOfWeek];\n    if (offset === undefined) return null;\n    var startMoment = moment(ref);\n    var prefix = match[PREFIX_GROUP];\n    var postfix = match[POSTFIX_GROUP];\n    var refOffset = startMoment.day();\n    var norm = prefix || postfix;\n    norm = norm || '';\n    norm = norm.toLowerCase();\n\n    if (/letzte/.test(norm)) {\n      startMoment.day(offset - 7);\n    } else if (/n(?:ä|ae)chste/.test(norm)) {\n      startMoment.day(offset + 7);\n    } else if (/diese/.test(norm)) {\n      if (opt.forwardDate && refOffset > offset) {\n        startMoment.day(offset + 7);\n      } else {\n        startMoment.day(offset);\n      }\n    } else {\n      if (opt.forwardDate && refOffset > offset) {\n        startMoment.day(offset + 7);\n      } else if (!opt.forwardDate && Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n        startMoment.day(offset - 7);\n      } else if (!opt.forwardDate && Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n        startMoment.day(offset + 7);\n      } else {\n        startMoment.day(offset);\n      }\n    }\n\n    result.start.assign('weekday', offset);\n    result.start.imply('day', startMoment.date());\n    result.start.imply('month', startMoment.month() + 1);\n    result.start.imply('year', startMoment.year());\n    return result;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/parsers/de/DEWeekdayParser.js"
    ],
    "names": [
      "moment",
      "require",
      "Parser",
      "ParsedResult",
      "DAYS_OFFSET",
      "PATTERN",
      "RegExp",
      "Object",
      "keys",
      "join",
      "PREFIX_GROUP",
      "WEEKDAY_GROUP",
      "POSTFIX_GROUP",
      "exports",
      "DEWeekdayParser",
      "apply",
      "arguments",
      "pattern",
      "extract",
      "text",
      "ref",
      "match",
      "opt",
      "index",
      "length",
      "substr",
      "result",
      "dayOfWeek",
      "toLowerCase",
      "offset",
      "undefined",
      "startMoment",
      "prefix",
      "postfix",
      "refOffset",
      "day",
      "norm",
      "test",
      "forwardDate",
      "Math",
      "abs",
      "start",
      "assign",
      "imply",
      "date",
      "month",
      "year"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = {\n    'sonntag': 0, 'so': 0,\n    'montag': 1, 'mo': 1,\n    'dienstag': 2, 'di': 2,\n    'mittwoch': 3, 'mi': 3,\n    'donnerstag': 4, 'do': 4,\n    'freitag': 5, 'fr': 5,\n    'samstag': 6, 'sa': 6\n};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:a[mn]\\\\s*?)?' +\n    '(?:(diese[mn]|letzte[mn]|n(?:ä|ae)chste[mn])\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(diese|letzte|n(?:ä|ae)chste)\\\\s*woche)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function DEWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var startMoment = moment(ref);\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n\n        var refOffset = startMoment.day();\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n        if (/letzte/.test(norm)) {\n            startMoment.day(offset - 7);\n        } else if (/n(?:ä|ae)chste/.test(norm)) {\n            startMoment.day(offset + 7);\n        } else if (/diese/.test(norm)) {\n            if ( opt.forwardDate && refOffset > offset ) {\n                startMoment.day(offset + 7);\n            } else {\n                startMoment.day(offset);\n            }\n        } else {\n            if ( opt.forwardDate && refOffset > offset ) {\n                startMoment.day(offset + 7);\n            } else if (!opt.forwardDate && Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n                startMoment.day(offset - 7);\n            } else if (!opt.forwardDate && Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n                startMoment.day(offset + 7);\n            } else {\n                startMoment.day(offset);\n            }\n        }\n\n        result.start.assign('weekday', offset);\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n        return result;\n    }\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

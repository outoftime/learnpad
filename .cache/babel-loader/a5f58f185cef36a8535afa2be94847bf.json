{
  "ast": null,
  "code": "/* eslint-disable react/no-multi-comp */\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport constant from 'lodash-es/constant';\nimport noop from 'lodash-es/noop';\nimport onClickOutside from 'react-onclickoutside';\nimport preventClickthrough from 'react-prevent-clickthrough';\nimport property from 'lodash-es/property';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { closeTopBarMenu, toggleTopBarMenu } from '../../actions';\nimport { getOpenTopBarMenu } from '../../selectors';\nexport function MenuItem(_ref) {\n  var children = _ref.children,\n      isActive = _ref.isActive,\n      isDisabled = _ref.isDisabled,\n      onClick = _ref.onClick;\n  return React.createElement(\"div\", {\n    className: classnames('top-bar__menu-item', {\n      'top-bar__menu-item_active': isActive,\n      'top-bar__menu-item_disabled': isDisabled\n    }),\n    onClick: isDisabled ? noop : onClick\n  }, children);\n}\nMenuItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  isActive: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\nMenuItem.defaultProps = {\n  isActive: false,\n  isDisabled: false\n};\nexport default function createMenu(_ref2) {\n  var _ref2$isVisible = _ref2.isVisible,\n      isVisible = _ref2$isVisible === void 0 ? constant(true) : _ref2$isVisible,\n      renderItems = _ref2.renderItems,\n      name = _ref2.name,\n      menuClass = _ref2.menuClass,\n      buttonClass = _ref2.buttonClass;\n\n  function mapStateToProps(state) {\n    var isOpen = getOpenTopBarMenu(state) === name;\n    return {\n      isOpen: isOpen,\n      disableOnClickOutside: !isOpen\n    };\n  }\n\n  function mapDispatchToProps(dispatch) {\n    return {\n      onClose: function onClose() {\n        dispatch(closeTopBarMenu(name));\n      },\n      onToggle: function onToggle() {\n        dispatch(toggleTopBarMenu(name));\n      }\n    };\n  }\n\n  return function createMenuWithMappedProps(MenuLaunchButton) {\n    function Menu(props) {\n      if (!isVisible(props)) {\n        return null;\n      }\n\n      var isOpen = props.isOpen,\n          onToggle = props.onToggle;\n      var menu = isOpen ? React.createElement(\"div\", {\n        className: classnames('top-bar__menu', menuClass),\n        onClick: preventClickthrough\n      }, renderItems(props)) : null;\n      return React.createElement(\"div\", {\n        className: classnames('top-bar__menu-button', buttonClass, {\n          'top-bar__menu-button_active': isOpen\n        }),\n        onClick: onToggle\n      }, React.createElement(MenuLaunchButton, props), menu);\n    }\n\n    Menu.displayName = \"Menu(\".concat(name, \")\");\n    Menu.propTypes = {\n      isOpen: PropTypes.bool.isRequired,\n      onToggle: PropTypes.func.isRequired\n    };\n    return connect(mapStateToProps, mapDispatchToProps)(onClickOutside(Menu, {\n      handleClickOutside: property('props.onClose')\n    }));\n  };\n}",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/TopBar/createMenu.jsx"
    ],
    "names": [
      "classnames",
      "connect",
      "constant",
      "noop",
      "onClickOutside",
      "preventClickthrough",
      "property",
      "PropTypes",
      "React",
      "closeTopBarMenu",
      "toggleTopBarMenu",
      "getOpenTopBarMenu",
      "MenuItem",
      "children",
      "isActive",
      "isDisabled",
      "onClick",
      "propTypes",
      "node",
      "isRequired",
      "bool",
      "func",
      "defaultProps",
      "createMenu",
      "isVisible",
      "renderItems",
      "name",
      "menuClass",
      "buttonClass",
      "mapStateToProps",
      "state",
      "isOpen",
      "disableOnClickOutside",
      "mapDispatchToProps",
      "dispatch",
      "onClose",
      "onToggle",
      "createMenuWithMappedProps",
      "MenuLaunchButton",
      "Menu",
      "props",
      "menu",
      "displayName",
      "handleClickOutside"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/* eslint-disable react/no-multi-comp */\n\nimport classnames from 'classnames';\nimport {connect} from 'react-redux';\nimport constant from 'lodash-es/constant';\nimport noop from 'lodash-es/noop';\nimport onClickOutside from 'react-onclickoutside';\nimport preventClickthrough from 'react-prevent-clickthrough';\nimport property from 'lodash-es/property';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {closeTopBarMenu, toggleTopBarMenu} from '../../actions';\nimport {getOpenTopBarMenu} from '../../selectors';\n\nexport function MenuItem({children, isActive, isDisabled, onClick}) {\n  return (\n    <div\n      className={classnames('top-bar__menu-item', {\n        'top-bar__menu-item_active': isActive,\n        'top-bar__menu-item_disabled': isDisabled,\n      })}\n      onClick={isDisabled ? noop : onClick}\n    >\n      {children}\n    </div>\n  );\n}\n\nMenuItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  isActive: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nMenuItem.defaultProps = {\n  isActive: false,\n  isDisabled: false,\n};\n\nexport default function createMenu({\n  isVisible = constant(true),\n  renderItems,\n  name,\n  menuClass,\n  buttonClass,\n}) {\n  function mapStateToProps(state) {\n    const isOpen = getOpenTopBarMenu(state) === name;\n    return {\n      isOpen,\n      disableOnClickOutside: !isOpen,\n    };\n  }\n\n  function mapDispatchToProps(dispatch) {\n    return {\n      onClose() {\n        dispatch(closeTopBarMenu(name));\n      },\n\n      onToggle() {\n        dispatch(toggleTopBarMenu(name));\n      },\n    };\n  }\n\n  return function createMenuWithMappedProps(MenuLaunchButton) {\n    function Menu(props) {\n      if (!isVisible(props)) {\n        return null;\n      }\n\n      const {isOpen, onToggle} = props;\n      const menu = isOpen ? (\n        <div\n          className={classnames('top-bar__menu', menuClass)}\n          onClick={preventClickthrough}\n        >\n          {renderItems(props)}\n        </div>\n      ) : null;\n      return (\n        <div\n          className={classnames('top-bar__menu-button', buttonClass, {\n            'top-bar__menu-button_active': isOpen,\n          })}\n          onClick={onToggle}\n        >\n          <MenuLaunchButton {...props} />\n          {menu}\n        </div>\n      );\n    }\n\n    Menu.displayName = `Menu(${name})`;\n\n    Menu.propTypes = {\n      isOpen: PropTypes.bool.isRequired,\n      onToggle: PropTypes.func.isRequired,\n    };\n\n    return connect(\n      mapStateToProps,\n      mapDispatchToProps,\n    )(onClickOutside(Menu, {handleClickOutside: property('props.onClose')}));\n  };\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

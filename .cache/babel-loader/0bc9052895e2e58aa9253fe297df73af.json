{
  "ast": null,
  "code": "import isUndefined from 'lodash-es/isUndefined';\nimport PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { t } from 'i18next';\nimport { UserAccount } from '../../records';\nimport createMenu, { MenuItem } from './createMenu';\nimport CurrentUserButton from './CurrentUserButton';\nvar CurrentUserMenu = createMenu({\n  menuClass: 'top-bar__menu_right',\n  name: 'currentUser',\n  renderItems: function renderItems(_ref) {\n    var onLinkGitHub = _ref.onLinkGitHub,\n        onLogOut = _ref.onLogOut,\n        onUnlinkGitHub = _ref.onUnlinkGitHub,\n        user = _ref.user;\n    var githubIdentityProvider = user.identityProviders.get('github.com');\n    return React.createElement(Fragment, null, isUndefined(githubIdentityProvider) ? React.createElement(MenuItem, {\n      onClick: onLinkGitHub\n    }, t('top-bar.session.link-github')) : React.createElement(MenuItem, {\n      onClick: onUnlinkGitHub\n    }, t('top-bar.session.unlink-github', {\n      displayName: githubIdentityProvider.displayName\n    })), React.createElement(MenuItem, {\n      onClick: onLogOut\n    }, t('top-bar.session.log-out-prompt')));\n  }\n})(CurrentUserButton);\nCurrentUserMenu.propTypes = {\n  user: PropTypes.instanceOf(UserAccount),\n  onLinkGitHub: PropTypes.func.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n  onUnlinkGitHub: PropTypes.func.isRequired\n};\nCurrentUserMenu.defaultProps = {\n  user: null\n};\nexport default CurrentUserMenu;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/TopBar/CurrentUserMenu.jsx"
    ],
    "names": [
      "isUndefined",
      "PropTypes",
      "React",
      "Fragment",
      "t",
      "UserAccount",
      "createMenu",
      "MenuItem",
      "CurrentUserButton",
      "CurrentUserMenu",
      "menuClass",
      "name",
      "renderItems",
      "onLinkGitHub",
      "onLogOut",
      "onUnlinkGitHub",
      "user",
      "githubIdentityProvider",
      "identityProviders",
      "get",
      "displayName",
      "propTypes",
      "instanceOf",
      "func",
      "isRequired",
      "defaultProps"
    ],
    "mappings": "AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,CAAR,QAAgB,SAAhB;AAEA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,OAAOC,UAAP,IAAoBC,QAApB,QAAmC,cAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,IAAMC,eAAe,GAAGH,UAAU,CAAC;AACjCI,EAAAA,SAAS,EAAE,qBADsB;AAEjCC,EAAAA,IAAI,EAAE,aAF2B;AAIjCC,EAAAA,WAJiC,6BAW9B;AAAA,QALDC,YAKC,QALDA,YAKC;AAAA,QAJDC,QAIC,QAJDA,QAIC;AAAA,QAHDC,cAGC,QAHDA,cAGC;AAAA,QAFDC,IAEC,QAFDA,IAEC;AACD,QAAMC,sBAAsB,GAAGD,IAAI,CAACE,iBAAL,CAAuBC,GAAvB,CAA2B,YAA3B,CAA/B;AAEA,WACE,oBAAC,QAAD,QACGnB,WAAW,CAACiB,sBAAD,CAAX,GACC,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEJ;AAAnB,OACGT,CAAC,CAAC,6BAAD,CADJ,CADD,GAKC,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEW;AAAnB,OACGX,CAAC,CAAC,+BAAD,EAAkC;AAClCgB,MAAAA,WAAW,EAAEH,sBAAsB,CAACG;AADF,KAAlC,CADJ,CANJ,EAYE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEN;AAAnB,OACGV,CAAC,CAAC,gCAAD,CADJ,CAZF,CADF;AAkBD;AAhCgC,CAAD,CAAV,CAiCrBI,iBAjCqB,CAAxB;AAmCAC,eAAe,CAACY,SAAhB,GAA4B;AAC1BL,EAAAA,IAAI,EAAEf,SAAS,CAACqB,UAAV,CAAqBjB,WAArB,CADoB;AAE1BQ,EAAAA,YAAY,EAAEZ,SAAS,CAACsB,IAAV,CAAeC,UAFH;AAG1BV,EAAAA,QAAQ,EAAEb,SAAS,CAACsB,IAAV,CAAeC,UAHC;AAI1BT,EAAAA,cAAc,EAAEd,SAAS,CAACsB,IAAV,CAAeC;AAJL,CAA5B;AAOAf,eAAe,CAACgB,YAAhB,GAA+B;AAC7BT,EAAAA,IAAI,EAAE;AADuB,CAA/B;AAIA,eAAeP,eAAf",
    "sourcesContent": [
      "import isUndefined from 'lodash-es/isUndefined';\n\nimport PropTypes from 'prop-types';\nimport React, {Fragment} from 'react';\nimport {t} from 'i18next';\n\nimport {UserAccount} from '../../records';\n\nimport createMenu, {MenuItem} from './createMenu';\nimport CurrentUserButton from './CurrentUserButton';\n\nconst CurrentUserMenu = createMenu({\n  menuClass: 'top-bar__menu_right',\n  name: 'currentUser',\n\n  renderItems({\n    /* eslint-disable react/prop-types */\n    onLinkGitHub,\n    onLogOut,\n    onUnlinkGitHub,\n    user,\n    /* eslint-enable react/prop-types */\n  }) {\n    const githubIdentityProvider = user.identityProviders.get('github.com');\n\n    return (\n      <Fragment>\n        {isUndefined(githubIdentityProvider) ? (\n          <MenuItem onClick={onLinkGitHub}>\n            {t('top-bar.session.link-github')}\n          </MenuItem>\n        ) : (\n          <MenuItem onClick={onUnlinkGitHub}>\n            {t('top-bar.session.unlink-github', {\n              displayName: githubIdentityProvider.displayName,\n            })}\n          </MenuItem>\n        )}\n        <MenuItem onClick={onLogOut}>\n          {t('top-bar.session.log-out-prompt')}\n        </MenuItem>\n      </Fragment>\n    );\n  },\n})(CurrentUserButton);\n\nCurrentUserMenu.propTypes = {\n  user: PropTypes.instanceOf(UserAccount),\n  onLinkGitHub: PropTypes.func.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n  onUnlinkGitHub: PropTypes.func.isRequired,\n};\n\nCurrentUserMenu.defaultProps = {\n  user: null,\n};\n\nexport default CurrentUserMenu;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "var moment = require('moment');\n\nfunction ParsedResult(result) {\n  result = result || {};\n  this.ref = result.ref;\n  this.index = result.index;\n  this.text = result.text;\n  this.tags = result.tags || {};\n  this.start = new ParsedComponents(result.start, result.ref);\n\n  if (result.end) {\n    this.end = new ParsedComponents(result.end, result.ref);\n  }\n}\n\nParsedResult.prototype.clone = function () {\n  var result = new ParsedResult(this);\n  result.tags = JSON.parse(JSON.stringify(this.tags));\n  result.start = this.start.clone();\n\n  if (this.end) {\n    result.end = this.end.clone();\n  }\n\n  return result;\n};\n\nParsedResult.prototype.hasPossibleDates = function () {\n  return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n};\n\nfunction ParsedComponents(components, ref) {\n  this.knownValues = {};\n  this.impliedValues = {};\n\n  if (components) {\n    for (key in components) {\n      this.knownValues[key] = components[key];\n    }\n  }\n\n  if (ref) {\n    ref = moment(ref);\n    this.imply('day', ref.date());\n    this.imply('month', ref.month() + 1);\n    this.imply('year', ref.year());\n  }\n\n  this.imply('hour', 12);\n  this.imply('minute', 0);\n  this.imply('second', 0);\n  this.imply('millisecond', 0);\n}\n\nParsedComponents.prototype.clone = function () {\n  var component = new ParsedComponents();\n  component.knownValues = JSON.parse(JSON.stringify(this.knownValues));\n  component.impliedValues = JSON.parse(JSON.stringify(this.impliedValues));\n  return component;\n};\n\nParsedComponents.prototype.get = function (component, value) {\n  if (component in this.knownValues) return this.knownValues[component];\n  if (component in this.impliedValues) return this.impliedValues[component];\n};\n\nParsedComponents.prototype.assign = function (component, value) {\n  this.knownValues[component] = value;\n  delete this.impliedValues[component];\n};\n\nParsedComponents.prototype.imply = function (component, value) {\n  if (component in this.knownValues) return;\n  this.impliedValues[component] = value;\n};\n\nParsedComponents.prototype.isCertain = function (component) {\n  return component in this.knownValues;\n};\n\nParsedComponents.prototype.isPossibleDate = function () {\n  var dateMoment = this.moment();\n\n  if (this.isCertain('timezoneOffset')) {\n    dateMoment.utcOffset(this.get('timezoneOffset'));\n  }\n\n  if (dateMoment.get('year') != this.get('year')) return false;\n  if (dateMoment.get('month') != this.get('month') - 1) return false;\n  if (dateMoment.get('date') != this.get('day')) return false;\n  if (dateMoment.get('hour') != this.get('hour')) return false;\n  if (dateMoment.get('minute') != this.get('minute')) return false;\n  return true;\n};\n\nParsedComponents.prototype.date = function () {\n  var dateMoment = this.moment();\n  return dateMoment.toDate();\n};\n\nParsedComponents.prototype.moment = function () {\n  var dateMoment = moment();\n  dateMoment.set('year', this.get('year'));\n  dateMoment.set('month', this.get('month') - 1);\n  dateMoment.set('date', this.get('day'));\n  dateMoment.set('hour', this.get('hour'));\n  dateMoment.set('minute', this.get('minute'));\n  dateMoment.set('second', this.get('second'));\n  dateMoment.set('millisecond', this.get('millisecond')); // Javascript Date Object return minus timezone offset\n\n  var currentTimezoneOffset = dateMoment.utcOffset();\n  var targetTimezoneOffset = this.get('timezoneOffset') !== undefined ? this.get('timezoneOffset') : currentTimezoneOffset;\n  var adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n  dateMoment.add(-adjustTimezoneOffset, 'minutes');\n  return dateMoment;\n};\n\nexports.ParsedComponents = ParsedComponents;\nexports.ParsedResult = ParsedResult;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/result.js"
    ],
    "names": [
      "moment",
      "require",
      "ParsedResult",
      "result",
      "ref",
      "index",
      "text",
      "tags",
      "start",
      "ParsedComponents",
      "end",
      "prototype",
      "clone",
      "JSON",
      "parse",
      "stringify",
      "hasPossibleDates",
      "isPossibleDate",
      "components",
      "knownValues",
      "impliedValues",
      "key",
      "imply",
      "date",
      "month",
      "year",
      "component",
      "get",
      "value",
      "assign",
      "isCertain",
      "dateMoment",
      "utcOffset",
      "toDate",
      "set",
      "currentTimezoneOffset",
      "targetTimezoneOffset",
      "undefined",
      "adjustTimezoneOffset",
      "add",
      "exports"
    ],
    "mappings": "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",
    "sourcesContent": [
      "var moment = require('moment');\n\nfunction ParsedResult(result){\n    result = result || {};\n\n    this.ref   = result.ref;\n    this.index = result.index;\n    this.text  = result.text;\n    this.tags  = result.tags || {};\n\n    this.start = new ParsedComponents(result.start, result.ref)\n    if(result.end){\n        this.end = new ParsedComponents(result.end, result.ref)\n    }\n}\n\nParsedResult.prototype.clone = function() {\n    var result = new ParsedResult(this);\n    result.tags = JSON.parse(JSON.stringify(this.tags));\n    result.start = this.start.clone();\n    if (this.end) {\n        result.end = this.end.clone();\n    }\n\n    return result\n}\n\nParsedResult.prototype.hasPossibleDates = function() {\n    return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n}\n\n\nfunction ParsedComponents (components, ref){\n\n    this.knownValues = {};\n    this.impliedValues = {};\n\n    if (components) {\n        for (key in components) {\n            this.knownValues[key] = components[key];\n        }\n    }\n\n    if (ref) {\n        ref = moment(ref);\n        this.imply('day', ref.date())\n        this.imply('month', ref.month() + 1)\n        this.imply('year', ref.year())\n    }\n    \n\n    this.imply('hour', 12);\n    this.imply('minute', 0);\n    this.imply('second', 0);\n    this.imply('millisecond', 0);\n}\n\nParsedComponents.prototype.clone = function () {\n    var component = new ParsedComponents();\n    component.knownValues = JSON.parse(JSON.stringify(this.knownValues));\n    component.impliedValues = JSON.parse(JSON.stringify(this.impliedValues));\n    return component;\n};\n\nParsedComponents.prototype.get = function(component, value) {\n    if (component in this.knownValues) return this.knownValues[component];\n    if (component in this.impliedValues) return this.impliedValues[component];\n};\n\nParsedComponents.prototype.assign = function(component, value) {\n    this.knownValues[component] = value;\n    delete this.impliedValues[component];\n};\n\nParsedComponents.prototype.imply = function(component, value) {\n    if (component in this.knownValues) return;\n    this.impliedValues[component] = value;\n};\n\nParsedComponents.prototype.isCertain = function(component) {\n    return component in this.knownValues;\n};\n\nParsedComponents.prototype.isPossibleDate = function() {\n    var dateMoment = this.moment();\n    if (this.isCertain('timezoneOffset')) {\n        dateMoment.utcOffset(this.get('timezoneOffset'))\n    }\n\n    if (dateMoment.get('year') != this.get('year')) return false;\n    if (dateMoment.get('month') != this.get('month')-1) return false;\n    if (dateMoment.get('date') != this.get('day')) return false;\n    if (dateMoment.get('hour') != this.get('hour')) return false;\n    if (dateMoment.get('minute') != this.get('minute')) return false;\n\n    return true;\n};\n\nParsedComponents.prototype.date = function() {\n    var dateMoment = this.moment();\n    return dateMoment.toDate();\n};\n\nParsedComponents.prototype.moment = function() {\n    var dateMoment = moment();\n\n    dateMoment.set('year', this.get('year'));\n    dateMoment.set('month', this.get('month')-1);\n    dateMoment.set('date', this.get('day'));\n    dateMoment.set('hour', this.get('hour'));\n    dateMoment.set('minute', this.get('minute'));\n    dateMoment.set('second', this.get('second'));\n    dateMoment.set('millisecond', this.get('millisecond'));\n\n    // Javascript Date Object return minus timezone offset\n    var currentTimezoneOffset = dateMoment.utcOffset();\n    var targetTimezoneOffset = this.get('timezoneOffset') !== undefined ? \n        this.get('timezoneOffset') : currentTimezoneOffset;\n\n    var adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n    dateMoment.add(-adjustTimezoneOffset, 'minutes');\n\n    return dateMoment;\n};\n\n\n\nexports.ParsedComponents = ParsedComponents;\nexports.ParsedResult = ParsedResult;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

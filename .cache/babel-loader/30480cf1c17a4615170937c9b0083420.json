{
  "ast": null,
  "code": "function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport HTMLInspector from 'html-inspector';\nimport last from 'lodash-es/last';\nimport isNull from 'lodash-es/isNull';\nimport trim from 'lodash-es/trim';\nimport { localizedArrayToSentence } from '../../util/arrayToSentence';\nimport Validator from '../Validator';\nvar specialCases = {\n  li: {\n    reason: 'invalid-tag-parent',\n    parent: ['<ul>', '<ol>', '<menu> tags']\n  },\n  title: {\n    reason: 'invalid-tag-parent',\n    parent: ['<head> tag']\n  }\n};\nvar errorMap = {\n  'validate-element-location': function validateElementLocation(error) {\n    var tag = error.context.tagName.toLowerCase();\n    var parent = error.context.parentNode.tagName.toLowerCase();\n\n    if (specialCases[tag]) {\n      var specialCase = specialCases[tag];\n      return {\n        reason: specialCase.reason,\n        payload: {\n          tag: tag,\n          parent: localizedArrayToSentence(specialCase.parent)\n        }\n      };\n    }\n\n    return {\n      reason: 'invalid-tag-location',\n      payload: {\n        tag: tag,\n        parent: parent\n      }\n    };\n  },\n  'text-elements-as-list-children': function textElementsAsListChildren(error) {\n    var tag = error.context.tagName.toLowerCase();\n    var requiredChild = 'li';\n\n    if (tag === 'dl') {\n      requiredChild = 'dd> or <dt';\n    }\n\n    return {\n      reason: 'text-elements-as-list-children',\n      payload: {\n        tag: tag,\n        children: requiredChild,\n        textContent: error.message\n      }\n    };\n  }\n};\n\nfunction noListsWithTextChildrenValidator(listener, reporter) {\n  listener.on('element', function (elementName, domElement) {\n    if (domElement.childNodes.length && (elementName === 'ul' || elementName === 'ol' || elementName === 'dl')) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = domElement.childNodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n          var textContent = trim(node.textContent);\n\n          if (node.nodeType === Node.TEXT_NODE && textContent.length > 0) {\n            reporter.warn('text-elements-as-list-children', textContent, domElement);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  });\n}\n\nHTMLInspector.rules.add('validate-list-children', noListsWithTextChildrenValidator);\n\nvar HtmlInspectorValidator =\n/*#__PURE__*/\nfunction (_Validator) {\n  _inherits(HtmlInspectorValidator, _Validator);\n\n  function HtmlInspectorValidator(source) {\n    var _this;\n\n    _classCallCheck(this, HtmlInspectorValidator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HtmlInspectorValidator).call(this, source, 'html', errorMap));\n    _this._doc = new DOMParser().parseFromString(_this.source, 'text/html');\n    return _this;\n  }\n\n  _createClass(HtmlInspectorValidator, [{\n    key: \"getRawErrors\",\n    value: function () {\n      var _getRawErrors = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!isNull(this._doc.documentElement)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.resolve([]));\n\n              case 2:\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  HTMLInspector.inspect({\n                    domRoot: _this2._doc.documentElement,\n                    useRules: ['validate-element-location', 'validate-list-children'],\n                    onComplete: resolve\n                  });\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRawErrors() {\n        return _getRawErrors.apply(this, arguments);\n      }\n\n      return getRawErrors;\n    }()\n  }, {\n    key: \"keyForError\",\n    value: function keyForError(error) {\n      return error.rule;\n    }\n  }, {\n    key: \"locationForError\",\n    value: function locationForError(error) {\n      var range = this._doc.createRange();\n\n      range.setEndBefore(error.context);\n      var lines = range.toString().split('\\n');\n\n      var droppedNewlines = this.source.split('\\n').length - this._doc.documentElement.outerHTML.split('\\n').length;\n\n      return {\n        row: droppedNewlines + lines.length - 1,\n        column: last(lines).length\n      };\n    }\n  }]);\n\n  return HtmlInspectorValidator;\n}(Validator);\n\nexport default (function (source) {\n  return new HtmlInspectorValidator(source).getAnnotations();\n});",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/validations/html/htmlInspector.js"
    ],
    "names": [
      "HTMLInspector",
      "last",
      "isNull",
      "trim",
      "localizedArrayToSentence",
      "Validator",
      "specialCases",
      "li",
      "reason",
      "parent",
      "title",
      "errorMap",
      "error",
      "tag",
      "context",
      "tagName",
      "toLowerCase",
      "parentNode",
      "specialCase",
      "payload",
      "requiredChild",
      "children",
      "textContent",
      "message",
      "noListsWithTextChildrenValidator",
      "listener",
      "reporter",
      "on",
      "elementName",
      "domElement",
      "childNodes",
      "length",
      "node",
      "nodeType",
      "Node",
      "TEXT_NODE",
      "warn",
      "rules",
      "add",
      "HtmlInspectorValidator",
      "source",
      "_doc",
      "DOMParser",
      "parseFromString",
      "documentElement",
      "Promise",
      "resolve",
      "inspect",
      "domRoot",
      "useRules",
      "onComplete",
      "rule",
      "range",
      "createRange",
      "setEndBefore",
      "lines",
      "toString",
      "split",
      "droppedNewlines",
      "outerHTML",
      "row",
      "column",
      "getAnnotations"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import HTMLInspector from 'html-inspector';\nimport last from 'lodash-es/last';\nimport isNull from 'lodash-es/isNull';\nimport trim from 'lodash-es/trim';\n\nimport {localizedArrayToSentence} from '../../util/arrayToSentence';\nimport Validator from '../Validator';\n\nconst specialCases = {\n  li: {\n    reason: 'invalid-tag-parent',\n    parent: ['<ul>', '<ol>', '<menu> tags'],\n  },\n  title: {\n    reason: 'invalid-tag-parent',\n    parent: ['<head> tag'],\n  },\n};\n\nconst errorMap = {\n  'validate-element-location': error => {\n    const tag = error.context.tagName.toLowerCase();\n    const parent = error.context.parentNode.tagName.toLowerCase();\n    if (specialCases[tag]) {\n      const specialCase = specialCases[tag];\n      return {\n        reason: specialCase.reason,\n        payload: {\n          tag,\n          parent: localizedArrayToSentence(specialCase.parent),\n        },\n      };\n    }\n\n    return {\n      reason: 'invalid-tag-location',\n      payload: {\n        tag,\n        parent,\n      },\n    };\n  },\n  'text-elements-as-list-children': error => {\n    const tag = error.context.tagName.toLowerCase();\n    let requiredChild = 'li';\n\n    if (tag === 'dl') {\n      requiredChild = 'dd> or <dt';\n    }\n\n    return {\n      reason: 'text-elements-as-list-children',\n      payload: {\n        tag,\n        children: requiredChild,\n        textContent: error.message,\n      },\n    };\n  },\n};\n\nfunction noListsWithTextChildrenValidator(listener, reporter) {\n  listener.on('element', (elementName, domElement) => {\n    if (\n      domElement.childNodes.length &&\n      (elementName === 'ul' || elementName === 'ol' || elementName === 'dl')\n    ) {\n      for (const node of domElement.childNodes) {\n        const textContent = trim(node.textContent);\n        if (node.nodeType === Node.TEXT_NODE && textContent.length > 0) {\n          reporter.warn(\n            'text-elements-as-list-children',\n            textContent,\n            domElement,\n          );\n          break;\n        }\n      }\n    }\n  });\n}\n\nHTMLInspector.rules.add(\n  'validate-list-children',\n  noListsWithTextChildrenValidator,\n);\n\nclass HtmlInspectorValidator extends Validator {\n  constructor(source) {\n    super(source, 'html', errorMap);\n    this._doc = new DOMParser().parseFromString(this.source, 'text/html');\n  }\n\n  async getRawErrors() {\n    if (isNull(this._doc.documentElement)) {\n      return Promise.resolve([]);\n    }\n\n    return new Promise(resolve => {\n      HTMLInspector.inspect({\n        domRoot: this._doc.documentElement,\n        useRules: ['validate-element-location', 'validate-list-children'],\n        onComplete: resolve,\n      });\n    });\n  }\n\n  keyForError(error) {\n    return error.rule;\n  }\n\n  locationForError(error) {\n    const range = this._doc.createRange();\n    range.setEndBefore(error.context);\n    const lines = range.toString().split('\\n');\n\n    const droppedNewlines =\n      this.source.split('\\n').length -\n      this._doc.documentElement.outerHTML.split('\\n').length;\n\n    return {\n      row: droppedNewlines + lines.length - 1,\n      column: last(lines).length,\n    };\n  }\n}\n\nexport default source => new HtmlInspectorValidator(source).getAnnotations();\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

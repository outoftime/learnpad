{
  "ast": null,
  "code": "import { t } from 'i18next';\nimport tap from 'lodash-es/tap';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createMenu, { MenuItem } from './createMenu';\nimport ExportMenuButton from './ExportMenuButton';\nvar ExportMenu = createMenu({\n  menuClass: 'top-bar__menu_right',\n  buttonClass: 'top-bar__menu-button_primary top-bar__menu-button_export',\n  name: 'export',\n  renderItems: function renderItems(_ref) {\n    var hasExportedRepo = _ref.hasExportedRepo,\n        isExperimental = _ref.isExperimental,\n        isGistExportInProgress = _ref.isGistExportInProgress,\n        isRepoExportInProgress = _ref.isRepoExportInProgress,\n        isClassroomExportInProgress = _ref.isClassroomExportInProgress,\n        isUserAuthenticatedWithGithub = _ref.isUserAuthenticatedWithGithub,\n        isUserAuthenticatedWithGoogle = _ref.isUserAuthenticatedWithGoogle,\n        onExportGist = _ref.onExportGist,\n        onExportRepo = _ref.onExportRepo,\n        onUpdateRepo = _ref.onUpdateRepo,\n        onExportToClassroom = _ref.onExportToClassroom,\n        onOpenAssignmentCreator = _ref.onOpenAssignmentCreator;\n    return tap([], function (items) {\n      items.push(React.createElement(MenuItem, {\n        isDisabled: isClassroomExportInProgress,\n        key: \"exportToClassroom\",\n        onClick: onExportToClassroom\n      }, t('top-bar.share-to-classroom')));\n\n      if (isUserAuthenticatedWithGithub) {\n        items.push(React.createElement(MenuItem, {\n          idDisabled: isGistExportInProgress,\n          key: \"exportGist\",\n          onClick: onExportGist\n        }, t('top-bar.export-gist')));\n\n        if (hasExportedRepo) {\n          items.push(React.createElement(MenuItem, {\n            isDisabled: isRepoExportInProgress,\n            key: \"updateRepo\",\n            onClick: onUpdateRepo\n          }, t('top-bar.update-repo')));\n        } else {\n          items.push(React.createElement(MenuItem, {\n            isDisabled: isRepoExportInProgress,\n            key: \"exportRepo\",\n            onClick: onExportRepo\n          }, t('top-bar.export-repo')));\n        }\n      }\n\n      if (isUserAuthenticatedWithGoogle && isExperimental) {\n        items.push(React.createElement(MenuItem, {\n          key: \"assignmentCreatorr\",\n          onClick: onOpenAssignmentCreator\n        }, t('top-bar.create-assignment')));\n      }\n    });\n  }\n})(ExportMenuButton);\nExportMenu.propTypes = {\n  hasExportedRepo: PropTypes.bool.isRequired,\n  isClassroomExportInProgress: PropTypes.bool.isRequired,\n  isExperimental: PropTypes.bool.isRequired,\n  isGistExportInProgress: PropTypes.bool.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  isRepoExportInProgress: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGithub: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGoogle: PropTypes.bool.isRequired,\n  onExportGist: PropTypes.func.isRequired,\n  onExportRepo: PropTypes.func.isRequired,\n  onExportToClassroom: PropTypes.func.isRequired,\n  onOpenAssignmentCreator: PropTypes.func.isRequired,\n  onUpdateRepo: PropTypes.func.isRequired\n};\nexport default ExportMenu;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/TopBar/ExportMenu.jsx"
    ],
    "names": [
      "t",
      "tap",
      "PropTypes",
      "React",
      "createMenu",
      "MenuItem",
      "ExportMenuButton",
      "ExportMenu",
      "menuClass",
      "buttonClass",
      "name",
      "renderItems",
      "hasExportedRepo",
      "isExperimental",
      "isGistExportInProgress",
      "isRepoExportInProgress",
      "isClassroomExportInProgress",
      "isUserAuthenticatedWithGithub",
      "isUserAuthenticatedWithGoogle",
      "onExportGist",
      "onExportRepo",
      "onUpdateRepo",
      "onExportToClassroom",
      "onOpenAssignmentCreator",
      "items",
      "push",
      "propTypes",
      "bool",
      "isRequired",
      "isOpen",
      "func"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import {t} from 'i18next';\nimport tap from 'lodash-es/tap';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createMenu, {MenuItem} from './createMenu';\nimport ExportMenuButton from './ExportMenuButton';\n\nconst ExportMenu = createMenu({\n  menuClass: 'top-bar__menu_right',\n  buttonClass: 'top-bar__menu-button_primary top-bar__menu-button_export',\n  name: 'export',\n\n  renderItems({\n    hasExportedRepo,\n    isExperimental,\n    isGistExportInProgress,\n    isRepoExportInProgress,\n    isClassroomExportInProgress,\n    isUserAuthenticatedWithGithub,\n    isUserAuthenticatedWithGoogle,\n    onExportGist,\n    onExportRepo,\n    onUpdateRepo,\n    onExportToClassroom,\n    onOpenAssignmentCreator,\n  }) {\n    return tap([], items => {\n      items.push(\n        <MenuItem\n          isDisabled={isClassroomExportInProgress}\n          key=\"exportToClassroom\"\n          onClick={onExportToClassroom}\n        >\n          {t('top-bar.share-to-classroom')}\n        </MenuItem>,\n      );\n\n      if (isUserAuthenticatedWithGithub) {\n        items.push(\n          <MenuItem\n            idDisabled={isGistExportInProgress}\n            key=\"exportGist\"\n            onClick={onExportGist}\n          >\n            {t('top-bar.export-gist')}\n          </MenuItem>,\n        );\n\n        if (hasExportedRepo) {\n          items.push(\n            <MenuItem\n              isDisabled={isRepoExportInProgress}\n              key=\"updateRepo\"\n              onClick={onUpdateRepo}\n            >\n              {t('top-bar.update-repo')}\n            </MenuItem>,\n          );\n        } else {\n          items.push(\n            <MenuItem\n              isDisabled={isRepoExportInProgress}\n              key=\"exportRepo\"\n              onClick={onExportRepo}\n            >\n              {t('top-bar.export-repo')}\n            </MenuItem>,\n          );\n        }\n      }\n      if (isUserAuthenticatedWithGoogle && isExperimental) {\n        items.push(\n          <MenuItem key=\"assignmentCreatorr\" onClick={onOpenAssignmentCreator}>\n            {t('top-bar.create-assignment')}\n          </MenuItem>,\n        );\n      }\n    });\n  },\n})(ExportMenuButton);\n\nExportMenu.propTypes = {\n  hasExportedRepo: PropTypes.bool.isRequired,\n  isClassroomExportInProgress: PropTypes.bool.isRequired,\n  isExperimental: PropTypes.bool.isRequired,\n  isGistExportInProgress: PropTypes.bool.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  isRepoExportInProgress: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGithub: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGoogle: PropTypes.bool.isRequired,\n  onExportGist: PropTypes.func.isRequired,\n  onExportRepo: PropTypes.func.isRequired,\n  onExportToClassroom: PropTypes.func.isRequired,\n  onOpenAssignmentCreator: PropTypes.func.isRequired,\n  onUpdateRepo: PropTypes.func.isRequired,\n};\n\nexport default ExportMenu;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

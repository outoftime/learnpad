{
  "ast": null,
  "code": "import { connect } from 'react-redux';\nimport EditorsColumn from '../components/EditorsColumn';\nimport resizableFlex from '../higherOrderComponents/resizableFlex';\nimport { getCurrentProject, getErrors, getHiddenAndVisibleLanguages, getRequestedFocusedLine, isTextSizeLarge } from '../selectors';\nimport { beautifyProjectSource, editorFocusedRequestedLine, hideComponent, updateProjectSource } from '../actions';\n\nfunction mapStateToProps(state) {\n  var _getHiddenAndVisibleL = getHiddenAndVisibleLanguages(state),\n      visibleLanguages = _getHiddenAndVisibleL.visibleLanguages;\n\n  return {\n    currentProject: getCurrentProject(state),\n    errors: getErrors(state),\n    isTextSizeLarge: isTextSizeLarge(state),\n    requestedFocusedLine: getRequestedFocusedLine(state),\n    visibleLanguages: visibleLanguages\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onComponentHide: function onComponentHide(projectKey, componentName) {\n      dispatch(hideComponent(projectKey, componentName));\n    },\n    onEditorInput: function onEditorInput(projectKey, language, source) {\n      dispatch(updateProjectSource(projectKey, language, source));\n    },\n    onRequestedLineFocused: function onRequestedLineFocused() {\n      dispatch(editorFocusedRequestedLine());\n    },\n    onAutoFormat: function onAutoFormat() {\n      dispatch(beautifyProjectSource());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(resizableFlex(3)(EditorsColumn));",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/containers/EditorsColumn.js"
    ],
    "names": [
      "connect",
      "EditorsColumn",
      "resizableFlex",
      "getCurrentProject",
      "getErrors",
      "getHiddenAndVisibleLanguages",
      "getRequestedFocusedLine",
      "isTextSizeLarge",
      "beautifyProjectSource",
      "editorFocusedRequestedLine",
      "hideComponent",
      "updateProjectSource",
      "mapStateToProps",
      "state",
      "visibleLanguages",
      "currentProject",
      "errors",
      "requestedFocusedLine",
      "mapDispatchToProps",
      "dispatch",
      "onComponentHide",
      "projectKey",
      "componentName",
      "onEditorInput",
      "language",
      "source",
      "onRequestedLineFocused",
      "onAutoFormat"
    ],
    "mappings": "AAAA,SAAQA,OAAR,QAAsB,aAAtB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SACEC,iBADF,EAEEC,SAFF,EAGEC,4BAHF,EAIEC,uBAJF,EAKEC,eALF,QAMO,cANP;AAOA,SACEC,qBADF,EAEEC,0BAFF,EAGEC,aAHF,EAIEC,mBAJF,QAKO,YALP;;AAOA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,8BACHR,4BAA4B,CAACQ,KAAD,CADzB;AAAA,MACvBC,gBADuB,yBACvBA,gBADuB;;AAE9B,SAAO;AACLC,IAAAA,cAAc,EAAEZ,iBAAiB,CAACU,KAAD,CAD5B;AAELG,IAAAA,MAAM,EAAEZ,SAAS,CAACS,KAAD,CAFZ;AAGLN,IAAAA,eAAe,EAAEA,eAAe,CAACM,KAAD,CAH3B;AAILI,IAAAA,oBAAoB,EAAEX,uBAAuB,CAACO,KAAD,CAJxC;AAKLC,IAAAA,gBAAgB,EAAhBA;AALK,GAAP;AAOD;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,eADK,2BACWC,UADX,EACuBC,aADvB,EACsC;AACzCH,MAAAA,QAAQ,CAACT,aAAa,CAACW,UAAD,EAAaC,aAAb,CAAd,CAAR;AACD,KAHI;AAKLC,IAAAA,aALK,yBAKSF,UALT,EAKqBG,QALrB,EAK+BC,MAL/B,EAKuC;AAC1CN,MAAAA,QAAQ,CAACR,mBAAmB,CAACU,UAAD,EAAaG,QAAb,EAAuBC,MAAvB,CAApB,CAAR;AACD,KAPI;AASLC,IAAAA,sBATK,oCASoB;AACvBP,MAAAA,QAAQ,CAACV,0BAA0B,EAA3B,CAAR;AACD,KAXI;AAYLkB,IAAAA,YAZK,0BAYU;AACbR,MAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACD;AAdI,GAAP;AAgBD;;AAED,eAAeR,OAAO,CACpBY,eADoB,EAEpBM,kBAFoB,CAAP,CAGbhB,aAAa,CAAC,CAAD,CAAb,CAAiBD,aAAjB,CAHa,CAAf",
    "sourcesContent": [
      "import {connect} from 'react-redux';\n\nimport EditorsColumn from '../components/EditorsColumn';\nimport resizableFlex from '../higherOrderComponents/resizableFlex';\nimport {\n  getCurrentProject,\n  getErrors,\n  getHiddenAndVisibleLanguages,\n  getRequestedFocusedLine,\n  isTextSizeLarge,\n} from '../selectors';\nimport {\n  beautifyProjectSource,\n  editorFocusedRequestedLine,\n  hideComponent,\n  updateProjectSource,\n} from '../actions';\n\nfunction mapStateToProps(state) {\n  const {visibleLanguages} = getHiddenAndVisibleLanguages(state);\n  return {\n    currentProject: getCurrentProject(state),\n    errors: getErrors(state),\n    isTextSizeLarge: isTextSizeLarge(state),\n    requestedFocusedLine: getRequestedFocusedLine(state),\n    visibleLanguages,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onComponentHide(projectKey, componentName) {\n      dispatch(hideComponent(projectKey, componentName));\n    },\n\n    onEditorInput(projectKey, language, source) {\n      dispatch(updateProjectSource(projectKey, language, source));\n    },\n\n    onRequestedLineFocused() {\n      dispatch(editorFocusedRequestedLine());\n    },\n    onAutoFormat() {\n      dispatch(beautifyProjectSource());\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(resizableFlex(3)(EditorsColumn));\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport partial from 'lodash-es/partial';\nimport Wordmark from '../../static/images/wordmark.svg';\nimport Pop from '../Pop';\nimport { UserAccount } from '../../records';\nimport CurrentUser from './CurrentUser';\nimport ExportMenu from './ExportMenu';\nimport HamburgerMenu from './HamburgerMenu';\nimport LibraryPicker from './LibraryPicker';\nimport NewProjectButton from './NewProjectButton';\nimport ProjectPicker from './ProjectPicker';\nimport SnapshotButton from './SnapshotButton';\nimport TextSize from './TextSize';\n\nfunction uiVariants(_ref) {\n  var validationState = _ref.validationState,\n      isUserTyping = _ref.isUserTyping;\n\n  if (validationState === 'passed') {\n    return {\n      popVariant: 'neutral'\n    };\n  }\n\n  if (validationState === 'validating') {\n    return {\n      popVariant: 'neutral',\n      modifier: 'top-bar_yellow'\n    };\n  }\n\n  if (validationState === 'validation-error' && isUserTyping) {\n    return {\n      popVariant: 'thinking',\n      modifier: 'top-bar_yellow'\n    };\n  }\n\n  return {\n    popVariant: 'horns',\n    modifier: 'top-bar_red'\n  };\n}\n\nexport default function TopBar(_ref2) {\n  var currentProjectKey = _ref2.currentProjectKey,\n      currentUser = _ref2.currentUser,\n      enabledLibraries = _ref2.enabledLibraries,\n      hasInstructions = _ref2.hasInstructions,\n      hasExportedRepo = _ref2.hasExportedRepo,\n      isEditingInstructions = _ref2.isEditingInstructions,\n      isExperimental = _ref2.isExperimental,\n      isGapiReady = _ref2.isGapiReady,\n      isGistExportInProgress = _ref2.isGistExportInProgress,\n      isRepoExportInProgress = _ref2.isRepoExportInProgress,\n      isClassroomExportInProgress = _ref2.isClassroomExportInProgress,\n      isUserAnonymous = _ref2.isUserAnonymous,\n      isUserAuthenticated = _ref2.isUserAuthenticated,\n      isUserAuthenticatedWithGithub = _ref2.isUserAuthenticatedWithGithub,\n      isUserAuthenticatedWithGoogle = _ref2.isUserAuthenticatedWithGoogle,\n      isUserTyping = _ref2.isUserTyping,\n      isSnapshotInProgress = _ref2.isSnapshotInProgress,\n      isTextSizeLarge = _ref2.isTextSizeLarge,\n      openMenu = _ref2.openMenu,\n      projectKeys = _ref2.projectKeys,\n      shouldShowSavedIndicator = _ref2.shouldShowSavedIndicator,\n      projects = _ref2.projects,\n      shouldShowArchivedProjects = _ref2.shouldShowArchivedProjects,\n      validationState = _ref2.validationState,\n      onChangeCurrentProject = _ref2.onChangeCurrentProject,\n      onClickMenu = _ref2.onClickMenu,\n      onCloseMenu = _ref2.onCloseMenu,\n      onCreateNewProject = _ref2.onCreateNewProject,\n      onCreateSnapshot = _ref2.onCreateSnapshot,\n      onExportGist = _ref2.onExportGist,\n      onExportRepo = _ref2.onExportRepo,\n      onExportToClassroom = _ref2.onExportToClassroom,\n      onLinkGitHub = _ref2.onLinkGitHub,\n      onLogOut = _ref2.onLogOut,\n      onOpenAssignmentCreator = _ref2.onOpenAssignmentCreator,\n      onStartGithubLogIn = _ref2.onStartGithubLogIn,\n      onStartGoogleLogIn = _ref2.onStartGoogleLogIn,\n      onStartEditingInstructions = _ref2.onStartEditingInstructions,\n      onToggleLibrary = _ref2.onToggleLibrary,\n      onToggleTextSize = _ref2.onToggleTextSize,\n      onToggleViewArchived = _ref2.onToggleViewArchived,\n      onUnlinkGitHub = _ref2.onUnlinkGitHub,\n      onUpdateRepo = _ref2.onUpdateRepo;\n\n  var _uiVariants = uiVariants({\n    validationState: validationState,\n    isUserTyping: isUserTyping\n  }),\n      popVariant = _uiVariants.popVariant,\n      modifier = _uiVariants.modifier;\n\n  return React.createElement(\"header\", {\n    className: classnames('top-bar', modifier)\n  }, React.createElement(\"div\", {\n    className: \"top-bar__logo-container\"\n  }, React.createElement(Pop, {\n    variant: popVariant\n  })), React.createElement(\"div\", {\n    className: \"top-bar__wordmark-container\"\n  }, React.createElement(Wordmark, null)), React.createElement(LibraryPicker, {\n    enabledLibraries: enabledLibraries,\n    onToggleLibrary: partial(onToggleLibrary, currentProjectKey)\n  }), React.createElement(SnapshotButton, {\n    isInProgress: isSnapshotInProgress,\n    onClick: onCreateSnapshot\n  }), React.createElement(ExportMenu, {\n    hasExportedRepo: hasExportedRepo,\n    isClassroomExportInProgress: isClassroomExportInProgress,\n    isExperimental: isExperimental,\n    isGistExportInProgress: isGistExportInProgress,\n    isOpen: openMenu === 'export',\n    isRepoExportInProgress: isRepoExportInProgress,\n    isUserAuthenticatedWithGithub: isUserAuthenticatedWithGithub,\n    isUserAuthenticatedWithGoogle: isUserAuthenticatedWithGoogle,\n    onClick: partial(onClickMenu, 'export'),\n    onExportGist: onExportGist,\n    onExportRepo: onExportRepo,\n    onExportToClassroom: onExportToClassroom,\n    onOpenAssignmentCreator: onOpenAssignmentCreator,\n    onUpdateRepo: onUpdateRepo\n  }), React.createElement(TextSize, {\n    isLarge: isTextSizeLarge,\n    onToggle: onToggleTextSize\n  }), React.createElement(\"div\", {\n    className: \"top-bar__spacer\"\n  }), React.createElement(NewProjectButton, {\n    isUserAuthenticated: isUserAuthenticated,\n    onClick: onCreateNewProject\n  }), React.createElement(ProjectPicker, {\n    currentProjectKey: currentProjectKey,\n    isUserAuthenticated: isUserAuthenticated,\n    projectKeys: projectKeys,\n    projects: projects,\n    shouldShowArchivedProjects: shouldShowArchivedProjects,\n    shouldShowSavedIndicator: shouldShowSavedIndicator,\n    onChangeCurrentProject: onChangeCurrentProject,\n    onToggleViewArchived: onToggleViewArchived\n  }), React.createElement(CurrentUser, {\n    isLoginAvailable: isGapiReady,\n    isOpen: openMenu === 'currentUser',\n    isUserAnonymous: isUserAnonymous,\n    isUserAuthenticated: isUserAuthenticated,\n    isUserAuthenticatedWithGithub: isUserAuthenticatedWithGithub,\n    user: currentUser,\n    onClick: partial(onClickMenu, 'currentUser'),\n    onClose: partial(onCloseMenu, 'currentUser'),\n    onLinkGitHub: onLinkGitHub,\n    onLogOut: onLogOut,\n    onStartLogIn: onStartGoogleLogIn,\n    onUnlinkGitHub: onUnlinkGitHub\n  }), React.createElement(HamburgerMenu, {\n    hasInstructions: hasInstructions,\n    isEditingInstructions: isEditingInstructions,\n    isOpen: openMenu === 'hamburger',\n    isUserAuthenticated: isUserAuthenticated,\n    onClick: partial(onClickMenu, 'hamburger'),\n    onStartEditingInstructions: partial(onStartEditingInstructions, currentProjectKey),\n    onStartGithubLogIn: onStartGithubLogIn\n  }));\n}\nTopBar.propTypes = {\n  currentProjectKey: PropTypes.string,\n  currentUser: PropTypes.instanceOf(UserAccount),\n  enabledLibraries: PropTypes.arrayOf(PropTypes.string).isRequired,\n  hasExportedRepo: PropTypes.bool.isRequired,\n  hasInstructions: PropTypes.bool.isRequired,\n  isClassroomExportInProgress: PropTypes.bool.isRequired,\n  isEditingInstructions: PropTypes.bool.isRequired,\n  isExperimental: PropTypes.bool.isRequired,\n  isGapiReady: PropTypes.bool.isRequired,\n  isGistExportInProgress: PropTypes.bool.isRequired,\n  isRepoExportInProgress: PropTypes.bool.isRequired,\n  isSnapshotInProgress: PropTypes.bool.isRequired,\n  isTextSizeLarge: PropTypes.bool.isRequired,\n  isUserAnonymous: PropTypes.bool.isRequired,\n  isUserAuthenticated: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGithub: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGoogle: PropTypes.bool.isRequired,\n  isUserTyping: PropTypes.bool.isRequired,\n  openMenu: PropTypes.string,\n  projectKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  projects: PropTypes.array.isRequired,\n  shouldShowArchivedProjects: PropTypes.bool.isRequired,\n  shouldShowSavedIndicator: PropTypes.bool.isRequired,\n  validationState: PropTypes.string.isRequired,\n  onChangeCurrentProject: PropTypes.func.isRequired,\n  onClickMenu: PropTypes.func.isRequired,\n  onCloseMenu: PropTypes.func.isRequired,\n  onCreateNewProject: PropTypes.func.isRequired,\n  onCreateSnapshot: PropTypes.func.isRequired,\n  onExportGist: PropTypes.func.isRequired,\n  onExportRepo: PropTypes.func.isRequired,\n  onExportToClassroom: PropTypes.func.isRequired,\n  onLinkGitHub: PropTypes.func.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n  onOpenAssignmentCreator: PropTypes.func.isRequired,\n  onStartEditingInstructions: PropTypes.func.isRequired,\n  onStartGithubLogIn: PropTypes.func.isRequired,\n  onStartGoogleLogIn: PropTypes.func.isRequired,\n  onToggleLibrary: PropTypes.func.isRequired,\n  onToggleTextSize: PropTypes.func.isRequired,\n  onToggleViewArchived: PropTypes.func.isRequired,\n  onUnlinkGitHub: PropTypes.func.isRequired,\n  onUpdateRepo: PropTypes.func.isRequired\n};\nTopBar.defaultProps = {\n  currentProjectKey: null,\n  currentUser: null,\n  openMenu: null\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/TopBar/index.jsx"
    ],
    "names": [
      "React",
      "PropTypes",
      "classnames",
      "partial",
      "Wordmark",
      "Pop",
      "UserAccount",
      "CurrentUser",
      "ExportMenu",
      "HamburgerMenu",
      "LibraryPicker",
      "NewProjectButton",
      "ProjectPicker",
      "SnapshotButton",
      "TextSize",
      "uiVariants",
      "validationState",
      "isUserTyping",
      "popVariant",
      "modifier",
      "TopBar",
      "currentProjectKey",
      "currentUser",
      "enabledLibraries",
      "hasInstructions",
      "hasExportedRepo",
      "isEditingInstructions",
      "isExperimental",
      "isGapiReady",
      "isGistExportInProgress",
      "isRepoExportInProgress",
      "isClassroomExportInProgress",
      "isUserAnonymous",
      "isUserAuthenticated",
      "isUserAuthenticatedWithGithub",
      "isUserAuthenticatedWithGoogle",
      "isSnapshotInProgress",
      "isTextSizeLarge",
      "openMenu",
      "projectKeys",
      "shouldShowSavedIndicator",
      "projects",
      "shouldShowArchivedProjects",
      "onChangeCurrentProject",
      "onClickMenu",
      "onCloseMenu",
      "onCreateNewProject",
      "onCreateSnapshot",
      "onExportGist",
      "onExportRepo",
      "onExportToClassroom",
      "onLinkGitHub",
      "onLogOut",
      "onOpenAssignmentCreator",
      "onStartGithubLogIn",
      "onStartGoogleLogIn",
      "onStartEditingInstructions",
      "onToggleLibrary",
      "onToggleTextSize",
      "onToggleViewArchived",
      "onUnlinkGitHub",
      "onUpdateRepo",
      "propTypes",
      "string",
      "instanceOf",
      "arrayOf",
      "isRequired",
      "bool",
      "array",
      "func",
      "defaultProps"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport partial from 'lodash-es/partial';\n\nimport Wordmark from '../../static/images/wordmark.svg';\nimport Pop from '../Pop';\nimport {UserAccount} from '../../records';\n\nimport CurrentUser from './CurrentUser';\nimport ExportMenu from './ExportMenu';\nimport HamburgerMenu from './HamburgerMenu';\nimport LibraryPicker from './LibraryPicker';\nimport NewProjectButton from './NewProjectButton';\nimport ProjectPicker from './ProjectPicker';\nimport SnapshotButton from './SnapshotButton';\nimport TextSize from './TextSize';\n\nfunction uiVariants({validationState, isUserTyping}) {\n  if (validationState === 'passed') {\n    return {popVariant: 'neutral'};\n  }\n  if (validationState === 'validating') {\n    return {popVariant: 'neutral', modifier: 'top-bar_yellow'};\n  }\n  if (validationState === 'validation-error' && isUserTyping) {\n    return {popVariant: 'thinking', modifier: 'top-bar_yellow'};\n  }\n  return {popVariant: 'horns', modifier: 'top-bar_red'};\n}\n\nexport default function TopBar({\n  currentProjectKey,\n  currentUser,\n  enabledLibraries,\n  hasInstructions,\n  hasExportedRepo,\n  isEditingInstructions,\n  isExperimental,\n  isGapiReady,\n  isGistExportInProgress,\n  isRepoExportInProgress,\n  isClassroomExportInProgress,\n  isUserAnonymous,\n  isUserAuthenticated,\n  isUserAuthenticatedWithGithub,\n  isUserAuthenticatedWithGoogle,\n  isUserTyping,\n  isSnapshotInProgress,\n  isTextSizeLarge,\n  openMenu,\n  projectKeys,\n  shouldShowSavedIndicator,\n  projects,\n  shouldShowArchivedProjects,\n  validationState,\n  onChangeCurrentProject,\n  onClickMenu,\n  onCloseMenu,\n  onCreateNewProject,\n  onCreateSnapshot,\n  onExportGist,\n  onExportRepo,\n  onExportToClassroom,\n  onLinkGitHub,\n  onLogOut,\n  onOpenAssignmentCreator,\n  onStartGithubLogIn,\n  onStartGoogleLogIn,\n  onStartEditingInstructions,\n  onToggleLibrary,\n  onToggleTextSize,\n  onToggleViewArchived,\n  onUnlinkGitHub,\n  onUpdateRepo,\n}) {\n  const {popVariant, modifier} = uiVariants({validationState, isUserTyping});\n  return (\n    <header className={classnames('top-bar', modifier)}>\n      <div className=\"top-bar__logo-container\">\n        <Pop variant={popVariant} />\n      </div>\n      <div className=\"top-bar__wordmark-container\">\n        <Wordmark />\n      </div>\n      <LibraryPicker\n        enabledLibraries={enabledLibraries}\n        onToggleLibrary={partial(onToggleLibrary, currentProjectKey)}\n      />\n      <SnapshotButton\n        isInProgress={isSnapshotInProgress}\n        onClick={onCreateSnapshot}\n      />\n      <ExportMenu\n        hasExportedRepo={hasExportedRepo}\n        isClassroomExportInProgress={isClassroomExportInProgress}\n        isExperimental={isExperimental}\n        isGistExportInProgress={isGistExportInProgress}\n        isOpen={openMenu === 'export'}\n        isRepoExportInProgress={isRepoExportInProgress}\n        isUserAuthenticatedWithGithub={isUserAuthenticatedWithGithub}\n        isUserAuthenticatedWithGoogle={isUserAuthenticatedWithGoogle}\n        onClick={partial(onClickMenu, 'export')}\n        onExportGist={onExportGist}\n        onExportRepo={onExportRepo}\n        onExportToClassroom={onExportToClassroom}\n        onOpenAssignmentCreator={onOpenAssignmentCreator}\n        onUpdateRepo={onUpdateRepo}\n      />\n      <TextSize isLarge={isTextSizeLarge} onToggle={onToggleTextSize} />\n      <div className=\"top-bar__spacer\" />\n      <NewProjectButton\n        isUserAuthenticated={isUserAuthenticated}\n        onClick={onCreateNewProject}\n      />\n      <ProjectPicker\n        currentProjectKey={currentProjectKey}\n        isUserAuthenticated={isUserAuthenticated}\n        projectKeys={projectKeys}\n        projects={projects}\n        shouldShowArchivedProjects={shouldShowArchivedProjects}\n        shouldShowSavedIndicator={shouldShowSavedIndicator}\n        onChangeCurrentProject={onChangeCurrentProject}\n        onToggleViewArchived={onToggleViewArchived}\n      />\n      <CurrentUser\n        isLoginAvailable={isGapiReady}\n        isOpen={openMenu === 'currentUser'}\n        isUserAnonymous={isUserAnonymous}\n        isUserAuthenticated={isUserAuthenticated}\n        isUserAuthenticatedWithGithub={isUserAuthenticatedWithGithub}\n        user={currentUser}\n        onClick={partial(onClickMenu, 'currentUser')}\n        onClose={partial(onCloseMenu, 'currentUser')}\n        onLinkGitHub={onLinkGitHub}\n        onLogOut={onLogOut}\n        onStartLogIn={onStartGoogleLogIn}\n        onUnlinkGitHub={onUnlinkGitHub}\n      />\n      <HamburgerMenu\n        hasInstructions={hasInstructions}\n        isEditingInstructions={isEditingInstructions}\n        isOpen={openMenu === 'hamburger'}\n        isUserAuthenticated={isUserAuthenticated}\n        onClick={partial(onClickMenu, 'hamburger')}\n        onStartEditingInstructions={partial(\n          onStartEditingInstructions,\n          currentProjectKey,\n        )}\n        onStartGithubLogIn={onStartGithubLogIn}\n      />\n    </header>\n  );\n}\n\nTopBar.propTypes = {\n  currentProjectKey: PropTypes.string,\n  currentUser: PropTypes.instanceOf(UserAccount),\n  enabledLibraries: PropTypes.arrayOf(PropTypes.string).isRequired,\n  hasExportedRepo: PropTypes.bool.isRequired,\n  hasInstructions: PropTypes.bool.isRequired,\n  isClassroomExportInProgress: PropTypes.bool.isRequired,\n  isEditingInstructions: PropTypes.bool.isRequired,\n  isExperimental: PropTypes.bool.isRequired,\n  isGapiReady: PropTypes.bool.isRequired,\n  isGistExportInProgress: PropTypes.bool.isRequired,\n  isRepoExportInProgress: PropTypes.bool.isRequired,\n  isSnapshotInProgress: PropTypes.bool.isRequired,\n  isTextSizeLarge: PropTypes.bool.isRequired,\n  isUserAnonymous: PropTypes.bool.isRequired,\n  isUserAuthenticated: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGithub: PropTypes.bool.isRequired,\n  isUserAuthenticatedWithGoogle: PropTypes.bool.isRequired,\n  isUserTyping: PropTypes.bool.isRequired,\n  openMenu: PropTypes.string,\n  projectKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  projects: PropTypes.array.isRequired,\n  shouldShowArchivedProjects: PropTypes.bool.isRequired,\n  shouldShowSavedIndicator: PropTypes.bool.isRequired,\n  validationState: PropTypes.string.isRequired,\n  onChangeCurrentProject: PropTypes.func.isRequired,\n  onClickMenu: PropTypes.func.isRequired,\n  onCloseMenu: PropTypes.func.isRequired,\n  onCreateNewProject: PropTypes.func.isRequired,\n  onCreateSnapshot: PropTypes.func.isRequired,\n  onExportGist: PropTypes.func.isRequired,\n  onExportRepo: PropTypes.func.isRequired,\n  onExportToClassroom: PropTypes.func.isRequired,\n  onLinkGitHub: PropTypes.func.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n  onOpenAssignmentCreator: PropTypes.func.isRequired,\n  onStartEditingInstructions: PropTypes.func.isRequired,\n  onStartGithubLogIn: PropTypes.func.isRequired,\n  onStartGoogleLogIn: PropTypes.func.isRequired,\n  onToggleLibrary: PropTypes.func.isRequired,\n  onToggleTextSize: PropTypes.func.isRequired,\n  onToggleViewArchived: PropTypes.func.isRequired,\n  onUnlinkGitHub: PropTypes.func.isRequired,\n  onUpdateRepo: PropTypes.func.isRequired,\n};\n\nTopBar.defaultProps = {\n  currentProjectKey: null,\n  currentUser: null,\n  openMenu: null,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n      message,\n      reselectPrevious,\n      range,\n      selection,\n      mark,\n      success = false;\n\n  if (!options) {\n    options = {};\n  }\n\n  debug = options.debug || false;\n\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement('span');\n    mark.textContent = text; // reset user styles for span element\n\n    mark.style.all = 'unset'; // prevents scrolling to the end of the page\n\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)'; // used to preserve spaces and line breaks\n\n    mark.style.whiteSpace = 'pre'; // do not inherit user-select (it may be `none`)\n\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n    document.body.appendChild(mark);\n    range.selectNode(mark);\n    selection.addRange(range);\n    var successful = document.execCommand('copy');\n\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/copy-to-clipboard/index.js"
    ],
    "names": [
      "deselectCurrent",
      "require",
      "defaultMessage",
      "format",
      "message",
      "copyKey",
      "test",
      "navigator",
      "userAgent",
      "replace",
      "copy",
      "text",
      "options",
      "debug",
      "reselectPrevious",
      "range",
      "selection",
      "mark",
      "success",
      "document",
      "createRange",
      "getSelection",
      "createElement",
      "textContent",
      "style",
      "all",
      "position",
      "top",
      "clip",
      "whiteSpace",
      "webkitUserSelect",
      "MozUserSelect",
      "msUserSelect",
      "userSelect",
      "body",
      "appendChild",
      "selectNode",
      "addRange",
      "successful",
      "execCommand",
      "Error",
      "err",
      "console",
      "error",
      "warn",
      "window",
      "clipboardData",
      "setData",
      "prompt",
      "removeRange",
      "removeAllRanges",
      "removeChild",
      "module",
      "exports"
    ],
    "mappings": "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",
    "sourcesContent": [
      "'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

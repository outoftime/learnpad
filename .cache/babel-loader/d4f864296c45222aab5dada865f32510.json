{
  "ast": null,
  "code": "import get from 'lodash-es/get';\nimport keys from 'lodash-es/keys';\nimport isEmpty from 'lodash-es/isEmpty';\nimport assign from 'lodash-es/assign';\nimport { t } from 'i18next';\nimport bowser from '../services/bowser';\nvar normalizers = {\n  Chrome: {\n    TypeError: function TypeError(message) {\n      var match;\n      match = /^([0-9A-Z_a-z]+) is not a function$/.exec(message);\n\n      if (match) {\n        return {\n          type: 'not-a-function',\n          params: {\n            name: match[1]\n          }\n        };\n      }\n\n      match = /^Cannot (read|set) property '((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)' of (null|undefined)$/.exec(message);\n\n      if (match) {\n        return {\n          type: \"\".concat(match[1], \"-property-of-\").concat(match[3]),\n          params: {\n            property: match[2]\n          }\n        };\n      }\n\n      return null;\n    }\n  },\n  Safari: {\n    TypeError: function TypeError(message) {\n      var match;\n      match = /^([0-9A-Z_a-z]+) is not a function(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]) \\(In '[0-9A-Z_a-z]+\\(\\)', '[0-9A-Z_a-z]+' is ([0-9A-Z_a-z]+|an instance of ([0-9A-Z_a-z]+))\\)$/.exec(message);\n\n      if (match) {\n        if (match[3]) {\n          return {\n            type: 'not-a-function',\n            params: {\n              name: match[1],\n              type: match[3]\n            }\n          };\n        }\n\n        if (match[2] === 'undefined' || match[2] === 'null') {\n          return {\n            type: \"\".concat(match[2], \"-not-a-function\"),\n            params: {\n              name: match[1]\n            }\n          };\n        }\n\n        return {\n          type: 'not-a-function',\n          params: {\n            name: match[1],\n            value: match[2]\n          }\n        };\n      }\n\n      match = /^(null|undefined) is not an object \\((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*\\)$/.exec(message);\n\n      if (match) {\n        return {\n          type: \"access-property-of-\".concat(match[1])\n        };\n      }\n\n      return null;\n    }\n  },\n  Firefox: {\n    TypeError: function TypeError(message) {\n      var match;\n      match = /^([0-9A-Z_a-z]+) is not a function$/.exec(message);\n\n      if (match) {\n        return {\n          type: 'not-a-function',\n          params: {\n            name: match[1]\n          }\n        };\n      }\n\n      match = /^([\\.0-9A-Z_a-z]+) is (null|undefined)$/.exec(message);\n\n      if (match) {\n        return {\n          type: \"access-property-of-\".concat(match[2]),\n          params: {\n            name: match[1]\n          }\n        };\n      }\n\n      return null;\n    }\n  }\n};\n\nfunction attachMessage(normalizedError) {\n  var context;\n\n  if (!isEmpty(normalizedError.params)) {\n    context = \"with-\".concat(keys(normalizedError.params).sort().join('-'));\n  }\n\n  return assign(normalizedError, {\n    message: t(\"errors.javascriptRuntime.\".concat(normalizedError.type), assign({\n      context: context\n    }, normalizedError.params))\n  });\n}\n\nfunction normalizeError(error) {\n  var normalizer = get(normalizers, [bowser.getBrowserName(), error.name]);\n\n  if (normalizer !== undefined) {\n    var normalizedError = normalizer(error.message);\n\n    if (normalizedError !== null) {\n      return attachMessage(normalizedError);\n    }\n  }\n\n  return {\n    type: 'unknown',\n    message: error.message\n  };\n}\n\nexport default normalizeError;",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/util/normalizeError.js"],
    "names": [
      "get",
      "keys",
      "isEmpty",
      "assign",
      "t",
      "bowser",
      "normalizers",
      "Chrome",
      "TypeError",
      "message",
      "match",
      "exec",
      "type",
      "params",
      "name",
      "property",
      "Safari",
      "value",
      "Firefox",
      "attachMessage",
      "normalizedError",
      "context",
      "sort",
      "join",
      "normalizeError",
      "error",
      "normalizer",
      "getBrowserName",
      "undefined"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import get from 'lodash-es/get';\nimport keys from 'lodash-es/keys';\nimport isEmpty from 'lodash-es/isEmpty';\nimport assign from 'lodash-es/assign';\nimport {t} from 'i18next';\n\nimport bowser from '../services/bowser';\n\nconst normalizers = {\n  Chrome: {\n    TypeError: message => {\n      let match;\n\n      match = /^(\\w+) is not a function$/u.exec(message);\n      if (match) {\n        return {type: 'not-a-function', params: {name: match[1]}};\n      }\n\n      match = /^Cannot (read|set) property '(.+)' of (null|undefined)$/u.exec(\n        message,\n      );\n      if (match) {\n        return {\n          type: `${match[1]}-property-of-${match[3]}`,\n          params: {property: match[2]},\n        };\n      }\n\n      return null;\n    },\n  },\n\n  Safari: {\n    TypeError: message => {\n      let match;\n\n      match = /^(\\w+) is not a function. \\(In '\\w+\\(\\)', '\\w+' is (\\w+|an instance of (\\w+))\\)$/u.exec(\n        message,\n      );\n\n      if (match) {\n        if (match[3]) {\n          return {\n            type: 'not-a-function',\n            params: {name: match[1], type: match[3]},\n          };\n        }\n\n        if (match[2] === 'undefined' || match[2] === 'null') {\n          return {\n            type: `${match[2]}-not-a-function`,\n            params: {name: match[1]},\n          };\n        }\n\n        return {\n          type: 'not-a-function',\n          params: {name: match[1], value: match[2]},\n        };\n      }\n\n      match = /^(null|undefined) is not an object \\(.*\\)$/u.exec(message);\n      if (match) {\n        return {type: `access-property-of-${match[1]}`};\n      }\n\n      return null;\n    },\n  },\n\n  Firefox: {\n    TypeError: message => {\n      let match;\n\n      match = /^(\\w+) is not a function$/u.exec(message);\n      if (match) {\n        return {type: 'not-a-function', params: {name: match[1]}};\n      }\n\n      match = /^([\\w.]+) is (null|undefined)$/u.exec(message);\n      if (match) {\n        return {\n          type: `access-property-of-${match[2]}`,\n          params: {name: match[1]},\n        };\n      }\n\n      return null;\n    },\n  },\n};\n\nfunction attachMessage(normalizedError) {\n  let context;\n  if (!isEmpty(normalizedError.params)) {\n    context = `with-${keys(normalizedError.params)\n      .sort()\n      .join('-')}`;\n  }\n\n  return assign(normalizedError, {\n    message: t(\n      `errors.javascriptRuntime.${normalizedError.type}`,\n      assign({context}, normalizedError.params),\n    ),\n  });\n}\n\nfunction normalizeError(error) {\n  const normalizer = get(normalizers, [bowser.getBrowserName(), error.name]);\n  if (normalizer !== undefined) {\n    const normalizedError = normalizer(error.message);\n    if (normalizedError !== null) {\n      return attachMessage(normalizedError);\n    }\n  }\n\n  return {\n    type: 'unknown',\n    message: error.message,\n  };\n}\n\nexport default normalizeError;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

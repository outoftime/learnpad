{
  "ast": null,
  "code": "/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar patternString1 = '(?:由|從|自)?' + '(?:' + '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' + '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' + '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' + '(?:[\\\\s,，]*)' + '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' + ')?' + '(?:[\\\\s,，]*)' + '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' + '(?:\\\\s*)' + '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' + '(?:\\\\s*)' + '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' + '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\nvar patternString2 = '(?:\\\\s*(?:到|至|\\\\-|\\\\–|\\\\~|\\\\〜)\\\\s*)' + '(?:' + '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' + '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' + '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' + '(?:[\\\\s,，]*)' + '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' + ')?' + '(?:[\\\\s,，]*)' + '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' + '(?:\\\\s*)' + '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' + '(?:\\\\s*)' + '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' + '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\nvar FIRST_REG_PATTERN = new RegExp(patternString1, 'i');\nvar SECOND_REG_PATTERN = new RegExp(patternString2, 'i');\nvar DAY_GROUP_1 = 1;\nvar ZH_AM_PM_HOUR_GROUP_1 = 2;\nvar ZH_AM_PM_HOUR_GROUP_2 = 3;\nvar DAY_GROUP_3 = 4;\nvar ZH_AM_PM_HOUR_GROUP_3 = 5;\nvar HOUR_GROUP = 6;\nvar MINUTE_GROUP = 7;\nvar SECOND_GROUP = 8;\nvar AM_PM_HOUR_GROUP = 9;\n\nexports.Parser = function ZHHantTimeExpressionParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return FIRST_REG_PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n    if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n    var refMoment = moment(ref);\n    var result = new ParsedResult();\n    result.ref = ref;\n    result.index = match.index;\n    result.text = match[0];\n    result.tags.ZHTimeExpressionParser = true;\n    var startMoment = refMoment.clone(); // ----- Day\n\n    if (match[DAY_GROUP_1]) {\n      var day1 = match[DAY_GROUP_1];\n\n      if (day1 == '明' || day1 == '聽') {\n        // Check not \"Tomorrow\" on late night\n        if (refMoment.hour() > 1) {\n          startMoment.add(1, 'day');\n        }\n      } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n        startMoment.add(-1, 'day');\n      } else if (day1 == \"前\") {\n        startMoment.add(-2, 'day');\n      } else if (day1 == \"大前\") {\n        startMoment.add(-3, 'day');\n      } else if (day1 == \"後\") {\n        startMoment.add(2, 'day');\n      } else if (day1 == \"大後\") {\n        startMoment.add(3, 'day');\n      }\n\n      result.start.assign('day', startMoment.date());\n      result.start.assign('month', startMoment.month() + 1);\n      result.start.assign('year', startMoment.year());\n    } else if (match[DAY_GROUP_3]) {\n      var day3 = match[DAY_GROUP_3];\n\n      if (day3 == '明' || day3 == '聽') {\n        startMoment.add(1, 'day');\n      } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n        startMoment.add(-1, 'day');\n      } else if (day3 == \"前\") {\n        startMoment.add(-2, 'day');\n      } else if (day3 == \"大前\") {\n        startMoment.add(-3, 'day');\n      } else if (day3 == \"後\") {\n        startMoment.add(2, 'day');\n      } else if (day3 == \"大後\") {\n        startMoment.add(3, 'day');\n      }\n\n      result.start.assign('day', startMoment.date());\n      result.start.assign('month', startMoment.month() + 1);\n      result.start.assign('year', startMoment.year());\n    } else {\n      result.start.imply('day', startMoment.date());\n      result.start.imply('month', startMoment.month() + 1);\n      result.start.imply('year', startMoment.year());\n    }\n\n    var hour = 0;\n    var minute = 0;\n    var meridiem = -1; // ----- Second\n\n    if (match[SECOND_GROUP]) {\n      var second = parseInt(match[SECOND_GROUP]);\n\n      if (isNaN(second)) {\n        second = util.zhStringToNumber(match[SECOND_GROUP]);\n      }\n\n      if (second >= 60) return null;\n      result.start.assign('second', second);\n    }\n\n    hour = parseInt(match[HOUR_GROUP]);\n\n    if (isNaN(hour)) {\n      hour = util.zhStringToNumber(match[HOUR_GROUP]);\n    } // ----- Minutes\n\n\n    if (match[MINUTE_GROUP]) {\n      if (match[MINUTE_GROUP] == '半') {\n        minute = 30;\n      } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n        minute = 0;\n      } else {\n        minute = parseInt(match[MINUTE_GROUP]);\n\n        if (isNaN(minute)) {\n          minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n        }\n      }\n    } else if (hour > 100) {\n      minute = hour % 100;\n      hour = parseInt(hour / 100);\n    }\n\n    if (minute >= 60) {\n      return null;\n    }\n\n    if (hour > 24) {\n      return null;\n    }\n\n    if (hour >= 12) {\n      meridiem = 1;\n    } // ----- AM & PM\n\n\n    if (match[AM_PM_HOUR_GROUP]) {\n      if (hour > 12) return null;\n      var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n\n      if (ampm == \"a\") {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      }\n\n      if (ampm == \"p\") {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n      var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n      var zhAMPM1 = zhAMPMString1[0];\n\n      if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      } else if (zhAMPM1 == '晚') {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n      var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n      var zhAMPM2 = zhAMPMString2[0];\n\n      if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n      var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n      var zhAMPM3 = zhAMPMString3[0];\n\n      if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    }\n\n    result.start.assign('hour', hour);\n    result.start.assign('minute', minute);\n\n    if (meridiem >= 0) {\n      result.start.assign('meridiem', meridiem);\n    } else {\n      if (hour < 12) {\n        result.start.imply('meridiem', 0);\n      } else {\n        result.start.imply('meridiem', 1);\n      }\n    } // ==============================================================\n    //                  Extracting the 'to' chunk\n    // ==============================================================\n\n\n    match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n\n    if (!match) {\n      // Not accept number only result\n      if (result.text.match(/^\\d+$/)) {\n        return null;\n      }\n\n      return result;\n    }\n\n    var endMoment = startMoment.clone();\n    result.end = new ParsedComponents(null, null); // ----- Day\n\n    if (match[DAY_GROUP_1]) {\n      var day1 = match[DAY_GROUP_1];\n\n      if (day1 == '明' || day1 == '聽') {\n        // Check not \"Tomorrow\" on late night\n        if (refMoment.hour() > 1) {\n          endMoment.add(1, 'day');\n        }\n      } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n        endMoment.add(-1, 'day');\n      } else if (day1 == \"前\") {\n        endMoment.add(-2, 'day');\n      } else if (day1 == \"大前\") {\n        endMoment.add(-3, 'day');\n      } else if (day1 == \"後\") {\n        endMoment.add(2, 'day');\n      } else if (day1 == \"大後\") {\n        endMoment.add(3, 'day');\n      }\n\n      result.end.assign('day', endMoment.date());\n      result.end.assign('month', endMoment.month() + 1);\n      result.end.assign('year', endMoment.year());\n    } else if (match[DAY_GROUP_3]) {\n      var day3 = match[DAY_GROUP_3];\n\n      if (day3 == '明' || day3 == '聽') {\n        endMoment.add(1, 'day');\n      } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n        endMoment.add(-1, 'day');\n      } else if (day3 == \"前\") {\n        endMoment.add(-2, 'day');\n      } else if (day3 == \"大前\") {\n        endMoment.add(-3, 'day');\n      } else if (day3 == \"後\") {\n        endMoment.add(2, 'day');\n      } else if (day3 == \"大後\") {\n        endMoment.add(3, 'day');\n      }\n\n      result.end.assign('day', endMoment.date());\n      result.end.assign('month', endMoment.month() + 1);\n      result.end.assign('year', endMoment.year());\n    } else {\n      result.end.imply('day', endMoment.date());\n      result.end.imply('month', endMoment.month() + 1);\n      result.end.imply('year', endMoment.year());\n    }\n\n    hour = 0;\n    minute = 0;\n    meridiem = -1; // ----- Second\n\n    if (match[SECOND_GROUP]) {\n      var second = parseInt(match[SECOND_GROUP]);\n\n      if (isNaN(second)) {\n        second = util.zhStringToNumber(match[SECOND_GROUP]);\n      }\n\n      if (second >= 60) return null;\n      result.end.assign('second', second);\n    }\n\n    hour = parseInt(match[HOUR_GROUP]);\n\n    if (isNaN(hour)) {\n      hour = util.zhStringToNumber(match[HOUR_GROUP]);\n    } // ----- Minutes\n\n\n    if (match[MINUTE_GROUP]) {\n      if (match[MINUTE_GROUP] == '半') {\n        minute = 30;\n      } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n        minute = 0;\n      } else {\n        minute = parseInt(match[MINUTE_GROUP]);\n\n        if (isNaN(minute)) {\n          minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n        }\n      }\n    } else if (hour > 100) {\n      minute = hour % 100;\n      hour = parseInt(hour / 100);\n    }\n\n    if (minute >= 60) {\n      return null;\n    }\n\n    if (hour > 24) {\n      return null;\n    }\n\n    if (hour >= 12) {\n      meridiem = 1;\n    } // ----- AM & PM\n\n\n    if (match[AM_PM_HOUR_GROUP]) {\n      if (hour > 12) return null;\n      var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n\n      if (ampm == \"a\") {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      }\n\n      if (ampm == \"p\") {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n\n      if (!result.start.isCertain('meridiem')) {\n        if (meridiem == 0) {\n          result.start.imply('meridiem', 0);\n\n          if (result.start.get('hour') == 12) {\n            result.start.assign('hour', 0);\n          }\n        } else {\n          result.start.imply('meridiem', 1);\n\n          if (result.start.get('hour') != 12) {\n            result.start.assign('hour', result.start.get('hour') + 12);\n          }\n        }\n      }\n    } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n      var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n      var zhAMPM1 = zhAMPMString1[0];\n\n      if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      } else if (zhAMPM1 == '晚') {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n      var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n      var zhAMPM2 = zhAMPMString2[0];\n\n      if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n      var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n      var zhAMPM3 = zhAMPMString3[0];\n\n      if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n        meridiem = 0;\n        if (hour == 12) hour = 0;\n      } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n        meridiem = 1;\n        if (hour != 12) hour += 12;\n      }\n    }\n\n    result.text = result.text + match[0];\n    result.end.assign('hour', hour);\n    result.end.assign('minute', minute);\n\n    if (meridiem >= 0) {\n      result.end.assign('meridiem', meridiem);\n    } else {\n      var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n\n      if (startAtPM && result.start.get('hour') > hour) {\n        // 10pm - 1 (am)\n        result.end.imply('meridiem', 0);\n      } else if (hour > 12) {\n        result.end.imply('meridiem', 1);\n      }\n    }\n\n    if (result.end.date().getTime() < result.start.date().getTime()) {\n      result.end.imply('day', result.end.get('day') + 1);\n    }\n\n    return result;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/parsers/zh-Hant/ZHHantTimeExpressionParser.js"
    ],
    "names": [
      "moment",
      "require",
      "Parser",
      "ParsedResult",
      "ParsedComponents",
      "util",
      "patternString1",
      "Object",
      "keys",
      "NUMBER",
      "join",
      "patternString2",
      "FIRST_REG_PATTERN",
      "RegExp",
      "SECOND_REG_PATTERN",
      "DAY_GROUP_1",
      "ZH_AM_PM_HOUR_GROUP_1",
      "ZH_AM_PM_HOUR_GROUP_2",
      "DAY_GROUP_3",
      "ZH_AM_PM_HOUR_GROUP_3",
      "HOUR_GROUP",
      "MINUTE_GROUP",
      "SECOND_GROUP",
      "AM_PM_HOUR_GROUP",
      "exports",
      "ZHHantTimeExpressionParser",
      "apply",
      "arguments",
      "pattern",
      "extract",
      "text",
      "ref",
      "match",
      "opt",
      "index",
      "refMoment",
      "result",
      "tags",
      "ZHTimeExpressionParser",
      "startMoment",
      "clone",
      "day1",
      "hour",
      "add",
      "start",
      "assign",
      "date",
      "month",
      "year",
      "day3",
      "imply",
      "minute",
      "meridiem",
      "second",
      "parseInt",
      "isNaN",
      "zhStringToNumber",
      "ampm",
      "toLowerCase",
      "zhAMPMString1",
      "zhAMPM1",
      "zhAMPMString2",
      "zhAMPM2",
      "zhAMPMString3",
      "zhAMPM3",
      "exec",
      "substring",
      "length",
      "endMoment",
      "end",
      "isCertain",
      "get",
      "startAtPM",
      "getTime"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar patternString1 = '(?:由|從|自)?' +\n    '(?:' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar patternString2 = '(?:\\\\s*(?:到|至|\\\\-|\\\\–|\\\\~|\\\\〜)\\\\s*)' +\n    '(?:' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar FIRST_REG_PATTERN = new RegExp(patternString1, 'i');\nvar SECOND_REG_PATTERN = new RegExp(patternString2, 'i');\n\nvar DAY_GROUP_1 = 1;\nvar ZH_AM_PM_HOUR_GROUP_1 = 2;\nvar ZH_AM_PM_HOUR_GROUP_2 = 3;\nvar DAY_GROUP_3 = 4;\nvar ZH_AM_PM_HOUR_GROUP_3 = 5;\nvar HOUR_GROUP = 6;\nvar MINUTE_GROUP = 7;\nvar SECOND_GROUP = 8;\nvar AM_PM_HOUR_GROUP = 9;\n\nexports.Parser = function ZHHantTimeExpressionParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return FIRST_REG_PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index;\n        result.text = match[0];\n        result.tags.ZHTimeExpressionParser = true;\n\n        var startMoment = refMoment.clone();\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment.add(-1, 'day');\n            } else if (day1 == \"前\"){\n                startMoment.add(-2, 'day');\n            } else if (day1 == \"大前\"){\n                startMoment.add(-3, 'day');\n            } else if (day1 == \"後\"){\n                startMoment.add(2, 'day');\n            } else if (day1 == \"大後\"){\n                startMoment.add(3, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                startMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment.add(-1, 'day');\n            } else if (day3 == \"前\"){\n                startMoment.add(-2, 'day');\n            } else if (day3 == \"大前\"){\n                startMoment.add(-3, 'day');\n            } else if (day3 == \"後\"){\n                startMoment.add(2, 'day');\n            } else if (day3 == \"大後\"){\n                startMoment.add(3, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else {\n            result.start.imply('day', startMoment.date());\n            result.start.imply('month', startMoment.month() + 1);\n            result.start.imply('year', startMoment.year());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n            if (second >= 60) return null;\n            result.start.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n        var endMoment = startMoment.clone();\n        result.end = new ParsedComponents(null, null);\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  endMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                endMoment.add(-1, 'day');\n            } else if (day1 == \"前\"){\n                endMoment.add(-2, 'day');\n            } else if (day1 == \"大前\"){\n                endMoment.add(-3, 'day');\n            } else if (day1 == \"後\"){\n                endMoment.add(2, 'day');\n            } else if (day1 == \"大後\"){\n                endMoment.add(3, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                endMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                endMoment.add(-1, 'day');\n            } else if (day3 == \"前\"){\n                endMoment.add(-2, 'day');\n            } else if (day3 == \"大前\"){\n                endMoment.add(-3, 'day');\n            } else if (day3 == \"後\"){\n                endMoment.add(2, 'day');\n            } else if (day3 == \"大後\"){\n                endMoment.add(3, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else {\n            result.end.imply('day', endMoment.date());\n            result.end.imply('month', endMoment.month() + 1);\n            result.end.imply('year', endMoment.year());\n        }\n\n        hour = 0;\n        minute = 0;\n        meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n\n            if (second >= 60) return null;\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    };\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

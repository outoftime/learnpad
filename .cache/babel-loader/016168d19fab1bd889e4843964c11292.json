{
  "ast": null,
  "code": "function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { faInfoCircle, faPenSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { DraggableCore } from 'react-draggable';\nimport bindAll from 'lodash-es/bindAll';\nimport clone from 'lodash-es/clone';\nimport includes from 'lodash-es/includes';\nimport isNull from 'lodash-es/isNull';\nimport get from 'lodash-es/get';\nimport partial from 'lodash-es/partial';\nimport some from 'lodash-es/some';\nimport { t } from 'i18next';\nimport classnames from 'classnames';\nimport prefix from '../services/inlineStylePrefixer';\nimport { getQueryParameters, setQueryParameters } from '../util/queryParams';\nimport { LANGUAGES } from '../util/editor';\nimport { RIGHT_COLUMN_COMPONENTS } from '../util/ui';\nimport { dehydrateProject, rehydrateProject } from '../clients/localStorage';\nimport { isPristineProject } from '../util/projectUtils';\nimport AccountMigration from '../containers/AccountMigration';\nimport AssignmentCreator from '../containers/AssignmentCreator';\nimport TopBar from '../containers/TopBar';\nimport Instructions from '../containers/Instructions';\nimport NotificationList from '../containers/NotificationList';\nimport EditorsColumn from '../containers/EditorsColumn';\nimport CollapsedComponent from './CollapsedComponent';\nimport Output from './Output';\nimport PopThrobber from './PopThrobber';\n\nvar Workspace =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Workspace, _React$Component);\n\n  function Workspace() {\n    var _this;\n\n    _classCallCheck(this, Workspace);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Workspace).call(this));\n    bindAll(_assertThisInitialized(_this), '_handleUnload', '_handleClickInstructionsBar', '_handleClickInstructionsEditButton');\n    _this.columnRefs = [null, null];\n    return _this;\n  }\n\n  _createClass(Workspace, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onApplicationLoaded = this.props.onApplicationLoaded;\n\n      var _getQueryParameters = getQueryParameters(location.search),\n          gistId = _getQueryParameters.gistId,\n          snapshotKey = _getQueryParameters.snapshotKey,\n          isExperimental = _getQueryParameters.isExperimental;\n\n      var rehydratedProject = rehydrateProject();\n      setQueryParameters({\n        isExperimental: isExperimental\n      });\n      onApplicationLoaded({\n        snapshotKey: snapshotKey,\n        gistId: gistId,\n        isExperimental: isExperimental,\n        rehydratedProject: rehydratedProject\n      });\n      addEventListener('beforeunload', this._handleUnload);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      removeEventListener('beforeunload', this._handleUnload);\n    }\n  }, {\n    key: \"_handleUnload\",\n    value: function _handleUnload() {\n      var currentProject = this.props.currentProject;\n\n      if (!isNull(currentProject) && !isPristineProject(currentProject)) {\n        dehydrateProject(currentProject);\n      }\n    }\n  }, {\n    key: \"_handleClickInstructionsBar\",\n    value: function _handleClickInstructionsBar() {\n      var _this$props = this.props,\n          isEditingInstructions = _this$props.isEditingInstructions,\n          onComponentToggle = _this$props.onComponentToggle;\n\n      if (!isEditingInstructions) {\n        onComponentToggle(get(this.props, ['currentProject', 'projectKey']), 'instructions');\n      }\n    }\n  }, {\n    key: \"_handleClickInstructionsEditButton\",\n    value: function _handleClickInstructionsEditButton() {\n      var _this$props2 = this.props,\n          isEditingInstructions = _this$props2.isEditingInstructions,\n          onClickInstructionsEditButton = _this$props2.onClickInstructionsEditButton;\n\n      if (!isEditingInstructions) {\n        onClickInstructionsEditButton(get(this.props, ['currentProject', 'projectKey']));\n      }\n    }\n  }, {\n    key: \"_renderInstructionsBar\",\n    value: function _renderInstructionsBar() {\n      var _this2 = this;\n\n      var currentInstructions = get(this.props, ['currentProject', 'instructions']);\n\n      if (!this.props.isEditingInstructions && !currentInstructions) {\n        return null;\n      }\n\n      var isInstructionsHidden = get(this.props, ['currentProject', 'hiddenUIComponents']).includes('instructions');\n      return React.createElement(\"div\", {\n        className: classnames('layout__instructions-bar', {\n          'layout__instructions-bar_disabled': this.props.isEditingInstructions\n        }),\n        onClick: this._handleClickInstructionsBar\n      }, React.createElement(FontAwesomeIcon, {\n        fixedWidth: true,\n        className: classnames({\n          u__pointer: !this.props.isEditingInstructions\n        }),\n        icon: faInfoCircle\n      }), !isInstructionsHidden && !this.props.isEditingInstructions && React.createElement(FontAwesomeIcon, {\n        fixedWidth: true,\n        className: \"layout__instructions-bar-edit-button\",\n        icon: faPenSquare,\n        onClick: function onClick(e) {\n          e.stopPropagation();\n\n          _this2._handleClickInstructionsEditButton();\n        }\n      }));\n    }\n  }, {\n    key: \"_renderHiddenLanguages\",\n    value: function _renderHiddenLanguages() {\n      var _this$props3 = this.props,\n          currentProject = _this$props3.currentProject,\n          hiddenLanguages = _this$props3.hiddenLanguages,\n          onComponentToggle = _this$props3.onComponentToggle;\n      return React.createElement(React.Fragment, null, hiddenLanguages.map(function (_ref) {\n        var language = _ref.language;\n        return React.createElement(CollapsedComponent, {\n          component: \"editor.\".concat(language),\n          key: language,\n          projectKey: currentProject.projectKey,\n          text: t(\"languages.\".concat(language)),\n          onComponentUnhide: onComponentToggle\n        });\n      }));\n    }\n  }, {\n    key: \"_renderHiddenRightColumnComponents\",\n    value: function _renderHiddenRightColumnComponents() {\n      var _this$props4 = this.props,\n          currentProject = _this$props4.currentProject,\n          hasErrors = _this$props4.hasErrors,\n          onComponentToggle = _this$props4.onComponentToggle,\n          title = _this$props4.title; // Errors take over the whole right side of the screen\n\n      if (hasErrors) {\n        return null;\n      }\n\n      return RIGHT_COLUMN_COMPONENTS.filter(function (component) {\n        return includes(currentProject.hiddenUIComponents, component);\n      }).map(function (component) {\n        switch (component) {\n          case 'console':\n            return React.createElement(CollapsedComponent, {\n              component: \"console\",\n              isRightJustified: false,\n              key: \"console\",\n              projectKey: currentProject.projectKey,\n              text: t('workspace.components.console'),\n              onComponentUnhide: onComponentToggle\n            });\n\n          case 'preview':\n            return React.createElement(CollapsedComponent, {\n              component: \"preview\",\n              isRightJustified: false,\n              key: \"preview\",\n              projectKey: currentProject.projectKey,\n              text: title,\n              onComponentUnhide: onComponentToggle\n            });\n\n          default:\n            return null;\n        }\n      });\n    }\n  }, {\n    key: \"_shouldRenderLeftColumn\",\n    value: function _shouldRenderLeftColumn() {\n      return this.props.hiddenLanguages.length !== LANGUAGES.length;\n    }\n  }, {\n    key: \"_shouldRenderRightColumn\",\n    value: function _shouldRenderRightColumn() {\n      var _this$props5 = this.props,\n          currentProject = _this$props5.currentProject,\n          shouldRenderOutput = _this$props5.shouldRenderOutput;\n      return shouldRenderOutput || some(RIGHT_COLUMN_COMPONENTS, function (component) {\n        return !includes(currentProject.hiddenUIComponents, component);\n      });\n    }\n  }, {\n    key: \"_isEverythingHidden\",\n    value: function _isEverythingHidden() {\n      return !this._shouldRenderLeftColumn() && !this._shouldRenderRightColumn();\n    }\n  }, {\n    key: \"_renderEverythingHidden\",\n    value: function _renderEverythingHidden() {\n      return React.createElement(\"div\", {\n        className: \"environment__column\"\n      }, this._renderHiddenRightColumnComponents(), this._renderHiddenLanguages());\n    }\n  }, {\n    key: \"_renderEnvironment\",\n    value: function _renderEnvironment() {\n      var _this$props6 = this.props,\n          currentProject = _this$props6.currentProject,\n          isAnyTopBarMenuOpen = _this$props6.isAnyTopBarMenuOpen,\n          isDraggingColumnDivider = _this$props6.isDraggingColumnDivider,\n          isFlexResizingSupported = _this$props6.isFlexResizingSupported,\n          resizableFlexGrow = _this$props6.resizableFlexGrow,\n          resizableFlexRefs = _this$props6.resizableFlexRefs,\n          onResizableFlexDividerDrag = _this$props6.onResizableFlexDividerDrag,\n          onStartDragColumnDivider = _this$props6.onStartDragColumnDivider,\n          onStopDragColumnDivider = _this$props6.onStopDragColumnDivider,\n          shouldRenderOutput = _this$props6.shouldRenderOutput;\n\n      if (isNull(currentProject)) {\n        return React.createElement(PopThrobber, {\n          message: t('workspace.loading')\n        });\n      }\n\n      var _resizableFlexRefs = _slicedToArray(resizableFlexRefs, 2),\n          _handleEditorsRef = _resizableFlexRefs[0],\n          _handleOutputRef = _resizableFlexRefs[1];\n\n      var ignorePointerEvents = isDraggingColumnDivider || isAnyTopBarMenuOpen;\n      return React.createElement(\"div\", {\n        className: \"environment\"\n      }, this._shouldRenderLeftColumn() && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"environment__column\",\n        ref: _handleEditorsRef,\n        style: prefix(clone({\n          flexGrow: resizableFlexGrow.get(0)\n        }))\n      }, React.createElement(\"div\", {\n        className: \"environment__column-contents\"\n      }, React.createElement(\"div\", {\n        className: \"environment__column-contents-inner\"\n      }, React.createElement(EditorsColumn, null), !this._shouldRenderRightColumn() && this._renderHiddenRightColumnComponents(), this._renderHiddenLanguages()))), React.createElement(DraggableCore, {\n        onDrag: partial(onResizableFlexDividerDrag, 0),\n        onStart: onStartDragColumnDivider,\n        onStop: onStopDragColumnDivider\n      }, React.createElement(\"div\", {\n        className: classnames('editors__column-divider', {\n          'editors__column-divider_draggable': isFlexResizingSupported\n        })\n      }))), this._shouldRenderRightColumn() && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"environment__column\",\n        ref: _handleOutputRef,\n        style: prefix({\n          flexGrow: resizableFlexGrow.get(1),\n          pointerEvents: ignorePointerEvents ? 'none' : 'all'\n        })\n      }, React.createElement(\"div\", {\n        className: \"environment__column-contents\"\n      }, React.createElement(\"div\", {\n        className: \"environment__column-contents-inner\"\n      }, shouldRenderOutput && React.createElement(Output, null), this._renderHiddenRightColumnComponents(), !this._shouldRenderLeftColumn() && this._renderHiddenLanguages())))), this._isEverythingHidden() && this._renderEverythingHidden());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"layout\"\n      }, React.createElement(AssignmentCreator, null), React.createElement(TopBar, null), React.createElement(NotificationList, null), React.createElement(\"div\", {\n        className: \"layout__columns\"\n      }, React.createElement(Instructions, null), this._renderInstructionsBar(), React.createElement(\"div\", {\n        className: \"workspace layout__main\"\n      }, this._renderEnvironment())), React.createElement(AccountMigration, null));\n    }\n  }]);\n\n  return Workspace;\n}(React.Component);\n\nexport { Workspace as default };\nWorkspace.propTypes = {\n  currentProject: PropTypes.object,\n  hasErrors: PropTypes.bool.isRequired,\n  hiddenLanguages: PropTypes.array.isRequired,\n  isAnyTopBarMenuOpen: PropTypes.bool.isRequired,\n  isDraggingColumnDivider: PropTypes.bool.isRequired,\n  isEditingInstructions: PropTypes.bool.isRequired,\n  isFlexResizingSupported: PropTypes.bool.isRequired,\n  resizableFlexGrow: ImmutablePropTypes.list.isRequired,\n  resizableFlexRefs: PropTypes.array.isRequired,\n  shouldRenderOutput: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  onApplicationLoaded: PropTypes.func.isRequired,\n  onClickInstructionsEditButton: PropTypes.func.isRequired,\n  onComponentToggle: PropTypes.func.isRequired,\n  onResizableFlexDividerDrag: PropTypes.func.isRequired,\n  onStartDragColumnDivider: PropTypes.func.isRequired,\n  onStopDragColumnDivider: PropTypes.func.isRequired\n};\nWorkspace.defaultProps = {\n  currentProject: null\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/Workspace.jsx"
    ],
    "names": [
      "faInfoCircle",
      "faPenSquare",
      "FontAwesomeIcon",
      "React",
      "PropTypes",
      "ImmutablePropTypes",
      "DraggableCore",
      "bindAll",
      "clone",
      "includes",
      "isNull",
      "get",
      "partial",
      "some",
      "t",
      "classnames",
      "prefix",
      "getQueryParameters",
      "setQueryParameters",
      "LANGUAGES",
      "RIGHT_COLUMN_COMPONENTS",
      "dehydrateProject",
      "rehydrateProject",
      "isPristineProject",
      "AccountMigration",
      "AssignmentCreator",
      "TopBar",
      "Instructions",
      "NotificationList",
      "EditorsColumn",
      "CollapsedComponent",
      "Output",
      "PopThrobber",
      "Workspace",
      "columnRefs",
      "onApplicationLoaded",
      "props",
      "location",
      "search",
      "gistId",
      "snapshotKey",
      "isExperimental",
      "rehydratedProject",
      "addEventListener",
      "_handleUnload",
      "removeEventListener",
      "currentProject",
      "isEditingInstructions",
      "onComponentToggle",
      "onClickInstructionsEditButton",
      "currentInstructions",
      "isInstructionsHidden",
      "_handleClickInstructionsBar",
      "u__pointer",
      "e",
      "stopPropagation",
      "_handleClickInstructionsEditButton",
      "hiddenLanguages",
      "map",
      "language",
      "projectKey",
      "hasErrors",
      "title",
      "filter",
      "component",
      "hiddenUIComponents",
      "length",
      "shouldRenderOutput",
      "_shouldRenderLeftColumn",
      "_shouldRenderRightColumn",
      "_renderHiddenRightColumnComponents",
      "_renderHiddenLanguages",
      "isAnyTopBarMenuOpen",
      "isDraggingColumnDivider",
      "isFlexResizingSupported",
      "resizableFlexGrow",
      "resizableFlexRefs",
      "onResizableFlexDividerDrag",
      "onStartDragColumnDivider",
      "onStopDragColumnDivider",
      "_handleEditorsRef",
      "_handleOutputRef",
      "ignorePointerEvents",
      "flexGrow",
      "pointerEvents",
      "_isEverythingHidden",
      "_renderEverythingHidden",
      "_renderInstructionsBar",
      "_renderEnvironment",
      "Component",
      "propTypes",
      "object",
      "bool",
      "isRequired",
      "array",
      "list",
      "string",
      "func",
      "defaultProps"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import {faInfoCircle, faPenSquare} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport {DraggableCore} from 'react-draggable';\nimport bindAll from 'lodash-es/bindAll';\nimport clone from 'lodash-es/clone';\nimport includes from 'lodash-es/includes';\nimport isNull from 'lodash-es/isNull';\nimport get from 'lodash-es/get';\nimport partial from 'lodash-es/partial';\nimport some from 'lodash-es/some';\nimport {t} from 'i18next';\nimport classnames from 'classnames';\n\nimport prefix from '../services/inlineStylePrefixer';\nimport {getQueryParameters, setQueryParameters} from '../util/queryParams';\nimport {LANGUAGES} from '../util/editor';\nimport {RIGHT_COLUMN_COMPONENTS} from '../util/ui';\nimport {dehydrateProject, rehydrateProject} from '../clients/localStorage';\n\nimport {isPristineProject} from '../util/projectUtils';\n\nimport AccountMigration from '../containers/AccountMigration';\nimport AssignmentCreator from '../containers/AssignmentCreator';\nimport TopBar from '../containers/TopBar';\nimport Instructions from '../containers/Instructions';\nimport NotificationList from '../containers/NotificationList';\nimport EditorsColumn from '../containers/EditorsColumn';\n\nimport CollapsedComponent from './CollapsedComponent';\nimport Output from './Output';\nimport PopThrobber from './PopThrobber';\n\nexport default class Workspace extends React.Component {\n  constructor() {\n    super();\n    bindAll(\n      this,\n      '_handleUnload',\n      '_handleClickInstructionsBar',\n      '_handleClickInstructionsEditButton',\n    );\n    this.columnRefs = [null, null];\n  }\n\n  componentDidMount() {\n    const {onApplicationLoaded} = this.props;\n    const {gistId, snapshotKey, isExperimental} = getQueryParameters(\n      location.search,\n    );\n    const rehydratedProject = rehydrateProject();\n\n    setQueryParameters({isExperimental});\n\n    onApplicationLoaded({\n      snapshotKey,\n      gistId,\n      isExperimental,\n      rehydratedProject,\n    });\n\n    addEventListener('beforeunload', this._handleUnload);\n  }\n\n  componentWillUnmount() {\n    removeEventListener('beforeunload', this._handleUnload);\n  }\n\n  _handleUnload() {\n    const {currentProject} = this.props;\n    if (!isNull(currentProject) && !isPristineProject(currentProject)) {\n      dehydrateProject(currentProject);\n    }\n  }\n\n  _handleClickInstructionsBar() {\n    const {isEditingInstructions, onComponentToggle} = this.props;\n    if (!isEditingInstructions) {\n      onComponentToggle(\n        get(this.props, ['currentProject', 'projectKey']),\n        'instructions',\n      );\n    }\n  }\n\n  _handleClickInstructionsEditButton() {\n    const {isEditingInstructions, onClickInstructionsEditButton} = this.props;\n    if (!isEditingInstructions) {\n      onClickInstructionsEditButton(\n        get(this.props, ['currentProject', 'projectKey']),\n      );\n    }\n  }\n\n  _renderInstructionsBar() {\n    const currentInstructions = get(this.props, [\n      'currentProject',\n      'instructions',\n    ]);\n    if (!this.props.isEditingInstructions && !currentInstructions) {\n      return null;\n    }\n\n    const isInstructionsHidden = get(this.props, [\n      'currentProject',\n      'hiddenUIComponents',\n    ]).includes('instructions');\n\n    return (\n      <div\n        className={classnames('layout__instructions-bar', {\n          'layout__instructions-bar_disabled': this.props.isEditingInstructions,\n        })}\n        onClick={this._handleClickInstructionsBar}\n      >\n        <FontAwesomeIcon\n          fixedWidth\n          className={classnames({\n            u__pointer: !this.props.isEditingInstructions,\n          })}\n          icon={faInfoCircle}\n        />\n        {!isInstructionsHidden && !this.props.isEditingInstructions && (\n          <FontAwesomeIcon\n            fixedWidth\n            className=\"layout__instructions-bar-edit-button\"\n            icon={faPenSquare}\n            onClick={e => {\n              e.stopPropagation();\n              this._handleClickInstructionsEditButton();\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n\n  _renderHiddenLanguages() {\n    const {currentProject, hiddenLanguages, onComponentToggle} = this.props;\n    return (\n      <>\n        {hiddenLanguages.map(({language}) => (\n          <CollapsedComponent\n            component={`editor.${language}`}\n            key={language}\n            projectKey={currentProject.projectKey}\n            text={t(`languages.${language}`)}\n            onComponentUnhide={onComponentToggle}\n          />\n        ))}\n      </>\n    );\n  }\n\n  _renderHiddenRightColumnComponents() {\n    const {currentProject, hasErrors, onComponentToggle, title} = this.props;\n    // Errors take over the whole right side of the screen\n    if (hasErrors) {\n      return null;\n    }\n    return RIGHT_COLUMN_COMPONENTS.filter(component =>\n      includes(currentProject.hiddenUIComponents, component),\n    ).map(component => {\n      switch (component) {\n        case 'console':\n          return (\n            <CollapsedComponent\n              component=\"console\"\n              isRightJustified={false}\n              key=\"console\"\n              projectKey={currentProject.projectKey}\n              text={t('workspace.components.console')}\n              onComponentUnhide={onComponentToggle}\n            />\n          );\n        case 'preview':\n          return (\n            <CollapsedComponent\n              component=\"preview\"\n              isRightJustified={false}\n              key=\"preview\"\n              projectKey={currentProject.projectKey}\n              text={title}\n              onComponentUnhide={onComponentToggle}\n            />\n          );\n        default:\n          return null;\n      }\n    });\n  }\n\n  _shouldRenderLeftColumn() {\n    return this.props.hiddenLanguages.length !== LANGUAGES.length;\n  }\n\n  _shouldRenderRightColumn() {\n    const {currentProject, shouldRenderOutput} = this.props;\n    return (\n      shouldRenderOutput ||\n      some(\n        RIGHT_COLUMN_COMPONENTS,\n        component => !includes(currentProject.hiddenUIComponents, component),\n      )\n    );\n  }\n\n  _isEverythingHidden() {\n    return !this._shouldRenderLeftColumn() && !this._shouldRenderRightColumn();\n  }\n\n  _renderEverythingHidden() {\n    return (\n      <div className=\"environment__column\">\n        {this._renderHiddenRightColumnComponents()}\n        {this._renderHiddenLanguages()}\n      </div>\n    );\n  }\n  _renderEnvironment() {\n    const {\n      currentProject,\n      isAnyTopBarMenuOpen,\n      isDraggingColumnDivider,\n      isFlexResizingSupported,\n      resizableFlexGrow,\n      resizableFlexRefs,\n      onResizableFlexDividerDrag,\n      onStartDragColumnDivider,\n      onStopDragColumnDivider,\n      shouldRenderOutput,\n    } = this.props;\n    if (isNull(currentProject)) {\n      return <PopThrobber message={t('workspace.loading')} />;\n    }\n\n    const [_handleEditorsRef, _handleOutputRef] = resizableFlexRefs;\n    const ignorePointerEvents = isDraggingColumnDivider || isAnyTopBarMenuOpen;\n    return (\n      <div className=\"environment\">\n        {this._shouldRenderLeftColumn() && (\n          <>\n            <div\n              className=\"environment__column\"\n              ref={_handleEditorsRef}\n              style={prefix(clone({flexGrow: resizableFlexGrow.get(0)}))}\n            >\n              <div className=\"environment__column-contents\">\n                <div className=\"environment__column-contents-inner\">\n                  <EditorsColumn />\n                  {!this._shouldRenderRightColumn() &&\n                    this._renderHiddenRightColumnComponents()}\n                  {this._renderHiddenLanguages()}\n                </div>\n              </div>\n            </div>\n            <DraggableCore\n              onDrag={partial(onResizableFlexDividerDrag, 0)}\n              onStart={onStartDragColumnDivider}\n              onStop={onStopDragColumnDivider}\n            >\n              <div\n                className={classnames('editors__column-divider', {\n                  'editors__column-divider_draggable': isFlexResizingSupported,\n                })}\n              />\n            </DraggableCore>\n          </>\n        )}\n        {this._shouldRenderRightColumn() && (\n          <>\n            <div\n              className=\"environment__column\"\n              ref={_handleOutputRef}\n              style={prefix({\n                flexGrow: resizableFlexGrow.get(1),\n                pointerEvents: ignorePointerEvents ? 'none' : 'all',\n              })}\n            >\n              <div className=\"environment__column-contents\">\n                <div className=\"environment__column-contents-inner\">\n                  {shouldRenderOutput && <Output />}\n                  {this._renderHiddenRightColumnComponents()}\n                  {!this._shouldRenderLeftColumn() &&\n                    this._renderHiddenLanguages()}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n        {this._isEverythingHidden() && this._renderEverythingHidden()}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"layout\">\n        <AssignmentCreator />\n        <TopBar />\n        <NotificationList />\n        <div className=\"layout__columns\">\n          <Instructions />\n          {this._renderInstructionsBar()}\n          <div className=\"workspace layout__main\">\n            {this._renderEnvironment()}\n          </div>\n        </div>\n        <AccountMigration />\n      </div>\n    );\n  }\n}\n\nWorkspace.propTypes = {\n  currentProject: PropTypes.object,\n  hasErrors: PropTypes.bool.isRequired,\n  hiddenLanguages: PropTypes.array.isRequired,\n  isAnyTopBarMenuOpen: PropTypes.bool.isRequired,\n  isDraggingColumnDivider: PropTypes.bool.isRequired,\n  isEditingInstructions: PropTypes.bool.isRequired,\n  isFlexResizingSupported: PropTypes.bool.isRequired,\n  resizableFlexGrow: ImmutablePropTypes.list.isRequired,\n  resizableFlexRefs: PropTypes.array.isRequired,\n  shouldRenderOutput: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  onApplicationLoaded: PropTypes.func.isRequired,\n  onClickInstructionsEditButton: PropTypes.func.isRequired,\n  onComponentToggle: PropTypes.func.isRequired,\n  onResizableFlexDividerDrag: PropTypes.func.isRequired,\n  onStartDragColumnDivider: PropTypes.func.isRequired,\n  onStopDragColumnDivider: PropTypes.func.isRequired,\n};\n\nWorkspace.defaultProps = {\n  currentProject: null,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

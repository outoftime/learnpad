{
  "ast": null,
  "code": "import Immutable from 'immutable';\nimport assign from 'lodash-es/assign';\nimport isNil from 'lodash-es/isNil';\nimport filter from 'lodash-es/filter';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\nimport map from 'lodash-es/map';\nimport sortBy from 'lodash-es/sortBy';\nimport values from 'lodash-es/values';\nimport { Project } from '../records';\nimport { isPristineProject } from '../util/projectUtils';\nimport ProjectSources from '../records/ProjectSources';\nvar emptyMap = new Immutable.Map();\n\nfunction addProject(state, project) {\n  return state.set(project.projectKey, Project.fromJS(project).update('hiddenUIComponents', function (components) {\n    return components.add('console');\n  }));\n}\n\nfunction removePristineExcept(state, keepProjectKey) {\n  return state.filter(function (project, projectKey) {\n    return projectKey === keepProjectKey || !isPristineProject(project);\n  });\n}\n\nfunction unhideComponent(state, projectKey, component, timestamp) {\n  return state.updateIn([projectKey, 'hiddenUIComponents'], function (hiddenUIComponents) {\n    return hiddenUIComponents.delete(component);\n  }).setIn([projectKey, 'updatedAt'], timestamp);\n}\n\nfunction contentForLanguage(files, language) {\n  var filesForLanguage = sortBy(filter(files, {\n    language: language\n  }), function (file) {\n    return file.filename;\n  });\n  return map(filesForLanguage, 'content').join('\\n\\n');\n}\n\nfunction importGist(state, projectKey, gistData) {\n  var files = values(gistData.files);\n  var popcodeJsonFile = find(files, {\n    filename: 'popcode.json'\n  });\n  var popcodeJson = JSON.parse(get(popcodeJsonFile, 'content', '{}'));\n  return addProject(state, {\n    projectKey: projectKey,\n    sources: {\n      html: get(find(files, {\n        language: 'HTML'\n      }), 'content', ''),\n      css: contentForLanguage(files, 'CSS'),\n      javascript: contentForLanguage(files, 'JavaScript')\n    },\n    enabledLibraries: popcodeJson.enabledLibraries || [],\n    hiddenUIComponents: popcodeJson.hiddenUIComponents || [],\n    instructions: contentForLanguage(files, 'Markdown'),\n    isArchived: false\n  });\n}\n\nexport function reduceRoot(stateIn, action) {\n  return stateIn.update('projects', function (projects) {\n    switch (action.type) {\n      case 'USER_LOGGED_OUT':\n        {\n          var currentProjectKey = stateIn.getIn(['currentProject', 'projectKey']);\n\n          if (isNil(currentProjectKey)) {\n            return new Immutable.Map();\n          }\n\n          return new Immutable.Map().set(currentProjectKey, projects.get(currentProjectKey));\n        }\n\n      case 'FOCUS_LINE':\n        return unhideComponent(projects, stateIn.getIn(['currentProject', 'projectKey']), action.payload.component, action.meta.timestamp);\n    }\n\n    return projects;\n  });\n}\nexport default function reduceProjects(stateIn, action) {\n  var state;\n\n  if (stateIn === undefined) {\n    state = emptyMap;\n  } else {\n    state = stateIn;\n  }\n\n  switch (action.type) {\n    case 'PROJECTS_LOADED':\n      return action.payload.reduce(addProject, state);\n\n    case 'ACCOUNT_MIGRATION_COMPLETE':\n      return action.payload.projects.reduce(addProject, state);\n\n    case 'UPDATE_PROJECT_SOURCE':\n      return state.setIn([action.payload.projectKey, 'sources', action.payload.language], action.payload.newValue).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'PROJECT_BEAUTIFIED':\n      return state.setIn([action.payload.projectKey, 'sources'], new ProjectSources(action.payload.projectSources)).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'UPDATE_PROJECT_INSTRUCTIONS':\n      return state.setIn([action.payload.projectKey, 'instructions'], action.payload.newValue).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'PROJECT_CREATED':\n      return removePristineExcept(state, action.payload.projectKey).set(action.payload.projectKey, new Project({\n        projectKey: action.payload.projectKey\n      }));\n\n    case 'CHANGE_CURRENT_PROJECT':\n      return removePristineExcept(state, action.payload.projectKey).setIn([action.payload.projectKey, 'isArchived'], false);\n\n    case 'SNAPSHOT_IMPORTED':\n      return addProject(state, assign({}, action.payload.project, {\n        projectKey: action.payload.projectKey,\n        updatedAt: null\n      }));\n\n    case 'GIST_IMPORTED':\n      return importGist(state, action.payload.projectKey, action.payload.gistData);\n\n    case 'PROJECT_RESTORED_FROM_LAST_SESSION':\n      return addProject(state, action.payload);\n\n    case 'TOGGLE_LIBRARY':\n      return state.updateIn([action.payload.projectKey, 'enabledLibraries'], function (enabledLibraries) {\n        var libraryKey = action.payload.libraryKey;\n\n        if (enabledLibraries.has(libraryKey)) {\n          return enabledLibraries.delete(libraryKey);\n        }\n\n        return enabledLibraries.add(libraryKey);\n      }).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'HIDE_COMPONENT':\n      return state.updateIn([action.payload.projectKey, 'hiddenUIComponents'], function (hiddenUIComponents) {\n        return hiddenUIComponents.add(action.payload.componentName);\n      }).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'UNHIDE_COMPONENT':\n      return unhideComponent(state, action.payload.projectKey, action.payload.componentName, action.meta.timestamp);\n\n    case 'TOGGLE_COMPONENT':\n      return state.updateIn([action.payload.projectKey, 'hiddenUIComponents'], function (hiddenUIComponents) {\n        var componentName = action.payload.componentName;\n\n        if (hiddenUIComponents.includes(componentName)) {\n          return hiddenUIComponents.remove(action.payload.componentName);\n        }\n\n        return hiddenUIComponents.add(action.payload.componentName);\n      }).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'START_EDITING_INSTRUCTIONS':\n      return unhideComponent(state, action.payload.projectKey, 'instructions', action.meta.timestamp);\n\n    case 'PROJECT_EXPORTED':\n      if (action.payload.exportType === 'repo' && action.payload.exportData.name) {\n        return state.setIn([action.payload.projectKey, 'externalLocations', 'githubRepoName'], action.payload.exportData.name).setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n      }\n\n      return state;\n\n    case 'ARCHIVE_PROJECT':\n      return state.setIn([action.payload.projectKey, 'isArchived'], true);\n\n    default:\n      return state;\n  }\n}",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/reducers/projects.js"],
    "names": [
      "Immutable",
      "assign",
      "isNil",
      "filter",
      "find",
      "get",
      "map",
      "sortBy",
      "values",
      "Project",
      "isPristineProject",
      "ProjectSources",
      "emptyMap",
      "Map",
      "addProject",
      "state",
      "project",
      "set",
      "projectKey",
      "fromJS",
      "update",
      "components",
      "add",
      "removePristineExcept",
      "keepProjectKey",
      "unhideComponent",
      "component",
      "timestamp",
      "updateIn",
      "hiddenUIComponents",
      "delete",
      "setIn",
      "contentForLanguage",
      "files",
      "language",
      "filesForLanguage",
      "file",
      "filename",
      "join",
      "importGist",
      "gistData",
      "popcodeJsonFile",
      "popcodeJson",
      "JSON",
      "parse",
      "sources",
      "html",
      "css",
      "javascript",
      "enabledLibraries",
      "instructions",
      "isArchived",
      "reduceRoot",
      "stateIn",
      "action",
      "projects",
      "type",
      "currentProjectKey",
      "getIn",
      "payload",
      "meta",
      "reduceProjects",
      "undefined",
      "reduce",
      "newValue",
      "projectSources",
      "updatedAt",
      "libraryKey",
      "has",
      "componentName",
      "includes",
      "remove",
      "exportType",
      "exportData",
      "name"
    ],
    "mappings": "AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,IAAMC,QAAQ,GAAG,IAAIZ,SAAS,CAACa,GAAd,EAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AAClC,SAAOD,KAAK,CAACE,GAAN,CACLD,OAAO,CAACE,UADH,EAELT,OAAO,CAACU,MAAR,CAAeH,OAAf,EAAwBI,MAAxB,CAA+B,oBAA/B,EAAqD,UAAAC,UAAU;AAAA,WAC7DA,UAAU,CAACC,GAAX,CAAe,SAAf,CAD6D;AAAA,GAA/D,CAFK,CAAP;AAMD;;AAED,SAASC,oBAAT,CAA8BR,KAA9B,EAAqCS,cAArC,EAAqD;AACnD,SAAOT,KAAK,CAACZ,MAAN,CACL,UAACa,OAAD,EAAUE,UAAV;AAAA,WACEA,UAAU,KAAKM,cAAf,IAAiC,CAACd,iBAAiB,CAACM,OAAD,CADrD;AAAA,GADK,CAAP;AAID;;AAED,SAASS,eAAT,CAAyBV,KAAzB,EAAgCG,UAAhC,EAA4CQ,SAA5C,EAAuDC,SAAvD,EAAkE;AAChE,SAAOZ,KAAK,CACTa,QADI,CACK,CAACV,UAAD,EAAa,oBAAb,CADL,EACyC,UAAAW,kBAAkB;AAAA,WAC9DA,kBAAkB,CAACC,MAAnB,CAA0BJ,SAA1B,CAD8D;AAAA,GAD3D,EAIJK,KAJI,CAIE,CAACb,UAAD,EAAa,WAAb,CAJF,EAI6BS,SAJ7B,CAAP;AAKD;;AAED,SAASK,kBAAT,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6C;AAC3C,MAAMC,gBAAgB,GAAG5B,MAAM,CAC7BJ,MAAM,CAAC8B,KAAD,EAAQ;AAACC,IAAAA,QAAQ,EAARA;AAAD,GAAR,CADuB,EAE7B,UAAAE,IAAI;AAAA,WAAIA,IAAI,CAACC,QAAT;AAAA,GAFyB,CAA/B;AAIA,SAAO/B,GAAG,CAAC6B,gBAAD,EAAmB,SAAnB,CAAH,CAAiCG,IAAjC,CAAsC,MAAtC,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBxB,KAApB,EAA2BG,UAA3B,EAAuCsB,QAAvC,EAAiD;AAC/C,MAAMP,KAAK,GAAGzB,MAAM,CAACgC,QAAQ,CAACP,KAAV,CAApB;AACA,MAAMQ,eAAe,GAAGrC,IAAI,CAAC6B,KAAD,EAAQ;AAACI,IAAAA,QAAQ,EAAE;AAAX,GAAR,CAA5B;AACA,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWvC,GAAG,CAACoC,eAAD,EAAkB,SAAlB,EAA6B,IAA7B,CAAd,CAApB;AAEA,SAAO3B,UAAU,CAACC,KAAD,EAAQ;AACvBG,IAAAA,UAAU,EAAVA,UADuB;AAEvB2B,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEzC,GAAG,CAACD,IAAI,CAAC6B,KAAD,EAAQ;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAR,CAAL,EAAkC,SAAlC,EAA6C,EAA7C,CADF;AAEPa,MAAAA,GAAG,EAAEf,kBAAkB,CAACC,KAAD,EAAQ,KAAR,CAFhB;AAGPe,MAAAA,UAAU,EAAEhB,kBAAkB,CAACC,KAAD,EAAQ,YAAR;AAHvB,KAFc;AAOvBgB,IAAAA,gBAAgB,EAAEP,WAAW,CAACO,gBAAZ,IAAgC,EAP3B;AAQvBpB,IAAAA,kBAAkB,EAAEa,WAAW,CAACb,kBAAZ,IAAkC,EAR/B;AASvBqB,IAAAA,YAAY,EAAElB,kBAAkB,CAACC,KAAD,EAAQ,UAAR,CATT;AAUvBkB,IAAAA,UAAU,EAAE;AAVW,GAAR,CAAjB;AAYD;;AAED,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AAC1C,SAAOD,OAAO,CAACjC,MAAR,CAAe,UAAf,EAA2B,UAAAmC,QAAQ,EAAI;AAC5C,YAAQD,MAAM,CAACE,IAAf;AACE,WAAK,iBAAL;AAAwB;AACtB,cAAMC,iBAAiB,GAAGJ,OAAO,CAACK,KAAR,CAAc,CACtC,gBADsC,EAEtC,YAFsC,CAAd,CAA1B;;AAKA,cAAIxD,KAAK,CAACuD,iBAAD,CAAT,EAA8B;AAC5B,mBAAO,IAAIzD,SAAS,CAACa,GAAd,EAAP;AACD;;AAED,iBAAO,IAAIb,SAAS,CAACa,GAAd,GAAoBI,GAApB,CACLwC,iBADK,EAELF,QAAQ,CAAClD,GAAT,CAAaoD,iBAAb,CAFK,CAAP;AAID;;AACD,WAAK,YAAL;AACE,eAAOhC,eAAe,CACpB8B,QADoB,EAEpBF,OAAO,CAACK,KAAR,CAAc,CAAC,gBAAD,EAAmB,YAAnB,CAAd,CAFoB,EAGpBJ,MAAM,CAACK,OAAP,CAAejC,SAHK,EAIpB4B,MAAM,CAACM,IAAP,CAAYjC,SAJQ,CAAtB;AAjBJ;;AAwBA,WAAO4B,QAAP;AACD,GA1BM,CAAP;AA2BD;AAED,eAAe,SAASM,cAAT,CAAwBR,OAAxB,EAAiCC,MAAjC,EAAyC;AACtD,MAAIvC,KAAJ;;AAEA,MAAIsC,OAAO,KAAKS,SAAhB,EAA2B;AACzB/C,IAAAA,KAAK,GAAGH,QAAR;AACD,GAFD,MAEO;AACLG,IAAAA,KAAK,GAAGsC,OAAR;AACD;;AAED,UAAQC,MAAM,CAACE,IAAf;AACE,SAAK,iBAAL;AACE,aAAOF,MAAM,CAACK,OAAP,CAAeI,MAAf,CAAsBjD,UAAtB,EAAkCC,KAAlC,CAAP;;AAEF,SAAK,4BAAL;AACE,aAAOuC,MAAM,CAACK,OAAP,CAAeJ,QAAf,CAAwBQ,MAAxB,CAA+BjD,UAA/B,EAA2CC,KAA3C,CAAP;;AAEF,SAAK,uBAAL;AACE,aAAOA,KAAK,CACTgB,KADI,CAEH,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,SAA5B,EAAuCoC,MAAM,CAACK,OAAP,CAAezB,QAAtD,CAFG,EAGHoB,MAAM,CAACK,OAAP,CAAeK,QAHZ,EAKJjC,KALI,CAKE,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CALF,EAK4CoC,MAAM,CAACM,IAAP,CAAYjC,SALxD,CAAP;;AAOF,SAAK,oBAAL;AACE,aAAOZ,KAAK,CACTgB,KADI,CAEH,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,SAA5B,CAFG,EAGH,IAAIP,cAAJ,CAAmB2C,MAAM,CAACK,OAAP,CAAeM,cAAlC,CAHG,EAKJlC,KALI,CAKE,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CALF,EAK4CoC,MAAM,CAACM,IAAP,CAAYjC,SALxD,CAAP;;AAOF,SAAK,6BAAL;AACE,aAAOZ,KAAK,CACTgB,KADI,CAEH,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,cAA5B,CAFG,EAGHoC,MAAM,CAACK,OAAP,CAAeK,QAHZ,EAKJjC,KALI,CAKE,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CALF,EAK4CoC,MAAM,CAACM,IAAP,CAAYjC,SALxD,CAAP;;AAOF,SAAK,iBAAL;AACE,aAAOJ,oBAAoB,CAACR,KAAD,EAAQuC,MAAM,CAACK,OAAP,CAAezC,UAAvB,CAApB,CAAuDD,GAAvD,CACLqC,MAAM,CAACK,OAAP,CAAezC,UADV,EAEL,IAAIT,OAAJ,CAAY;AAACS,QAAAA,UAAU,EAAEoC,MAAM,CAACK,OAAP,CAAezC;AAA5B,OAAZ,CAFK,CAAP;;AAKF,SAAK,wBAAL;AACE,aAAOK,oBAAoB,CAACR,KAAD,EAAQuC,MAAM,CAACK,OAAP,CAAezC,UAAvB,CAApB,CAAuDa,KAAvD,CACL,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,YAA5B,CADK,EAEL,KAFK,CAAP;;AAKF,SAAK,mBAAL;AACE,aAAOJ,UAAU,CACfC,KADe,EAEfd,MAAM,CAAC,EAAD,EAAKqD,MAAM,CAACK,OAAP,CAAe3C,OAApB,EAA6B;AACjCE,QAAAA,UAAU,EAAEoC,MAAM,CAACK,OAAP,CAAezC,UADM;AAEjCgD,QAAAA,SAAS,EAAE;AAFsB,OAA7B,CAFS,CAAjB;;AAQF,SAAK,eAAL;AACE,aAAO3B,UAAU,CACfxB,KADe,EAEfuC,MAAM,CAACK,OAAP,CAAezC,UAFA,EAGfoC,MAAM,CAACK,OAAP,CAAenB,QAHA,CAAjB;;AAMF,SAAK,oCAAL;AACE,aAAO1B,UAAU,CAACC,KAAD,EAAQuC,MAAM,CAACK,OAAf,CAAjB;;AAEF,SAAK,gBAAL;AACE,aAAO5C,KAAK,CACTa,QADI,CAEH,CAAC0B,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,kBAA5B,CAFG,EAGH,UAAA+B,gBAAgB,EAAI;AAAA,YACXkB,UADW,GACGb,MAAM,CAACK,OADV,CACXQ,UADW;;AAElB,YAAIlB,gBAAgB,CAACmB,GAAjB,CAAqBD,UAArB,CAAJ,EAAsC;AACpC,iBAAOlB,gBAAgB,CAACnB,MAAjB,CAAwBqC,UAAxB,CAAP;AACD;;AACD,eAAOlB,gBAAgB,CAAC3B,GAAjB,CAAqB6C,UAArB,CAAP;AACD,OATE,EAWJpC,KAXI,CAWE,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CAXF,EAW4CoC,MAAM,CAACM,IAAP,CAAYjC,SAXxD,CAAP;;AAaF,SAAK,gBAAL;AACE,aAAOZ,KAAK,CACTa,QADI,CAEH,CAAC0B,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,oBAA5B,CAFG,EAGH,UAAAW,kBAAkB;AAAA,eAChBA,kBAAkB,CAACP,GAAnB,CAAuBgC,MAAM,CAACK,OAAP,CAAeU,aAAtC,CADgB;AAAA,OAHf,EAMJtC,KANI,CAME,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CANF,EAM4CoC,MAAM,CAACM,IAAP,CAAYjC,SANxD,CAAP;;AAQF,SAAK,kBAAL;AACE,aAAOF,eAAe,CACpBV,KADoB,EAEpBuC,MAAM,CAACK,OAAP,CAAezC,UAFK,EAGpBoC,MAAM,CAACK,OAAP,CAAeU,aAHK,EAIpBf,MAAM,CAACM,IAAP,CAAYjC,SAJQ,CAAtB;;AAOF,SAAK,kBAAL;AACE,aAAOZ,KAAK,CACTa,QADI,CAEH,CAAC0B,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,oBAA5B,CAFG,EAGH,UAAAW,kBAAkB,EAAI;AAAA,YACbwC,aADa,GACIf,MAAM,CAACK,OADX,CACbU,aADa;;AAEpB,YAAIxC,kBAAkB,CAACyC,QAAnB,CAA4BD,aAA5B,CAAJ,EAAgD;AAC9C,iBAAOxC,kBAAkB,CAAC0C,MAAnB,CAA0BjB,MAAM,CAACK,OAAP,CAAeU,aAAzC,CAAP;AACD;;AACD,eAAOxC,kBAAkB,CAACP,GAAnB,CAAuBgC,MAAM,CAACK,OAAP,CAAeU,aAAtC,CAAP;AACD,OATE,EAWJtC,KAXI,CAWE,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CAXF,EAW4CoC,MAAM,CAACM,IAAP,CAAYjC,SAXxD,CAAP;;AAaF,SAAK,4BAAL;AACE,aAAOF,eAAe,CACpBV,KADoB,EAEpBuC,MAAM,CAACK,OAAP,CAAezC,UAFK,EAGpB,cAHoB,EAIpBoC,MAAM,CAACM,IAAP,CAAYjC,SAJQ,CAAtB;;AAOF,SAAK,kBAAL;AACE,UACE2B,MAAM,CAACK,OAAP,CAAea,UAAf,KAA8B,MAA9B,IACAlB,MAAM,CAACK,OAAP,CAAec,UAAf,CAA0BC,IAF5B,EAGE;AACA,eAAO3D,KAAK,CACTgB,KADI,CAEH,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,mBAA5B,EAAiD,gBAAjD,CAFG,EAGHoC,MAAM,CAACK,OAAP,CAAec,UAAf,CAA0BC,IAHvB,EAKJ3C,KALI,CAMH,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,WAA5B,CANG,EAOHoC,MAAM,CAACM,IAAP,CAAYjC,SAPT,CAAP;AASD;;AACD,aAAOZ,KAAP;;AAEF,SAAK,iBAAL;AACE,aAAOA,KAAK,CAACgB,KAAN,CAAY,CAACuB,MAAM,CAACK,OAAP,CAAezC,UAAhB,EAA4B,YAA5B,CAAZ,EAAuD,IAAvD,CAAP;;AAEF;AACE,aAAOH,KAAP;AAxIJ;AA0ID",
    "sourcesContent": [
      "import Immutable from 'immutable';\nimport assign from 'lodash-es/assign';\nimport isNil from 'lodash-es/isNil';\nimport filter from 'lodash-es/filter';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\nimport map from 'lodash-es/map';\nimport sortBy from 'lodash-es/sortBy';\nimport values from 'lodash-es/values';\n\nimport {Project} from '../records';\nimport {isPristineProject} from '../util/projectUtils';\nimport ProjectSources from '../records/ProjectSources';\n\nconst emptyMap = new Immutable.Map();\n\nfunction addProject(state, project) {\n  return state.set(\n    project.projectKey,\n    Project.fromJS(project).update('hiddenUIComponents', components =>\n      components.add('console'),\n    ),\n  );\n}\n\nfunction removePristineExcept(state, keepProjectKey) {\n  return state.filter(\n    (project, projectKey) =>\n      projectKey === keepProjectKey || !isPristineProject(project),\n  );\n}\n\nfunction unhideComponent(state, projectKey, component, timestamp) {\n  return state\n    .updateIn([projectKey, 'hiddenUIComponents'], hiddenUIComponents =>\n      hiddenUIComponents.delete(component),\n    )\n    .setIn([projectKey, 'updatedAt'], timestamp);\n}\n\nfunction contentForLanguage(files, language) {\n  const filesForLanguage = sortBy(\n    filter(files, {language}),\n    file => file.filename,\n  );\n  return map(filesForLanguage, 'content').join('\\n\\n');\n}\n\nfunction importGist(state, projectKey, gistData) {\n  const files = values(gistData.files);\n  const popcodeJsonFile = find(files, {filename: 'popcode.json'});\n  const popcodeJson = JSON.parse(get(popcodeJsonFile, 'content', '{}'));\n\n  return addProject(state, {\n    projectKey,\n    sources: {\n      html: get(find(files, {language: 'HTML'}), 'content', ''),\n      css: contentForLanguage(files, 'CSS'),\n      javascript: contentForLanguage(files, 'JavaScript'),\n    },\n    enabledLibraries: popcodeJson.enabledLibraries || [],\n    hiddenUIComponents: popcodeJson.hiddenUIComponents || [],\n    instructions: contentForLanguage(files, 'Markdown'),\n    isArchived: false,\n  });\n}\n\nexport function reduceRoot(stateIn, action) {\n  return stateIn.update('projects', projects => {\n    switch (action.type) {\n      case 'USER_LOGGED_OUT': {\n        const currentProjectKey = stateIn.getIn([\n          'currentProject',\n          'projectKey',\n        ]);\n\n        if (isNil(currentProjectKey)) {\n          return new Immutable.Map();\n        }\n\n        return new Immutable.Map().set(\n          currentProjectKey,\n          projects.get(currentProjectKey),\n        );\n      }\n      case 'FOCUS_LINE':\n        return unhideComponent(\n          projects,\n          stateIn.getIn(['currentProject', 'projectKey']),\n          action.payload.component,\n          action.meta.timestamp,\n        );\n    }\n    return projects;\n  });\n}\n\nexport default function reduceProjects(stateIn, action) {\n  let state;\n\n  if (stateIn === undefined) {\n    state = emptyMap;\n  } else {\n    state = stateIn;\n  }\n\n  switch (action.type) {\n    case 'PROJECTS_LOADED':\n      return action.payload.reduce(addProject, state);\n\n    case 'ACCOUNT_MIGRATION_COMPLETE':\n      return action.payload.projects.reduce(addProject, state);\n\n    case 'UPDATE_PROJECT_SOURCE':\n      return state\n        .setIn(\n          [action.payload.projectKey, 'sources', action.payload.language],\n          action.payload.newValue,\n        )\n        .setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'PROJECT_BEAUTIFIED':\n      return state\n        .setIn(\n          [action.payload.projectKey, 'sources'],\n          new ProjectSources(action.payload.projectSources),\n        )\n        .setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'UPDATE_PROJECT_INSTRUCTIONS':\n      return state\n        .setIn(\n          [action.payload.projectKey, 'instructions'],\n          action.payload.newValue,\n        )\n        .setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'PROJECT_CREATED':\n      return removePristineExcept(state, action.payload.projectKey).set(\n        action.payload.projectKey,\n        new Project({projectKey: action.payload.projectKey}),\n      );\n\n    case 'CHANGE_CURRENT_PROJECT':\n      return removePristineExcept(state, action.payload.projectKey).setIn(\n        [action.payload.projectKey, 'isArchived'],\n        false,\n      );\n\n    case 'SNAPSHOT_IMPORTED':\n      return addProject(\n        state,\n        assign({}, action.payload.project, {\n          projectKey: action.payload.projectKey,\n          updatedAt: null,\n        }),\n      );\n\n    case 'GIST_IMPORTED':\n      return importGist(\n        state,\n        action.payload.projectKey,\n        action.payload.gistData,\n      );\n\n    case 'PROJECT_RESTORED_FROM_LAST_SESSION':\n      return addProject(state, action.payload);\n\n    case 'TOGGLE_LIBRARY':\n      return state\n        .updateIn(\n          [action.payload.projectKey, 'enabledLibraries'],\n          enabledLibraries => {\n            const {libraryKey} = action.payload;\n            if (enabledLibraries.has(libraryKey)) {\n              return enabledLibraries.delete(libraryKey);\n            }\n            return enabledLibraries.add(libraryKey);\n          },\n        )\n        .setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'HIDE_COMPONENT':\n      return state\n        .updateIn(\n          [action.payload.projectKey, 'hiddenUIComponents'],\n          hiddenUIComponents =>\n            hiddenUIComponents.add(action.payload.componentName),\n        )\n        .setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'UNHIDE_COMPONENT':\n      return unhideComponent(\n        state,\n        action.payload.projectKey,\n        action.payload.componentName,\n        action.meta.timestamp,\n      );\n\n    case 'TOGGLE_COMPONENT':\n      return state\n        .updateIn(\n          [action.payload.projectKey, 'hiddenUIComponents'],\n          hiddenUIComponents => {\n            const {componentName} = action.payload;\n            if (hiddenUIComponents.includes(componentName)) {\n              return hiddenUIComponents.remove(action.payload.componentName);\n            }\n            return hiddenUIComponents.add(action.payload.componentName);\n          },\n        )\n        .setIn([action.payload.projectKey, 'updatedAt'], action.meta.timestamp);\n\n    case 'START_EDITING_INSTRUCTIONS':\n      return unhideComponent(\n        state,\n        action.payload.projectKey,\n        'instructions',\n        action.meta.timestamp,\n      );\n\n    case 'PROJECT_EXPORTED':\n      if (\n        action.payload.exportType === 'repo' &&\n        action.payload.exportData.name\n      ) {\n        return state\n          .setIn(\n            [action.payload.projectKey, 'externalLocations', 'githubRepoName'],\n            action.payload.exportData.name,\n          )\n          .setIn(\n            [action.payload.projectKey, 'updatedAt'],\n            action.meta.timestamp,\n          );\n      }\n      return state;\n\n    case 'ARCHIVE_PROJECT':\n      return state.setIn([action.payload.projectKey, 'isArchived'], true);\n\n    default:\n      return state;\n  }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

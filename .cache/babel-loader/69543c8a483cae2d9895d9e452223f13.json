{
  "ast": null,
  "code": "import { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport isNil from 'lodash-es/isNil';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { ConsoleEntry } from '../records';\nexport default function ConsoleOutput(_ref) {\n  var entry = _ref.entry,\n      isActive = _ref.isActive;\n  var expression = entry.expression,\n      value = entry.value,\n      error = entry.error;\n  var chevron = expression ? React.createElement(\"div\", {\n    className: \"console__chevron console__chevron_outdent\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faChevronLeft\n  })) : null;\n\n  if (!isNil(value)) {\n    return React.createElement(\"div\", {\n      className: classnames('console__row', 'console__value', {\n        console__value_inactive: !isActive\n      })\n    }, chevron, value);\n  }\n\n  if (!isNil(error)) {\n    return React.createElement(\"div\", {\n      className: classnames('console__error', {\n        console__error_inactive: !isActive\n      })\n    }, error.text);\n  }\n\n  return null;\n}\nConsoleOutput.propTypes = {\n  entry: PropTypes.instanceOf(ConsoleEntry).isRequired,\n  isActive: PropTypes.bool.isRequired\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/ConsoleOutput.jsx"
    ],
    "names": [
      "faChevronLeft",
      "FontAwesomeIcon",
      "isNil",
      "React",
      "PropTypes",
      "classnames",
      "ConsoleEntry",
      "ConsoleOutput",
      "entry",
      "isActive",
      "expression",
      "value",
      "error",
      "chevron",
      "console__value_inactive",
      "console__error_inactive",
      "text",
      "propTypes",
      "instanceOf",
      "isRequired",
      "bool"
    ],
    "mappings": "AAAA,SAAQA,aAAR,QAA4B,mCAA5B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,eAAe,SAASC,aAAT,OAA0C;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,QAAW,QAAXA,QAAW;AAAA,MAChDC,UADgD,GACpBF,KADoB,CAChDE,UADgD;AAAA,MACpCC,KADoC,GACpBH,KADoB,CACpCG,KADoC;AAAA,MAC7BC,KAD6B,GACpBJ,KADoB,CAC7BI,KAD6B;AAEvD,MAAMC,OAAO,GAAGH,UAAU,GACxB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV;AAAvB,IADF,CADwB,GAItB,IAJJ;;AAMA,MAAI,CAACE,KAAK,CAACS,KAAD,CAAV,EAAmB;AACjB,WACE;AACE,MAAA,SAAS,EAAEN,UAAU,CAAC,cAAD,EAAiB,gBAAjB,EAAmC;AACtDS,QAAAA,uBAAuB,EAAE,CAACL;AAD4B,OAAnC;AADvB,OAKGI,OALH,EAMGF,KANH,CADF;AAUD;;AAED,MAAI,CAACT,KAAK,CAACU,KAAD,CAAV,EAAmB;AACjB,WACE;AACE,MAAA,SAAS,EAAEP,UAAU,CAAC,gBAAD,EAAmB;AACtCU,QAAAA,uBAAuB,EAAE,CAACN;AADY,OAAnB;AADvB,OAKGG,KAAK,CAACI,IALT,CADF;AASD;;AAED,SAAO,IAAP;AACD;AAEDT,aAAa,CAACU,SAAd,GAA0B;AACxBT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,UAAV,CAAqBZ,YAArB,EAAmCa,UADlB;AAExBV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeD;AAFD,CAA1B",
    "sourcesContent": [
      "import {faChevronLeft} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport isNil from 'lodash-es/isNil';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport {ConsoleEntry} from '../records';\n\nexport default function ConsoleOutput({entry, isActive}) {\n  const {expression, value, error} = entry;\n  const chevron = expression ? (\n    <div className=\"console__chevron console__chevron_outdent\">\n      <FontAwesomeIcon icon={faChevronLeft} />\n    </div>\n  ) : null;\n\n  if (!isNil(value)) {\n    return (\n      <div\n        className={classnames('console__row', 'console__value', {\n          console__value_inactive: !isActive,\n        })}\n      >\n        {chevron}\n        {value}\n      </div>\n    );\n  }\n\n  if (!isNil(error)) {\n    return (\n      <div\n        className={classnames('console__error', {\n          console__error_inactive: !isActive,\n        })}\n      >\n        {error.text}\n      </div>\n    );\n  }\n\n  return null;\n}\n\nConsoleOutput.propTypes = {\n  entry: PropTypes.instanceOf(ConsoleEntry).isRequired,\n  isActive: PropTypes.bool.isRequired,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

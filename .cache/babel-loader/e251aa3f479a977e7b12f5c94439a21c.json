{
  "ast": null,
  "code": "import { faChevronDown, faExternalLinkAlt, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport partial from 'lodash-es/partial';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport React from 'react';\nimport PreviewFrame from './PreviewFrame';\nexport default function Preview(_ref) {\n  var compiledProjects = _ref.compiledProjects,\n      consoleEntries = _ref.consoleEntries,\n      currentProjectKey = _ref.currentProjectKey,\n      isOpen = _ref.isOpen,\n      showingErrors = _ref.showingErrors,\n      title = _ref.title,\n      onConsoleError = _ref.onConsoleError,\n      onConsoleLog = _ref.onConsoleLog,\n      onConsoleValue = _ref.onConsoleValue,\n      onPopOutProject = _ref.onPopOutProject,\n      onRefreshClick = _ref.onRefreshClick,\n      onRuntimeError = _ref.onRuntimeError,\n      onToggleVisible = _ref.onToggleVisible;\n\n  if (showingErrors) {\n    return null;\n  }\n\n  var projectFrames = compiledProjects.map(function (compiledProject, key) {\n    return React.createElement(PreviewFrame, {\n      compiledProject: compiledProject,\n      consoleEntries: consoleEntries,\n      isActive: key === compiledProjects.keySeq().last(),\n      key: compiledProject.compiledProjectKey,\n      onConsoleError: onConsoleError,\n      onConsoleLog: onConsoleLog,\n      onConsoleValue: onConsoleValue,\n      onRuntimeError: onRuntimeError\n    });\n  });\n  return React.createElement(\"div\", {\n    className: classnames('preview', 'output__item', {\n      u__hidden: !isOpen\n    })\n  }, React.createElement(\"div\", {\n    className: \"preview__title-bar\"\n  }, React.createElement(\"span\", {\n    className: \"preview__button preview__button_pop-out\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faExternalLinkAlt,\n    onClick: onPopOutProject\n  })), title, React.createElement(\"span\", {\n    className: \"preview__button preview__button_toggle-visibility\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown,\n    onClick: partial(onToggleVisible, currentProjectKey)\n  })), React.createElement(\"span\", {\n    className: \"preview__button preview__button_reset\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSyncAlt,\n    onClick: onRefreshClick\n  }))), projectFrames);\n}\nPreview.propTypes = {\n  compiledProjects: ImmutablePropTypes.iterable.isRequired,\n  consoleEntries: ImmutablePropTypes.iterable.isRequired,\n  currentProjectKey: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  showingErrors: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  onConsoleError: PropTypes.func.isRequired,\n  onConsoleLog: PropTypes.func.isRequired,\n  onConsoleValue: PropTypes.func.isRequired,\n  onPopOutProject: PropTypes.func.isRequired,\n  onRefreshClick: PropTypes.func.isRequired,\n  onRuntimeError: PropTypes.func.isRequired,\n  onToggleVisible: PropTypes.func.isRequired\n};",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/components/Preview.jsx"],
    "names": [
      "faChevronDown",
      "faExternalLinkAlt",
      "faSyncAlt",
      "FontAwesomeIcon",
      "classnames",
      "partial",
      "PropTypes",
      "ImmutablePropTypes",
      "React",
      "PreviewFrame",
      "Preview",
      "compiledProjects",
      "consoleEntries",
      "currentProjectKey",
      "isOpen",
      "showingErrors",
      "title",
      "onConsoleError",
      "onConsoleLog",
      "onConsoleValue",
      "onPopOutProject",
      "onRefreshClick",
      "onRuntimeError",
      "onToggleVisible",
      "projectFrames",
      "map",
      "compiledProject",
      "key",
      "keySeq",
      "last",
      "compiledProjectKey",
      "u__hidden",
      "propTypes",
      "iterable",
      "isRequired",
      "string",
      "bool",
      "func"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import {\n  faChevronDown,\n  faExternalLinkAlt,\n  faSyncAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport partial from 'lodash-es/partial';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport React from 'react';\n\nimport PreviewFrame from './PreviewFrame';\n\nexport default function Preview({\n  compiledProjects,\n  consoleEntries,\n  currentProjectKey,\n  isOpen,\n  showingErrors,\n  title,\n  onConsoleError,\n  onConsoleLog,\n  onConsoleValue,\n  onPopOutProject,\n  onRefreshClick,\n  onRuntimeError,\n  onToggleVisible,\n}) {\n  if (showingErrors) {\n    return null;\n  }\n\n  const projectFrames = compiledProjects.map((compiledProject, key) => (\n    <PreviewFrame\n      compiledProject={compiledProject}\n      consoleEntries={consoleEntries}\n      isActive={key === compiledProjects.keySeq().last()}\n      key={compiledProject.compiledProjectKey}\n      onConsoleError={onConsoleError}\n      onConsoleLog={onConsoleLog}\n      onConsoleValue={onConsoleValue}\n      onRuntimeError={onRuntimeError}\n    />\n  ));\n\n  return (\n    <div\n      className={classnames('preview', 'output__item', {u__hidden: !isOpen})}\n    >\n      <div className=\"preview__title-bar\">\n        <span className=\"preview__button preview__button_pop-out\">\n          <FontAwesomeIcon icon={faExternalLinkAlt} onClick={onPopOutProject} />\n        </span>\n        {title}\n        <span className=\"preview__button preview__button_toggle-visibility\">\n          <FontAwesomeIcon\n            icon={faChevronDown}\n            onClick={partial(onToggleVisible, currentProjectKey)}\n          />\n        </span>\n        <span className=\"preview__button preview__button_reset\">\n          <FontAwesomeIcon icon={faSyncAlt} onClick={onRefreshClick} />\n        </span>\n      </div>\n      {projectFrames}\n    </div>\n  );\n}\n\nPreview.propTypes = {\n  compiledProjects: ImmutablePropTypes.iterable.isRequired,\n  consoleEntries: ImmutablePropTypes.iterable.isRequired,\n  currentProjectKey: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  showingErrors: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  onConsoleError: PropTypes.func.isRequired,\n  onConsoleLog: PropTypes.func.isRequired,\n  onConsoleValue: PropTypes.func.isRequired,\n  onPopOutProject: PropTypes.func.isRequired,\n  onRefreshClick: PropTypes.func.isRequired,\n  onRuntimeError: PropTypes.func.isRequired,\n  onToggleVisible: PropTypes.func.isRequired,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\nimport { t } from 'i18next';\nimport prefix from '../services/inlineStylePrefixer';\nvar EditorContainer = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      language = _ref.language,\n      source = _ref.source,\n      style = _ref.style,\n      onHide = _ref.onHide;\n  var helpText;\n\n  if (source === '') {\n    helpText = React.createElement(\"div\", {\n      className: \"editors__help-text\"\n    }, t('editors.help-text', {\n      language: language\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"editors__editor-container\",\n    ref: ref,\n    style: prefix(style)\n  }, React.createElement(\"div\", {\n    className: \"label editors__label editors__label_expanded\",\n    onClick: onHide\n  }, t(\"languages.\".concat(language)), \" \", React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown\n  })), helpText, children);\n});\nEditorContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  language: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n  style: PropTypes.object.isRequired,\n  onHide: PropTypes.func.isRequired\n};\nEditorContainer.displayName = 'EditorContainer';\nexport default EditorContainer;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/EditorContainer.jsx"
    ],
    "names": [
      "faChevronDown",
      "FontAwesomeIcon",
      "PropTypes",
      "React",
      "forwardRef",
      "t",
      "prefix",
      "EditorContainer",
      "ref",
      "children",
      "language",
      "source",
      "style",
      "onHide",
      "helpText",
      "propTypes",
      "node",
      "isRequired",
      "string",
      "object",
      "func",
      "displayName"
    ],
    "mappings": "AAAA,SAAQA,aAAR,QAA4B,mCAA5B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,CAAR,QAAgB,SAAhB;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,IAAMC,eAAe,GAAGH,UAAU,CAChC,gBAA8CI,GAA9C,EAAsD;AAAA,MAApDC,QAAoD,QAApDA,QAAoD;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AACpD,MAAIC,QAAJ;;AAEA,MAAIH,MAAM,KAAK,EAAf,EAAmB;AACjBG,IAAAA,QAAQ,GACN;AAAK,MAAA,SAAS,EAAC;AAAf,OACGT,CAAC,CAAC,mBAAD,EAAsB;AAACK,MAAAA,QAAQ,EAARA;AAAD,KAAtB,CADJ,CADF;AAKD;;AAED,SACE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,GAAG,EAAEF,GAFP;AAGE,IAAA,KAAK,EAAEF,MAAM,CAACM,KAAD;AAHf,KAKE;AACE,IAAA,SAAS,EAAC,8CADZ;AAEE,IAAA,OAAO,EAAEC;AAFX,KAIGR,CAAC,qBAAcK,QAAd,EAJJ,OAI+B,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV;AAAvB,IAJ/B,CALF,EAWGc,QAXH,EAYGL,QAZH,CADF;AAgBD,CA5B+B,CAAlC;AA+BAF,eAAe,CAACQ,SAAhB,GAA4B;AAC1BN,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IAAV,CAAeC,UADC;AAE1BP,EAAAA,QAAQ,EAAER,SAAS,CAACgB,MAAV,CAAiBD,UAFD;AAG1BN,EAAAA,MAAM,EAAET,SAAS,CAACgB,MAAV,CAAiBD,UAHC;AAI1BL,EAAAA,KAAK,EAAEV,SAAS,CAACiB,MAAV,CAAiBF,UAJE;AAK1BJ,EAAAA,MAAM,EAAEX,SAAS,CAACkB,IAAV,CAAeH;AALG,CAA5B;AAQAV,eAAe,CAACc,WAAhB,GAA8B,iBAA9B;AAEA,eAAed,eAAf",
    "sourcesContent": [
      "import {faChevronDown} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, {forwardRef} from 'react';\nimport {t} from 'i18next';\n\nimport prefix from '../services/inlineStylePrefixer';\n\nconst EditorContainer = forwardRef(\n  ({children, language, source, style, onHide}, ref) => {\n    let helpText;\n\n    if (source === '') {\n      helpText = (\n        <div className=\"editors__help-text\">\n          {t('editors.help-text', {language})}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className=\"editors__editor-container\"\n        ref={ref}\n        style={prefix(style)}\n      >\n        <div\n          className=\"label editors__label editors__label_expanded\"\n          onClick={onHide}\n        >\n          {t(`languages.${language}`)} <FontAwesomeIcon icon={faChevronDown} />\n        </div>\n        {helpText}\n        {children}\n      </div>\n    );\n  },\n);\n\nEditorContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  language: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n  style: PropTypes.object.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nEditorContainer.displayName = 'EditorContainer';\n\nexport default EditorContainer;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

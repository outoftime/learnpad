{
  "ast": null,
  "code": "/*\r\n  \r\n*/\nvar Refiner = require('../refiner').Refiner;\n\nexports.Refiner = function FRMergeDateRangeRefiner() {\n  Refiner.call(this);\n\n  this.pattern = function () {\n    return /^\\s*(à|a|\\-)\\s*$/i;\n  };\n\n  this.refine = function (text, results, opt) {\n    if (results.length < 2) return results;\n    var mergedResult = [];\n    var currResult = null;\n    var prevResult = null;\n\n    for (var i = 1; i < results.length; i++) {\n      currResult = results[i];\n      prevResult = results[i - 1];\n\n      if (!prevResult.end && !currResult.end && this.isAbleToMerge(text, prevResult, currResult)) {\n        prevResult = this.mergeResult(text, prevResult, currResult);\n        currResult = null;\n        i += 1;\n      }\n\n      mergedResult.push(prevResult);\n    }\n\n    if (currResult != null) {\n      mergedResult.push(currResult);\n    }\n\n    return mergedResult;\n  };\n\n  this.isAbleToMerge = function (text, result1, result2) {\n    var begin = result1.index + result1.text.length;\n    var end = result2.index;\n    var textBetween = text.substring(begin, end);\n    return textBetween.match(this.pattern());\n  };\n\n  this.isWeekdayResult = function (result) {\n    return result.start.isCertain('weekday') && !result.start.isCertain('day');\n  };\n\n  this.mergeResult = function (text, fromResult, toResult) {\n    if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\n      for (var key in toResult.start.knownValues) {\n        if (!fromResult.start.isCertain(key)) {\n          fromResult.start.assign(key, toResult.start.get(key));\n        }\n      }\n\n      for (var key in fromResult.start.knownValues) {\n        if (!toResult.start.isCertain(key)) {\n          toResult.start.assign(key, fromResult.start.get(key));\n        }\n      }\n    }\n\n    if (fromResult.start.date().getTime() > toResult.start.date()) {\n      var tmp = toResult;\n      toResult = fromResult;\n      fromResult = tmp;\n    }\n\n    fromResult.end = toResult.start;\n\n    for (var tag in toResult.tags) {\n      fromResult.tags[tag] = true;\n    }\n\n    var startIndex = Math.min(fromResult.index, toResult.index);\n    var endIndex = Math.max(fromResult.index + fromResult.text.length, toResult.index + toResult.text.length);\n    fromResult.index = startIndex;\n    fromResult.text = text.substring(startIndex, endIndex);\n    fromResult.tags[this.constructor.name] = true;\n    return fromResult;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/refiners/fr/FRMergeDateRangeRefiner.js"
    ],
    "names": [
      "Refiner",
      "require",
      "exports",
      "FRMergeDateRangeRefiner",
      "call",
      "pattern",
      "refine",
      "text",
      "results",
      "opt",
      "length",
      "mergedResult",
      "currResult",
      "prevResult",
      "i",
      "end",
      "isAbleToMerge",
      "mergeResult",
      "push",
      "result1",
      "result2",
      "begin",
      "index",
      "textBetween",
      "substring",
      "match",
      "isWeekdayResult",
      "result",
      "start",
      "isCertain",
      "fromResult",
      "toResult",
      "key",
      "knownValues",
      "assign",
      "get",
      "date",
      "getTime",
      "tmp",
      "tag",
      "tags",
      "startIndex",
      "Math",
      "min",
      "endIndex",
      "max",
      "constructor",
      "name"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\r\n  \r\n*/\r\nvar Refiner = require('../refiner').Refiner;\r\n\r\nexports.Refiner = function FRMergeDateRangeRefiner() {\r\n    Refiner.call(this);\r\n\r\n    this.pattern = function () { return /^\\s*(à|a|\\-)\\s*$/i };\r\n\r\n    this.refine = function(text, results, opt) {\r\n\r\n        if (results.length < 2) return results;\r\n        \r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n        \r\n        for (var i=1; i<results.length; i++){\r\n            \r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (!prevResult.end && !currResult.end \r\n                && this.isAbleToMerge(text, prevResult, currResult)) {\r\n              \r\n                prevResult = this.mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n        \r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n\r\n        return mergedResult;\r\n    };\r\n\r\n    this.isAbleToMerge = function(text, result1, result2) {\r\n        var begin = result1.index + result1.text.length;\r\n        var end   = result2.index;\r\n        var textBetween = text.substring(begin,end);\r\n\r\n        return textBetween.match(this.pattern());\r\n    };\r\n\r\n    this.isWeekdayResult = function (result) {\r\n        return result.start.isCertain('weekday') && !result.start.isCertain('day');\r\n    };\r\n\r\n    this.mergeResult = function(text, fromResult, toResult) {\r\n\r\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\r\n\r\n            for (var key in toResult.start.knownValues) {\r\n                if (!fromResult.start.isCertain(key)) {\r\n                    fromResult.start.assign(key, toResult.start.get(key));\r\n                }\r\n            }\r\n\r\n            for (var key in fromResult.start.knownValues) {\r\n                if (!toResult.start.isCertain(key)) {\r\n                    toResult.start.assign(key, fromResult.start.get(key));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (fromResult.start.date().getTime() > toResult.start.date()) {\r\n            var tmp = toResult;\r\n            toResult = fromResult;\r\n            fromResult = tmp;\r\n        }\r\n        \r\n        fromResult.end = toResult.start;\r\n\r\n        \r\n\r\n        for (var tag in toResult.tags) {\r\n            fromResult.tags[tag] = true;\r\n        }\r\n\r\n            \r\n        var startIndex = Math.min(fromResult.index, toResult.index);\r\n        var endIndex = Math.max(\r\n            fromResult.index + fromResult.text.length, \r\n            toResult.index + toResult.text.length);\r\n            \r\n        fromResult.index = startIndex;\r\n        fromResult.text  = text.substring(startIndex, endIndex);\r\n        fromResult.tags[this.constructor.name] = true;\r\n        return fromResult;\r\n    }\r\n};\r\n\r\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

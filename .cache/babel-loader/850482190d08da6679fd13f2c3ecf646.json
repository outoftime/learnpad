{
  "ast": null,
  "code": "/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' + '(within|in)\\\\s*' + '(' + util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' + '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)\\\\s*' + '(?=\\\\W|$)', 'i');\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' + '(within|in)\\\\s*' + '(' + util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?)\\\\s*' + '(seconds?|minutes?|hours?|days?)\\\\s*' + '(?=\\\\W|$)', 'i');\n\nexports.Parser = function ENDeadlineFormatParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return this.isStrictMode() ? STRICT_PATTERN : PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index + match[1].length;\n    var text = match[0];\n    text = match[0].substr(match[1].length, match[0].length - match[1].length);\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    var num = match[3].toLowerCase();\n\n    if (util.INTEGER_WORDS[num] !== undefined) {\n      num = util.INTEGER_WORDS[num];\n    } else if (num === 'a' || num === 'an') {\n      num = 1;\n    } else if (num.match(/few/i)) {\n      num = 3;\n    } else if (num.match(/half/i)) {\n      num = 0.5;\n    } else {\n      num = parseInt(num);\n    }\n\n    var date = moment(ref);\n\n    if (match[4].match(/day|week|month|year/i)) {\n      if (match[4].match(/day/i)) {\n        date.add(num, 'd');\n      } else if (match[4].match(/week/i)) {\n        date.add(num * 7, 'd');\n      } else if (match[4].match(/month/i)) {\n        date.add(num, 'month');\n      } else if (match[4].match(/year/i)) {\n        date.add(num, 'year');\n      }\n\n      result.start.imply('year', date.year());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('day', date.date());\n      return result;\n    }\n\n    if (match[4].match(/hour/i)) {\n      date.add(num, 'hour');\n    } else if (match[4].match(/min/i)) {\n      date.add(num, 'minute');\n    } else if (match[4].match(/second/i)) {\n      date.add(num, 'second');\n    }\n\n    result.start.imply('year', date.year());\n    result.start.imply('month', date.month() + 1);\n    result.start.imply('day', date.date());\n    result.start.imply('hour', date.hour());\n    result.start.imply('minute', date.minute());\n    result.start.imply('second', date.second());\n    result.tags['ENDeadlineFormatParser'] = true;\n    return result;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/parsers/en/ENDeadlineFormatParser.js"
    ],
    "names": [
      "moment",
      "require",
      "Parser",
      "ParsedResult",
      "util",
      "PATTERN",
      "RegExp",
      "INTEGER_WORDS_PATTERN",
      "STRICT_PATTERN",
      "exports",
      "ENDeadlineFormatParser",
      "apply",
      "arguments",
      "pattern",
      "isStrictMode",
      "extract",
      "text",
      "ref",
      "match",
      "opt",
      "index",
      "length",
      "substr",
      "result",
      "num",
      "toLowerCase",
      "INTEGER_WORDS",
      "undefined",
      "parseInt",
      "date",
      "add",
      "start",
      "imply",
      "year",
      "month",
      "hour",
      "minute",
      "second",
      "tags"
    ],
    "mappings": "AAAA;;;;AAKA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAAlC;;AACA,IAAIC,YAAY,GAAGF,OAAO,CAAC,cAAD,CAAP,CAAwBE,YAA3C;;AACA,IAAIC,IAAI,GAAIH,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAII,OAAO,GAAG,IAAIC,MAAJ,CAAW,YACrB,iBADqB,GAErB,GAFqB,GAEhBF,IAAI,CAACG,qBAFW,GAEa,+CAFb,GAGrB,iEAHqB,GAIrB,WAJU,EAIG,GAJH,CAAd;AAOA,IAAIC,cAAc,GAAG,IAAIF,MAAJ,CAAW,YAC5B,iBAD4B,GAE5B,GAF4B,GAEvBF,IAAI,CAACG,qBAFkB,GAEM,kBAFN,GAG5B,sCAH4B,GAI5B,WAJiB,EAIJ,GAJI,CAArB;;AAOAE,OAAO,CAACP,MAAR,GAAiB,SAASQ,sBAAT,GAAiC;AAC9CR,EAAAA,MAAM,CAACS,KAAP,CAAa,IAAb,EAAmBC,SAAnB;;AAEA,OAAKC,OAAL,GAAe,YAAW;AACtB,WAAO,KAAKC,YAAL,KAAqBN,cAArB,GAAsCH,OAA7C;AACH,GAFD;;AAIA,OAAKU,OAAL,GAAe,UAASC,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,GAA3B,EAA+B;AAE1C,QAAIC,KAAK,GAAGF,KAAK,CAACE,KAAN,GAAcF,KAAK,CAAC,CAAD,CAAL,CAASG,MAAnC;AACA,QAAIL,IAAI,GAAIE,KAAK,CAAC,CAAD,CAAjB;AACAF,IAAAA,IAAI,GAAIE,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,CAAgBJ,KAAK,CAAC,CAAD,CAAL,CAASG,MAAzB,EAAiCH,KAAK,CAAC,CAAD,CAAL,CAASG,MAAT,GAAkBH,KAAK,CAAC,CAAD,CAAL,CAASG,MAA5D,CAAR;AAEA,QAAIE,MAAM,GAAG,IAAIpB,YAAJ,CAAiB;AAC1BiB,MAAAA,KAAK,EAAEA,KADmB;AAE1BJ,MAAAA,IAAI,EAAEA,IAFoB;AAG1BC,MAAAA,GAAG,EAAEA;AAHqB,KAAjB,CAAb;AAMA,QAAIO,GAAG,GAAGN,KAAK,CAAC,CAAD,CAAL,CAASO,WAAT,EAAV;;AACA,QAAIrB,IAAI,CAACsB,aAAL,CAAmBF,GAAnB,MAA4BG,SAAhC,EAA2C;AACvCH,MAAAA,GAAG,GAAGpB,IAAI,CAACsB,aAAL,CAAmBF,GAAnB,CAAN;AACH,KAFD,MAEO,IAAIA,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,IAA3B,EAAgC;AACnCA,MAAAA,GAAG,GAAG,CAAN;AACH,KAFM,MAEA,IAAIA,GAAG,CAACN,KAAJ,CAAU,MAAV,CAAJ,EAAsB;AACzBM,MAAAA,GAAG,GAAG,CAAN;AACH,KAFM,MAEA,IAAIA,GAAG,CAACN,KAAJ,CAAU,OAAV,CAAJ,EAAwB;AAC3BM,MAAAA,GAAG,GAAG,GAAN;AACH,KAFM,MAEA;AACHA,MAAAA,GAAG,GAAGI,QAAQ,CAACJ,GAAD,CAAd;AACH;;AAED,QAAIK,IAAI,GAAG7B,MAAM,CAACiB,GAAD,CAAjB;;AACA,QAAIC,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,sBAAf,CAAJ,EAA4C;AAExC,UAAIA,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,MAAf,CAAJ,EAA4B;AACxBW,QAAAA,IAAI,CAACC,GAAL,CAASN,GAAT,EAAc,GAAd;AACH,OAFD,MAEO,IAAIN,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,OAAf,CAAJ,EAA6B;AAChCW,QAAAA,IAAI,CAACC,GAAL,CAASN,GAAG,GAAG,CAAf,EAAkB,GAAlB;AACH,OAFM,MAEA,IAAIN,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,QAAf,CAAJ,EAA8B;AACjCW,QAAAA,IAAI,CAACC,GAAL,CAASN,GAAT,EAAc,OAAd;AACH,OAFM,MAEA,IAAIN,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,OAAf,CAAJ,EAA6B;AAChCW,QAAAA,IAAI,CAACC,GAAL,CAASN,GAAT,EAAc,MAAd;AACH;;AAEDD,MAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,MAAnB,EAA2BH,IAAI,CAACI,IAAL,EAA3B;AACAV,MAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,OAAnB,EAA4BH,IAAI,CAACK,KAAL,KAAe,CAA3C;AACAX,MAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,KAAnB,EAA0BH,IAAI,CAACA,IAAL,EAA1B;AACA,aAAON,MAAP;AACH;;AAED,QAAIL,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,OAAf,CAAJ,EAA6B;AAEzBW,MAAAA,IAAI,CAACC,GAAL,CAASN,GAAT,EAAc,MAAd;AAEH,KAJD,MAIO,IAAIN,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,MAAf,CAAJ,EAA4B;AAE/BW,MAAAA,IAAI,CAACC,GAAL,CAASN,GAAT,EAAc,QAAd;AAEH,KAJM,MAIA,IAAIN,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,SAAf,CAAJ,EAA+B;AAElCW,MAAAA,IAAI,CAACC,GAAL,CAASN,GAAT,EAAc,QAAd;AACH;;AAEDD,IAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,MAAnB,EAA2BH,IAAI,CAACI,IAAL,EAA3B;AACAV,IAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,OAAnB,EAA4BH,IAAI,CAACK,KAAL,KAAe,CAA3C;AACAX,IAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,KAAnB,EAA0BH,IAAI,CAACA,IAAL,EAA1B;AACAN,IAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,MAAnB,EAA2BH,IAAI,CAACM,IAAL,EAA3B;AACAZ,IAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,QAAnB,EAA6BH,IAAI,CAACO,MAAL,EAA7B;AACAb,IAAAA,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB,QAAnB,EAA6BH,IAAI,CAACQ,MAAL,EAA7B;AACAd,IAAAA,MAAM,CAACe,IAAP,CAAY,wBAAZ,IAAwC,IAAxC;AACA,WAAOf,MAAP;AACH,GAjED;AAkEH,CAzED",
    "sourcesContent": [
      "/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nexports.Parser = function ENDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'a' || num === 'an'){\n            num = 1;\n        } else if (num.match(/few/i)){\n            num = 3;\n        } else if (num.match(/half/i)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n        if (match[4].match(/day|week|month|year/i)) {\n\n            if (match[4].match(/day/i)) {\n                date.add(num, 'd');\n            } else if (match[4].match(/week/i)) {\n                date.add(num * 7, 'd');\n            } else if (match[4].match(/month/i)) {\n                date.add(num, 'month');\n            } else if (match[4].match(/year/i)) {\n                date.add(num, 'year');\n            }\n\n            result.start.imply('year', date.year());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('day', date.date());\n            return result;\n        }\n\n        if (match[4].match(/hour/i)) {\n\n            date.add(num, 'hour');\n\n        } else if (match[4].match(/min/i)) {\n\n            date.add(num, 'minute');\n\n        } else if (match[4].match(/second/i)) {\n\n            date.add(num, 'second');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.imply('hour', date.hour());\n        result.start.imply('minute', date.minute());\n        result.start.imply('second', date.second());\n        result.tags['ENDeadlineFormatParser'] = true;\n        return result;\n    };\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

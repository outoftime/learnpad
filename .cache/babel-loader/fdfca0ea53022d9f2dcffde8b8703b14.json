{
  "ast": null,
  "code": "import { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport partial from 'lodash-es/partial';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { t } from 'i18next';\nimport { createSnapshotUrl } from '../../util/exportUrls';\nexport default function SnapshotNotification(_ref) {\n  var metadata = _ref.metadata,\n      onUpdateMetadata = _ref.onUpdateMetadata;\n  var uri = createSnapshotUrl(metadata.get('snapshotKey'));\n  var checkmark;\n\n  if (metadata.get('isCopied')) {\n    checkmark = [' ', React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      key: \"icon\"\n    })];\n  }\n\n  return React.createElement(\"span\", null, t('notifications.snapshot-created'), ' ', React.createElement(CopyToClipboard, {\n    text: uri,\n    onCopy: partial(onUpdateMetadata, {\n      isCopied: true\n    })\n  }, React.createElement(\"span\", {\n    className: \"u__link\"\n  }, t('notifications.click-to-copy'))), checkmark);\n}\nSnapshotNotification.propTypes = {\n  metadata: ImmutablePropTypes.contains({\n    snapshotKey: PropTypes.string.isRequired,\n    isCopied: PropTypes.bool\n  }).isRequired,\n  onUpdateMetadata: PropTypes.func.isRequired\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/notifications/SnapshotNotification.jsx"
    ],
    "names": [
      "faCheckCircle",
      "FontAwesomeIcon",
      "React",
      "CopyToClipboard",
      "partial",
      "PropTypes",
      "ImmutablePropTypes",
      "t",
      "createSnapshotUrl",
      "SnapshotNotification",
      "metadata",
      "onUpdateMetadata",
      "uri",
      "get",
      "checkmark",
      "isCopied",
      "propTypes",
      "contains",
      "snapshotKey",
      "string",
      "isRequired",
      "bool",
      "func"
    ],
    "mappings": "AAAA,SAAQA,aAAR,QAA4B,mCAA5B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAAQC,CAAR,QAAgB,SAAhB;AAEA,SAAQC,iBAAR,QAAgC,uBAAhC;AAEA,eAAe,SAASC,oBAAT,OAA4D;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,gBAAmB,QAAnBA,gBAAmB;AACzE,MAAMC,GAAG,GAAGJ,iBAAiB,CAACE,QAAQ,CAACG,GAAT,CAAa,aAAb,CAAD,CAA7B;AAEA,MAAIC,SAAJ;;AACA,MAAIJ,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAJ,EAA8B;AAC5BC,IAAAA,SAAS,GAAG,CAAC,GAAD,EAAM,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEd,aAAvB;AAAsC,MAAA,GAAG,EAAC;AAA1C,MAAN,CAAZ;AACD;;AAED,SACE,kCACGO,CAAC,CAAC,gCAAD,CADJ,EACwC,GADxC,EAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEK,GADR;AAEE,IAAA,MAAM,EAAER,OAAO,CAACO,gBAAD,EAAmB;AAACI,MAAAA,QAAQ,EAAE;AAAX,KAAnB;AAFjB,KAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2BR,CAAC,CAAC,6BAAD,CAA5B,CAJF,CAFF,EAQGO,SARH,CADF;AAYD;AAEDL,oBAAoB,CAACO,SAArB,GAAiC;AAC/BN,EAAAA,QAAQ,EAAEJ,kBAAkB,CAACW,QAAnB,CAA4B;AACpCC,IAAAA,WAAW,EAAEb,SAAS,CAACc,MAAV,CAAiBC,UADM;AAEpCL,IAAAA,QAAQ,EAAEV,SAAS,CAACgB;AAFgB,GAA5B,EAGPD,UAJ4B;AAK/BT,EAAAA,gBAAgB,EAAEN,SAAS,CAACiB,IAAV,CAAeF;AALF,CAAjC",
    "sourcesContent": [
      "import {faCheckCircle} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport partial from 'lodash-es/partial';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport {t} from 'i18next';\n\nimport {createSnapshotUrl} from '../../util/exportUrls';\n\nexport default function SnapshotNotification({metadata, onUpdateMetadata}) {\n  const uri = createSnapshotUrl(metadata.get('snapshotKey'));\n\n  let checkmark;\n  if (metadata.get('isCopied')) {\n    checkmark = [' ', <FontAwesomeIcon icon={faCheckCircle} key=\"icon\" />];\n  }\n\n  return (\n    <span>\n      {t('notifications.snapshot-created')}{' '}\n      <CopyToClipboard\n        text={uri}\n        onCopy={partial(onUpdateMetadata, {isCopied: true})}\n      >\n        <span className=\"u__link\">{t('notifications.click-to-copy')}</span>\n      </CopyToClipboard>\n      {checkmark}\n    </span>\n  );\n}\n\nSnapshotNotification.propTypes = {\n  metadata: ImmutablePropTypes.contains({\n    snapshotKey: PropTypes.string.isRequired,\n    isCopied: PropTypes.bool,\n  }).isRequired,\n  onUpdateMetadata: PropTypes.func.isRequired,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

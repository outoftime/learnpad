{
  "ast": null,
  "code": "import classnames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from 'i18next';\nimport { UserAccount } from '../../records';\nimport CurrentUserMenu from './CurrentUserMenu';\nexport default function CurrentUser(_ref) {\n  var isLoginAvailable = _ref.isLoginAvailable,\n      isUserAnonymous = _ref.isUserAnonymous,\n      isUserAuthenticated = _ref.isUserAuthenticated,\n      user = _ref.user,\n      onLinkGitHub = _ref.onLinkGitHub,\n      onLogOut = _ref.onLogOut,\n      onStartLogIn = _ref.onStartLogIn,\n      onUnlinkGitHub = _ref.onUnlinkGitHub;\n\n  if (isUserAuthenticated) {\n    return React.createElement(CurrentUserMenu, {\n      user: user,\n      onLinkGitHub: onLinkGitHub,\n      onLogOut: onLogOut,\n      onUnlinkGitHub: onUnlinkGitHub\n    });\n  }\n\n  if (isUserAnonymous && isLoginAvailable) {\n    return React.createElement(\"div\", {\n      className: classnames('top-bar__current-user', 'top-bar__menu-button', 'top-bar__menu-button_primary'),\n      onClick: onStartLogIn\n    }, t('top-bar.session.log-in-prompt'));\n  }\n\n  return null;\n}\nCurrentUser.propTypes = {\n  isLoginAvailable: PropTypes.bool.isRequired,\n  isUserAnonymous: PropTypes.bool.isRequired,\n  isUserAuthenticated: PropTypes.bool.isRequired,\n  user: PropTypes.instanceOf(UserAccount),\n  onLinkGitHub: PropTypes.func.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n  onStartLogIn: PropTypes.func.isRequired,\n  onUnlinkGitHub: PropTypes.func.isRequired\n};\nCurrentUser.defaultProps = {\n  user: null\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/TopBar/CurrentUser.jsx"
    ],
    "names": [
      "classnames",
      "React",
      "PropTypes",
      "t",
      "UserAccount",
      "CurrentUserMenu",
      "CurrentUser",
      "isLoginAvailable",
      "isUserAnonymous",
      "isUserAuthenticated",
      "user",
      "onLinkGitHub",
      "onLogOut",
      "onStartLogIn",
      "onUnlinkGitHub",
      "propTypes",
      "bool",
      "isRequired",
      "instanceOf",
      "func",
      "defaultProps"
    ],
    "mappings": "AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,CAAR,QAAgB,SAAhB;AAEA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe,SAASC,WAAT,OASZ;AAAA,MARDC,gBAQC,QARDA,gBAQC;AAAA,MAPDC,eAOC,QAPDA,eAOC;AAAA,MANDC,mBAMC,QANDA,mBAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,YAIC,QAJDA,YAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,cACC,QADDA,cACC;;AACD,MAAIL,mBAAJ,EAAyB;AACvB,WACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,cAAc,EAAEE;AAJlB,MADF;AAQD;;AAED,MAAIN,eAAe,IAAID,gBAAvB,EAAyC;AACvC,WACE;AACE,MAAA,SAAS,EAAEP,UAAU,CACnB,uBADmB,EAEnB,sBAFmB,EAGnB,8BAHmB,CADvB;AAME,MAAA,OAAO,EAAEa;AANX,OAQGV,CAAC,CAAC,+BAAD,CARJ,CADF;AAYD;;AAED,SAAO,IAAP;AACD;AAEDG,WAAW,CAACS,SAAZ,GAAwB;AACtBR,EAAAA,gBAAgB,EAAEL,SAAS,CAACc,IAAV,CAAeC,UADX;AAEtBT,EAAAA,eAAe,EAAEN,SAAS,CAACc,IAAV,CAAeC,UAFV;AAGtBR,EAAAA,mBAAmB,EAAEP,SAAS,CAACc,IAAV,CAAeC,UAHd;AAItBP,EAAAA,IAAI,EAAER,SAAS,CAACgB,UAAV,CAAqBd,WAArB,CAJgB;AAKtBO,EAAAA,YAAY,EAAET,SAAS,CAACiB,IAAV,CAAeF,UALP;AAMtBL,EAAAA,QAAQ,EAAEV,SAAS,CAACiB,IAAV,CAAeF,UANH;AAOtBJ,EAAAA,YAAY,EAAEX,SAAS,CAACiB,IAAV,CAAeF,UAPP;AAQtBH,EAAAA,cAAc,EAAEZ,SAAS,CAACiB,IAAV,CAAeF;AART,CAAxB;AAWAX,WAAW,CAACc,YAAZ,GAA2B;AACzBV,EAAAA,IAAI,EAAE;AADmB,CAA3B",
    "sourcesContent": [
      "import classnames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {t} from 'i18next';\n\nimport {UserAccount} from '../../records';\n\nimport CurrentUserMenu from './CurrentUserMenu';\n\nexport default function CurrentUser({\n  isLoginAvailable,\n  isUserAnonymous,\n  isUserAuthenticated,\n  user,\n  onLinkGitHub,\n  onLogOut,\n  onStartLogIn,\n  onUnlinkGitHub,\n}) {\n  if (isUserAuthenticated) {\n    return (\n      <CurrentUserMenu\n        user={user}\n        onLinkGitHub={onLinkGitHub}\n        onLogOut={onLogOut}\n        onUnlinkGitHub={onUnlinkGitHub}\n      />\n    );\n  }\n\n  if (isUserAnonymous && isLoginAvailable) {\n    return (\n      <div\n        className={classnames(\n          'top-bar__current-user',\n          'top-bar__menu-button',\n          'top-bar__menu-button_primary',\n        )}\n        onClick={onStartLogIn}\n      >\n        {t('top-bar.session.log-in-prompt')}\n      </div>\n    );\n  }\n\n  return null;\n}\n\nCurrentUser.propTypes = {\n  isLoginAvailable: PropTypes.bool.isRequired,\n  isUserAnonymous: PropTypes.bool.isRequired,\n  isUserAuthenticated: PropTypes.bool.isRequired,\n  user: PropTypes.instanceOf(UserAccount),\n  onLinkGitHub: PropTypes.func.isRequired,\n  onLogOut: PropTypes.func.isRequired,\n  onStartLogIn: PropTypes.func.isRequired,\n  onUnlinkGitHub: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  user: null,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

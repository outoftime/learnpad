{
  "ast": null,
  "code": "/*\n\n*/\nvar Refiner = require('./refiner').Refiner; // Map ABBR -> Offset in minute\n\n\nvar TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\nvar DEFAULT_TIMEZONE_ABBR_MAP = {\n  \"ACDT\": 630,\n  \"ACST\": 570,\n  \"ADT\": -180,\n  \"AEDT\": 660,\n  \"AEST\": 600,\n  \"AFT\": 270,\n  \"AKDT\": -480,\n  \"AKST\": -540,\n  \"ALMT\": 360,\n  \"AMST\": -180,\n  \"AMT\": -240,\n  \"ANAST\": 720,\n  \"ANAT\": 720,\n  \"AQTT\": 300,\n  \"ART\": -180,\n  \"AST\": -240,\n  \"AWDT\": 540,\n  \"AWST\": 480,\n  \"AZOST\": 0,\n  \"AZOT\": -60,\n  \"AZST\": 300,\n  \"AZT\": 240,\n  \"BNT\": 480,\n  \"BOT\": -240,\n  \"BRST\": -120,\n  \"BRT\": -180,\n  \"BST\": 60,\n  \"BTT\": 360,\n  \"CAST\": 480,\n  \"CAT\": 120,\n  \"CCT\": 390,\n  \"CDT\": -300,\n  \"CEST\": 120,\n  \"CET\": 60,\n  \"CHADT\": 825,\n  \"CHAST\": 765,\n  \"CKT\": -600,\n  \"CLST\": -180,\n  \"CLT\": -240,\n  \"COT\": -300,\n  \"CST\": -360,\n  \"CVT\": -60,\n  \"CXT\": 420,\n  \"ChST\": 600,\n  \"DAVT\": 420,\n  \"EASST\": -300,\n  \"EAST\": -360,\n  \"EAT\": 180,\n  \"ECT\": -300,\n  \"EDT\": -240,\n  \"EEST\": 180,\n  \"EET\": 120,\n  \"EGST\": 0,\n  \"EGT\": -60,\n  \"EST\": -300,\n  \"ET\": -300,\n  \"FJST\": 780,\n  \"FJT\": 720,\n  \"FKST\": -180,\n  \"FKT\": -240,\n  \"FNT\": -120,\n  \"GALT\": -360,\n  \"GAMT\": -540,\n  \"GET\": 240,\n  \"GFT\": -180,\n  \"GILT\": 720,\n  \"GMT\": 0,\n  \"GST\": 240,\n  \"GYT\": -240,\n  \"HAA\": -180,\n  \"HAC\": -300,\n  \"HADT\": -540,\n  \"HAE\": -240,\n  \"HAP\": -420,\n  \"HAR\": -360,\n  \"HAST\": -600,\n  \"HAT\": -90,\n  \"HAY\": -480,\n  \"HKT\": 480,\n  \"HLV\": -210,\n  \"HNA\": -240,\n  \"HNC\": -360,\n  \"HNE\": -300,\n  \"HNP\": -480,\n  \"HNR\": -420,\n  \"HNT\": -150,\n  \"HNY\": -540,\n  \"HOVT\": 420,\n  \"ICT\": 420,\n  \"IDT\": 180,\n  \"IOT\": 360,\n  \"IRDT\": 270,\n  \"IRKST\": 540,\n  \"IRKT\": 540,\n  \"IRST\": 210,\n  \"IST\": 330,\n  \"JST\": 540,\n  \"KGT\": 360,\n  \"KRAST\": 480,\n  \"KRAT\": 480,\n  \"KST\": 540,\n  \"KUYT\": 240,\n  \"LHDT\": 660,\n  \"LHST\": 630,\n  \"LINT\": 840,\n  \"MAGST\": 720,\n  \"MAGT\": 720,\n  \"MART\": -510,\n  \"MAWT\": 300,\n  \"MDT\": -360,\n  \"MESZ\": 120,\n  \"MEZ\": 60,\n  \"MHT\": 720,\n  \"MMT\": 390,\n  \"MSD\": 240,\n  \"MSK\": 240,\n  \"MST\": -420,\n  \"MUT\": 240,\n  \"MVT\": 300,\n  \"MYT\": 480,\n  \"NCT\": 660,\n  \"NDT\": -90,\n  \"NFT\": 690,\n  \"NOVST\": 420,\n  \"NOVT\": 360,\n  \"NPT\": 345,\n  \"NST\": -150,\n  \"NUT\": -660,\n  \"NZDT\": 780,\n  \"NZST\": 720,\n  \"OMSST\": 420,\n  \"OMST\": 420,\n  \"PDT\": -420,\n  \"PET\": -300,\n  \"PETST\": 720,\n  \"PETT\": 720,\n  \"PGT\": 600,\n  \"PHOT\": 780,\n  \"PHT\": 480,\n  \"PKT\": 300,\n  \"PMDT\": -120,\n  \"PMST\": -180,\n  \"PONT\": 660,\n  \"PST\": -480,\n  \"PT\": -480,\n  \"PWT\": 540,\n  \"PYST\": -180,\n  \"PYT\": -240,\n  \"RET\": 240,\n  \"SAMT\": 240,\n  \"SAST\": 120,\n  \"SBT\": 660,\n  \"SCT\": 240,\n  \"SGT\": 480,\n  \"SRT\": -180,\n  \"SST\": -660,\n  \"TAHT\": -600,\n  \"TFT\": 300,\n  \"TJT\": 300,\n  \"TKT\": 780,\n  \"TLT\": 540,\n  \"TMT\": 300,\n  \"TVT\": 720,\n  \"ULAT\": 480,\n  \"UTC\": 0,\n  \"UYST\": -120,\n  \"UYT\": -180,\n  \"UZT\": 300,\n  \"VET\": -210,\n  \"VLAST\": 660,\n  \"VLAT\": 660,\n  \"VUT\": 660,\n  \"WAST\": 120,\n  \"WAT\": 60,\n  \"WEST\": 60,\n  \"WESZ\": 60,\n  \"WET\": 0,\n  \"WEZ\": 0,\n  \"WFT\": 720,\n  \"WGST\": -120,\n  \"WGT\": -180,\n  \"WIB\": 420,\n  \"WIT\": 540,\n  \"WITA\": 480,\n  \"WST\": 780,\n  \"WT\": 0,\n  \"YAKST\": 600,\n  \"YAKT\": 600,\n  \"YAPT\": 600,\n  \"YEKST\": 360,\n  \"YEKT\": 360\n};\n\nexports.Refiner = function ExtractTimezoneAbbrRefiner(config) {\n  Refiner.call(this, arguments);\n\n  this.refine = function (text, results, opt) {\n    var timezones = new Object(DEFAULT_TIMEZONE_ABBR_MAP);\n\n    if (opt.timezones) {\n      for (var name in opt.timezones) {\n        timezones[name] = opt.timezones[name];\n      }\n    }\n\n    results.forEach(function (result) {\n      if (!result.tags['ENTimeExpressionParser'] && !result.tags['ZHTimeExpressionParser'] && !result.tags['FRTimeExpressionParser'] && !result.tags['DETimeExpressionParser']) {\n        return;\n      }\n\n      var match = TIMEZONE_NAME_PATTERN.exec(text.substring(result.index + result.text.length));\n\n      if (match) {\n        var timezoneAbbr = match[1].toUpperCase();\n\n        if (timezones[timezoneAbbr] === undefined) {\n          return;\n        }\n\n        var timezoneOffset = timezones[timezoneAbbr];\n\n        if (!result.start.isCertain('timezoneOffset')) {\n          result.start.assign('timezoneOffset', timezoneOffset);\n        }\n\n        if (result.end != null && !result.end.isCertain('timezoneOffset')) {\n          result.end.assign('timezoneOffset', timezoneOffset);\n        }\n\n        result.text += match[0];\n        result.tags['ExtractTimezoneAbbrRefiner'] = true;\n      }\n    });\n    return results;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/refiners/ExtractTimezoneAbbrRefiner.js"
    ],
    "names": [
      "Refiner",
      "require",
      "TIMEZONE_NAME_PATTERN",
      "RegExp",
      "DEFAULT_TIMEZONE_ABBR_MAP",
      "exports",
      "ExtractTimezoneAbbrRefiner",
      "config",
      "call",
      "arguments",
      "refine",
      "text",
      "results",
      "opt",
      "timezones",
      "Object",
      "name",
      "forEach",
      "result",
      "tags",
      "match",
      "exec",
      "substring",
      "index",
      "length",
      "timezoneAbbr",
      "toUpperCase",
      "undefined",
      "timezoneOffset",
      "start",
      "isCertain",
      "assign",
      "end"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\n\n*/\nvar Refiner = require('./refiner').Refiner;\n\n// Map ABBR -> Offset in minute\nvar TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\nvar DEFAULT_TIMEZONE_ABBR_MAP = {\n    \"ACDT\":630,\"ACST\":570,\"ADT\":-180,\"AEDT\":660,\"AEST\":600,\"AFT\":270,\"AKDT\":-480,\"AKST\":-540,\"ALMT\":360,\"AMST\":-180,\"AMT\":-240,\"ANAST\":720,\"ANAT\":720,\"AQTT\":300,\"ART\":-180,\"AST\":-240,\"AWDT\":540,\"AWST\":480,\"AZOST\":0,\"AZOT\":-60,\"AZST\":300,\"AZT\":240,\"BNT\":480,\"BOT\":-240,\"BRST\":-120,\"BRT\":-180,\"BST\":60,\"BTT\":360,\"CAST\":480,\"CAT\":120,\"CCT\":390,\"CDT\":-300,\"CEST\":120,\"CET\":60,\"CHADT\":825,\"CHAST\":765,\"CKT\":-600,\"CLST\":-180,\"CLT\":-240,\"COT\":-300,\"CST\":-360,\"CVT\":-60,\"CXT\":420,\"ChST\":600,\"DAVT\":420,\"EASST\":-300,\"EAST\":-360,\"EAT\":180,\"ECT\":-300,\"EDT\":-240,\"EEST\":180,\"EET\":120,\"EGST\":0,\"EGT\":-60,\"EST\":-300,\"ET\":-300,\"FJST\":780,\"FJT\":720,\"FKST\":-180,\"FKT\":-240,\"FNT\":-120,\"GALT\":-360,\"GAMT\":-540,\"GET\":240,\"GFT\":-180,\"GILT\":720,\"GMT\":0,\"GST\":240,\"GYT\":-240,\"HAA\":-180,\"HAC\":-300,\"HADT\":-540,\"HAE\":-240,\"HAP\":-420,\"HAR\":-360,\"HAST\":-600,\"HAT\":-90,\"HAY\":-480,\"HKT\":480,\"HLV\":-210,\"HNA\":-240,\"HNC\":-360,\"HNE\":-300,\"HNP\":-480,\"HNR\":-420,\"HNT\":-150,\"HNY\":-540,\"HOVT\":420,\"ICT\":420,\"IDT\":180,\"IOT\":360,\"IRDT\":270,\"IRKST\":540,\"IRKT\":540,\"IRST\":210,\"IST\":330,\"JST\":540,\"KGT\":360,\"KRAST\":480,\"KRAT\":480,\"KST\":540,\"KUYT\":240,\"LHDT\":660,\"LHST\":630,\"LINT\":840,\"MAGST\":720,\"MAGT\":720,\"MART\":-510,\"MAWT\":300,\"MDT\":-360,\"MESZ\":120,\"MEZ\":60,\"MHT\":720,\"MMT\":390,\"MSD\":240,\"MSK\":240,\"MST\":-420,\"MUT\":240,\"MVT\":300,\"MYT\":480,\"NCT\":660,\"NDT\":-90,\"NFT\":690,\"NOVST\":420,\"NOVT\":360,\"NPT\":345,\"NST\":-150,\"NUT\":-660,\"NZDT\":780,\"NZST\":720,\"OMSST\":420,\"OMST\":420,\"PDT\":-420,\"PET\":-300,\"PETST\":720,\"PETT\":720,\"PGT\":600,\"PHOT\":780,\"PHT\":480,\"PKT\":300,\"PMDT\":-120,\"PMST\":-180,\"PONT\":660,\"PST\":-480,\"PT\":-480,\"PWT\":540,\"PYST\":-180,\"PYT\":-240,\"RET\":240,\"SAMT\":240,\"SAST\":120,\"SBT\":660,\"SCT\":240,\"SGT\":480,\"SRT\":-180,\"SST\":-660,\"TAHT\":-600,\"TFT\":300,\"TJT\":300,\"TKT\":780,\"TLT\":540,\"TMT\":300,\"TVT\":720,\"ULAT\":480,\"UTC\":0,\"UYST\":-120,\"UYT\":-180,\"UZT\":300,\"VET\":-210,\"VLAST\":660,\"VLAT\":660,\"VUT\":660,\"WAST\":120,\"WAT\":60,\"WEST\":60,\"WESZ\":60,\"WET\":0,\"WEZ\":0,\"WFT\":720,\"WGST\":-120,\"WGT\":-180,\"WIB\":420,\"WIT\":540,\"WITA\":480,\"WST\":780,\"WT\":0,\"YAKST\":600,\"YAKT\":600,\"YAPT\":600,\"YEKST\":360,\"YEKT\":360\n};\n\nexports.Refiner = function ExtractTimezoneAbbrRefiner(config) {\n\tRefiner.call(this, arguments);\n\n\tthis.refine = function(text, results, opt) {\n\n\t    var timezones = new Object(DEFAULT_TIMEZONE_ABBR_MAP);\n\t    if (opt.timezones) {\n\t        for (var name in opt.timezones) {\n                timezones[name] = opt.timezones[name];\n            }\n        }\n\n\t\tresults.forEach(function(result) {\n\n            if (!result.tags['ENTimeExpressionParser'] &&\n                !result.tags['ZHTimeExpressionParser'] &&\n                !result.tags['FRTimeExpressionParser'] &&\n                !result.tags['DETimeExpressionParser']) {\n                return;\n            }\n\n            var match = TIMEZONE_NAME_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (match) {\n                var timezoneAbbr = match[1].toUpperCase();\n                if (timezones[timezoneAbbr] === undefined) {\n                    return;\n                }\n\n                var timezoneOffset = timezones[timezoneAbbr];\n                if (!result.start.isCertain('timezoneOffset')) {\n                    result.start.assign('timezoneOffset', timezoneOffset);\n                }\n\n                if (result.end != null && !result.end.isCertain('timezoneOffset')) {\n                    result.end.assign('timezoneOffset', timezoneOffset);\n                }\n\n                result.text += match[0];\n                result.tags['ExtractTimezoneAbbrRefiner'] = true;\n            }\n\t\t});\n\n        return results;\n\t}\n};"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { getCurrentProject, getCurrentUserId } from '../../selectors';\nimport { isPristineProject } from '../../util/projectUtils';\nimport { saveProject } from '../../clients/firebase';\nimport { projectSuccessfullySaved } from '../../actions/projects';\nexport function saveCurrentProject(_x) {\n  return _saveCurrentProject.apply(this, arguments);\n}\n\nfunction _saveCurrentProject() {\n  _saveCurrentProject = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(state) {\n    var userId, currentProject;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getCurrentUserId(state);\n\n          case 2:\n            userId = _context.sent;\n            _context.next = 5;\n            return getCurrentProject(state);\n\n          case 5:\n            currentProject = _context.sent;\n\n            if (!(userId && currentProject && !isPristineProject(currentProject))) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 9;\n            return saveProject(userId, currentProject);\n\n          case 9:\n            return _context.abrupt(\"return\", projectSuccessfullySaved());\n\n          case 10:\n            return _context.abrupt(\"return\", null);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _saveCurrentProject.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/peter/Desktop/code/popcode/src/logic/shared/saveCurrentProject.js"],"names":["getCurrentProject","getCurrentUserId","isPristineProject","saveProject","projectSuccessfullySaved","saveCurrentProject","state","userId","currentProject"],"mappings":";;;;AAAA,SACEA,iBADF,EAEEC,gBAFF,QAGO,iBAHP;AAIA,SAAQC,iBAAR,QAAgC,yBAAhC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,wBAAR,QAAuC,wBAAvC;AAEA,gBAAsBC,kBAAtB;AAAA;AAAA;;;;;0BAAO,iBAAkCC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBL,gBAAgB,CAACK,KAAD,CADhC;;AAAA;AACCC,YAAAA,MADD;AAAA;AAAA,mBAEwBP,iBAAiB,CAACM,KAAD,CAFzC;;AAAA;AAECE,YAAAA,cAFD;;AAAA,kBAGDD,MAAM,IAAIC,cAAV,IAA4B,CAACN,iBAAiB,CAACM,cAAD,CAH7C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIGL,WAAW,CAACI,MAAD,EAASC,cAAT,CAJd;;AAAA;AAAA,6CAKIJ,wBAAwB,EAL5B;;AAAA;AAAA,6CAOE,IAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {\n  getCurrentProject,\n  getCurrentUserId,\n} from '../../selectors';\nimport {isPristineProject} from '../../util/projectUtils';\nimport {saveProject} from '../../clients/firebase';\nimport {projectSuccessfullySaved} from '../../actions/projects';\n\nexport async function saveCurrentProject(state) {\n  const userId = await getCurrentUserId(state);\n  const currentProject = await getCurrentProject(state);\n  if (userId && currentProject && !isPristineProject(currentProject)) {\n    await saveProject(userId, currentProject);\n    return projectSuccessfullySaved();\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}
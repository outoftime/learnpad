{
  "ast": null,
  "code": "exports.Refiner = function Refiner() {\n  this.refine = function (text, results, opt) {\n    return results;\n  };\n};\n\nexports.Filter = function Filter() {\n  exports.Refiner.call(this);\n\n  this.isValid = function (text, result, opt) {\n    return true;\n  };\n\n  this.refine = function (text, results, opt) {\n    var filteredResult = [];\n\n    for (var i = 0; i < results.length; i++) {\n      var result = results[i];\n\n      if (this.isValid(text, result, opt)) {\n        filteredResult.push(result);\n      }\n    }\n\n    return filteredResult;\n  };\n}; // Common refiners\n\n\nexports.OverlapRemovalRefiner = require('./OverlapRemovalRefiner').Refiner;\nexports.ExtractTimezoneOffsetRefiner = require('./ExtractTimezoneOffsetRefiner').Refiner;\nexports.ExtractTimezoneAbbrRefiner = require('./ExtractTimezoneAbbrRefiner').Refiner;\nexports.ForwardDateRefiner = require('./ForwardDateRefiner').Refiner;\nexports.UnlikelyFormatFilter = require('./UnlikelyFormatFilter').Refiner; // en refiners\n\nexports.ENMergeDateTimeRefiner = require('./en/ENMergeDateTimeRefiner').Refiner;\nexports.ENMergeDateRangeRefiner = require('./en/ENMergeDateRangeRefiner').Refiner;\nexports.ENPrioritizeSpecificDateRefiner = require('./en/ENPrioritizeSpecificDateRefiner').Refiner; // ja refiners\n\nexports.JPMergeDateRangeRefiner = require('./ja/JPMergeDateRangeRefiner').Refiner; // fr refiners\n\nexports.FRMergeDateRangeRefiner = require('./fr/FRMergeDateRangeRefiner').Refiner;\nexports.FRMergeDateTimeRefiner = require('./fr/FRMergeDateTimeRefiner').Refiner; // de refiners\n\nexports.DEMergeDateRangeRefiner = require('./de/DEMergeDateRangeRefiner').Refiner;\nexports.DEMergeDateTimeRefiner = require('./de/DEMergeDateTimeRefiner').Refiner;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/refiners/refiner.js"
    ],
    "names": [
      "exports",
      "Refiner",
      "refine",
      "text",
      "results",
      "opt",
      "Filter",
      "call",
      "isValid",
      "result",
      "filteredResult",
      "i",
      "length",
      "push",
      "OverlapRemovalRefiner",
      "require",
      "ExtractTimezoneOffsetRefiner",
      "ExtractTimezoneAbbrRefiner",
      "ForwardDateRefiner",
      "UnlikelyFormatFilter",
      "ENMergeDateTimeRefiner",
      "ENMergeDateRangeRefiner",
      "ENPrioritizeSpecificDateRefiner",
      "JPMergeDateRangeRefiner",
      "FRMergeDateRangeRefiner",
      "FRMergeDateTimeRefiner",
      "DEMergeDateRangeRefiner",
      "DEMergeDateTimeRefiner"
    ],
    "mappings": "AACAA,OAAO,CAACC,OAAR,GAAkB,SAASA,OAAT,GAAmB;AAEjC,OAAKC,MAAL,GAAc,UAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6B;AAAE,WAAOD,OAAP;AAAiB,GAA9D;AACH,CAHD;;AAKAJ,OAAO,CAACM,MAAR,GAAiB,SAASA,MAAT,GAAkB;AAE/BN,EAAAA,OAAO,CAACC,OAAR,CAAgBM,IAAhB,CAAqB,IAArB;;AAEA,OAAKC,OAAL,GAAe,UAASL,IAAT,EAAeM,MAAf,EAAuBJ,GAAvB,EAA4B;AAAE,WAAO,IAAP;AAAc,GAA3D;;AACA,OAAKH,MAAL,GAAc,UAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6B;AAEvC,QAAIK,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGP,OAAO,CAACQ,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAEnC,UAAIF,MAAM,GAAGL,OAAO,CAACO,CAAD,CAApB;;AACA,UAAI,KAAKH,OAAL,CAAaL,IAAb,EAAmBM,MAAnB,EAA2BJ,GAA3B,CAAJ,EAAqC;AACjCK,QAAAA,cAAc,CAACG,IAAf,CAAoBJ,MAApB;AACH;AACJ;;AAED,WAAOC,cAAP;AACH,GAZD;AAaH,CAlBD,C,CAqBA;;;AACAV,OAAO,CAACc,qBAAR,GAAgCC,OAAO,CAAC,yBAAD,CAAP,CAAmCd,OAAnE;AACAD,OAAO,CAACgB,4BAAR,GAAuCD,OAAO,CAAC,gCAAD,CAAP,CAA0Cd,OAAjF;AACAD,OAAO,CAACiB,0BAAR,GAAqCF,OAAO,CAAC,8BAAD,CAAP,CAAwCd,OAA7E;AACAD,OAAO,CAACkB,kBAAR,GAA6BH,OAAO,CAAC,sBAAD,CAAP,CAAgCd,OAA7D;AACAD,OAAO,CAACmB,oBAAR,GAA+BJ,OAAO,CAAC,wBAAD,CAAP,CAAkCd,OAAjE,C,CAEA;;AACAD,OAAO,CAACoB,sBAAR,GAAiCL,OAAO,CAAC,6BAAD,CAAP,CAAuCd,OAAxE;AACAD,OAAO,CAACqB,uBAAR,GAAkCN,OAAO,CAAC,8BAAD,CAAP,CAAwCd,OAA1E;AACAD,OAAO,CAACsB,+BAAR,GAA0CP,OAAO,CAAC,sCAAD,CAAP,CAAgDd,OAA1F,C,CAEA;;AACAD,OAAO,CAACuB,uBAAR,GAAkCR,OAAO,CAAC,8BAAD,CAAP,CAAwCd,OAA1E,C,CAEA;;AACAD,OAAO,CAACwB,uBAAR,GAAkCT,OAAO,CAAC,8BAAD,CAAP,CAAwCd,OAA1E;AACAD,OAAO,CAACyB,sBAAR,GAAiCV,OAAO,CAAC,6BAAD,CAAP,CAAuCd,OAAxE,C,CAEA;;AACAD,OAAO,CAAC0B,uBAAR,GAAkCX,OAAO,CAAC,8BAAD,CAAP,CAAwCd,OAA1E;AACAD,OAAO,CAAC2B,sBAAR,GAAiCZ,OAAO,CAAC,6BAAD,CAAP,CAAuCd,OAAxE",
    "sourcesContent": [
      "\nexports.Refiner = function Refiner() { \n\n    this.refine = function(text, results, opt) { return results; };\n}\n\nexports.Filter = function Filter() { \n    \n    exports.Refiner.call(this);\n\n    this.isValid = function(text, result, opt) { return true; }\n    this.refine = function(text, results, opt) { \n\n        var filteredResult = [];\n        for (var i=0; i < results.length; i++) {\n\n            var result = results[i];\n            if (this.isValid(text, result, opt)) {\n                filteredResult.push(result);\n            }\n        }\n\n        return filteredResult;\n    }\n}\n\n\n// Common refiners\nexports.OverlapRemovalRefiner = require('./OverlapRemovalRefiner').Refiner;\nexports.ExtractTimezoneOffsetRefiner = require('./ExtractTimezoneOffsetRefiner').Refiner;\nexports.ExtractTimezoneAbbrRefiner = require('./ExtractTimezoneAbbrRefiner').Refiner;\nexports.ForwardDateRefiner = require('./ForwardDateRefiner').Refiner;\nexports.UnlikelyFormatFilter = require('./UnlikelyFormatFilter').Refiner;\n\n// en refiners\nexports.ENMergeDateTimeRefiner = require('./en/ENMergeDateTimeRefiner').Refiner;\nexports.ENMergeDateRangeRefiner = require('./en/ENMergeDateRangeRefiner').Refiner;\nexports.ENPrioritizeSpecificDateRefiner = require('./en/ENPrioritizeSpecificDateRefiner').Refiner;\n\n// ja refiners\nexports.JPMergeDateRangeRefiner = require('./ja/JPMergeDateRangeRefiner').Refiner;\n\n// fr refiners\nexports.FRMergeDateRangeRefiner = require('./fr/FRMergeDateRangeRefiner').Refiner;\nexports.FRMergeDateTimeRefiner = require('./fr/FRMergeDateTimeRefiner').Refiner;\n\n// de refiners\nexports.DEMergeDateRangeRefiner = require('./de/DEMergeDateRangeRefiner').Refiner;\nexports.DEMergeDateTimeRefiner = require('./de/DEMergeDateTimeRefiner').Refiner;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport find from 'lodash-es/find';\nimport ErrorList from './ErrorList';\nimport PopThrobber from './PopThrobber';\n\nfunction ErrorReport(_ref) {\n  var errors = _ref.errors,\n      isValidating = _ref.isValidating,\n      onErrorClick = _ref.onErrorClick;\n\n  if (isValidating) {\n    return React.createElement(\"div\", {\n      className: \"output__delayed-error-overlay\"\n    }, React.createElement(PopThrobber, null));\n  }\n\n  var hasErrors = Boolean(find(errors, function (list) {\n    return list.items.length;\n  }));\n\n  if (!hasErrors) {\n    return null;\n  }\n\n  var isDocked = Boolean(find(errors, {\n    state: 'runtime-error'\n  }));\n  var html = errors.html,\n      css = errors.css,\n      javascript = errors.javascript;\n  return React.createElement(\"div\", {\n    className: classnames('error-list', 'output__item', {\n      'error-list_docked': isDocked,\n      output__item_shrink: isDocked\n    })\n  }, React.createElement(ErrorList, {\n    errors: html,\n    language: \"html\",\n    onErrorClick: onErrorClick\n  }), React.createElement(ErrorList, {\n    errors: css,\n    language: \"css\",\n    onErrorClick: onErrorClick\n  }), React.createElement(ErrorList, {\n    errors: javascript,\n    language: \"javascript\",\n    onErrorClick: onErrorClick\n  }));\n}\n\nErrorReport.propTypes = {\n  errors: PropTypes.shape({\n    css: PropTypes.object.isRequired,\n    html: PropTypes.object.isRequired,\n    javascript: PropTypes.object.isRequired\n  }).isRequired,\n  isValidating: PropTypes.bool.isRequired,\n  onErrorClick: PropTypes.func.isRequired\n};\nexport default ErrorReport;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/ErrorReport.jsx"
    ],
    "names": [
      "React",
      "PropTypes",
      "classnames",
      "find",
      "ErrorList",
      "PopThrobber",
      "ErrorReport",
      "errors",
      "isValidating",
      "onErrorClick",
      "hasErrors",
      "Boolean",
      "list",
      "items",
      "length",
      "isDocked",
      "state",
      "html",
      "css",
      "javascript",
      "output__item_shrink",
      "propTypes",
      "shape",
      "object",
      "isRequired",
      "bool",
      "func"
    ],
    "mappings": "AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,WAAT,OAA2D;AAAA,MAArCC,MAAqC,QAArCA,MAAqC;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,YAAe,QAAfA,YAAe;;AACzD,MAAID,YAAJ,EAAkB;AAChB,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,oBAAC,WAAD,OADF,CADF;AAKD;;AAED,MAAME,SAAS,GAAGC,OAAO,CAACR,IAAI,CAACI,MAAD,EAAS,UAAAK,IAAI;AAAA,WAAIA,IAAI,CAACC,KAAL,CAAWC,MAAf;AAAA,GAAb,CAAL,CAAzB;;AACA,MAAI,CAACJ,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,MAAMK,QAAQ,GAAGJ,OAAO,CAACR,IAAI,CAACI,MAAD,EAAS;AAACS,IAAAA,KAAK,EAAE;AAAR,GAAT,CAAL,CAAxB;AAdyD,MAelDC,IAfkD,GAezBV,MAfyB,CAelDU,IAfkD;AAAA,MAe5CC,GAf4C,GAezBX,MAfyB,CAe5CW,GAf4C;AAAA,MAevCC,UAfuC,GAezBZ,MAfyB,CAevCY,UAfuC;AAiBzD,SACE;AACE,IAAA,SAAS,EAAEjB,UAAU,CAAC,YAAD,EAAe,cAAf,EAA+B;AAClD,2BAAqBa,QAD6B;AAElDK,MAAAA,mBAAmB,EAAEL;AAF6B,KAA/B;AADvB,KAME,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEE,IAAnB;AAAyB,IAAA,QAAQ,EAAC,MAAlC;AAAyC,IAAA,YAAY,EAAER;AAAvD,IANF,EAOE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAES,GAAnB;AAAwB,IAAA,QAAQ,EAAC,KAAjC;AAAuC,IAAA,YAAY,EAAET;AAArD,IAPF,EAQE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAEU,UADV;AAEE,IAAA,QAAQ,EAAC,YAFX;AAGE,IAAA,YAAY,EAAEV;AAHhB,IARF,CADF;AAgBD;;AAEDH,WAAW,CAACe,SAAZ,GAAwB;AACtBd,EAAAA,MAAM,EAAEN,SAAS,CAACqB,KAAV,CAAgB;AACtBJ,IAAAA,GAAG,EAAEjB,SAAS,CAACsB,MAAV,CAAiBC,UADA;AAEtBP,IAAAA,IAAI,EAAEhB,SAAS,CAACsB,MAAV,CAAiBC,UAFD;AAGtBL,IAAAA,UAAU,EAAElB,SAAS,CAACsB,MAAV,CAAiBC;AAHP,GAAhB,EAILA,UALmB;AAMtBhB,EAAAA,YAAY,EAAEP,SAAS,CAACwB,IAAV,CAAeD,UANP;AAOtBf,EAAAA,YAAY,EAAER,SAAS,CAACyB,IAAV,CAAeF;AAPP,CAAxB;AAUA,eAAelB,WAAf",
    "sourcesContent": [
      "import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport find from 'lodash-es/find';\n\nimport ErrorList from './ErrorList';\nimport PopThrobber from './PopThrobber';\n\nfunction ErrorReport({errors, isValidating, onErrorClick}) {\n  if (isValidating) {\n    return (\n      <div className=\"output__delayed-error-overlay\">\n        <PopThrobber />\n      </div>\n    );\n  }\n\n  const hasErrors = Boolean(find(errors, list => list.items.length));\n  if (!hasErrors) {\n    return null;\n  }\n\n  const isDocked = Boolean(find(errors, {state: 'runtime-error'}));\n  const {html, css, javascript} = errors;\n\n  return (\n    <div\n      className={classnames('error-list', 'output__item', {\n        'error-list_docked': isDocked,\n        output__item_shrink: isDocked,\n      })}\n    >\n      <ErrorList errors={html} language=\"html\" onErrorClick={onErrorClick} />\n      <ErrorList errors={css} language=\"css\" onErrorClick={onErrorClick} />\n      <ErrorList\n        errors={javascript}\n        language=\"javascript\"\n        onErrorClick={onErrorClick}\n      />\n    </div>\n  );\n}\n\nErrorReport.propTypes = {\n  errors: PropTypes.shape({\n    css: PropTypes.object.isRequired,\n    html: PropTypes.object.isRequired,\n    javascript: PropTypes.object.isRequired,\n  }).isRequired,\n  isValidating: PropTypes.bool.isRequired,\n  onErrorClick: PropTypes.func.isRequired,\n};\n\nexport default ErrorReport;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport qs from 'qs';\nimport { AssignmentState } from '../enums';\nimport { loadAndConfigureGapi } from '../services/gapi';\nvar BASE_URL = 'https://classroom.google.com/u/0/share?';\nexport function createShareToClassroomUrl(snapshotKey, title) {\n  var uri = document.createElement('a');\n  uri.href = '/';\n  uri.search = \"snapshot=\".concat(snapshotKey);\n  return BASE_URL + qs.stringify({\n    url: uri.href,\n    title: title\n  });\n}\nexport function getCourses(_x) {\n  return _getCourses.apply(this, arguments);\n}\n\nfunction _getCourses() {\n  _getCourses = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(pageToken) {\n    var gapi, _ref2, result;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return loadAndConfigureGapi();\n\n          case 2:\n            gapi = _context.sent;\n            _context.next = 5;\n            return gapi.client.classroom.courses.list({\n              pageToken: pageToken\n            });\n\n          case 5:\n            _ref2 = _context.sent;\n            result = _ref2.result;\n            return _context.abrupt(\"return\", result);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getCourses.apply(this, arguments);\n}\n\nexport function createClassroomAssignment(_x2) {\n  return _createClassroomAssignment.apply(this, arguments);\n}\n\nfunction _createClassroomAssignment() {\n  _createClassroomAssignment = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(_ref) {\n    var courseId, dueDate, url, title, state, gapi, newAssignment;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            courseId = _ref.courseId, dueDate = _ref.dueDate, url = _ref.url, title = _ref.title, state = _ref.state;\n            _context2.next = 3;\n            return loadAndConfigureGapi();\n\n          case 3:\n            gapi = _context2.sent;\n            _context2.next = 6;\n            return gapi.client.classroom.courses.courseWork.create({\n              courseId: courseId,\n              title: title,\n              workType: AssignmentState.ASSIGNMENT,\n              state: state,\n              dueDate: {\n                year: dueDate.getUTCFullYear(),\n                month: dueDate.getUTCMonth() + 1,\n                day: dueDate.getUTCDate()\n              },\n              dueTime: {\n                hours: dueDate.getUTCHours(),\n                minutes: dueDate.getUTCMinutes(),\n                seconds: 0,\n                nanos: 0\n              },\n              materials: {\n                link: {\n                  url: url,\n                  title: title,\n                  thumbnailUrl: 'N/A'\n                }\n              }\n            });\n\n          case 6:\n            newAssignment = _context2.sent;\n            return _context2.abrupt(\"return\", newAssignment.result);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createClassroomAssignment.apply(this, arguments);\n}",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/clients/googleClassroom.js"
    ],
    "names": [
      "qs",
      "AssignmentState",
      "loadAndConfigureGapi",
      "BASE_URL",
      "createShareToClassroomUrl",
      "snapshotKey",
      "title",
      "uri",
      "document",
      "createElement",
      "href",
      "search",
      "stringify",
      "url",
      "getCourses",
      "pageToken",
      "gapi",
      "client",
      "classroom",
      "courses",
      "list",
      "result",
      "createClassroomAssignment",
      "courseId",
      "dueDate",
      "state",
      "courseWork",
      "create",
      "workType",
      "ASSIGNMENT",
      "year",
      "getUTCFullYear",
      "month",
      "getUTCMonth",
      "day",
      "getUTCDate",
      "dueTime",
      "hours",
      "getUTCHours",
      "minutes",
      "getUTCMinutes",
      "seconds",
      "nanos",
      "materials",
      "link",
      "thumbnailUrl",
      "newAssignment"
    ],
    "mappings": ";;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AAEA,SAAQC,eAAR,QAA8B,UAA9B;AACA,SAAQC,oBAAR,QAAmC,kBAAnC;AAEA,IAAMC,QAAQ,GAAG,yCAAjB;AAEA,OAAO,SAASC,yBAAT,CAAmCC,WAAnC,EAAgDC,KAAhD,EAAuD;AAC5D,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,IAAJ,GAAW,GAAX;AACAH,EAAAA,GAAG,CAACI,MAAJ,sBAAyBN,WAAzB;AACA,SAAOF,QAAQ,GAAGH,EAAE,CAACY,SAAH,CAAa;AAACC,IAAAA,GAAG,EAAEN,GAAG,CAACG,IAAV;AAAgBJ,IAAAA,KAAK,EAALA;AAAhB,GAAb,CAAlB;AACD;AAED,gBAAsBQ,UAAtB;AAAA;AAAA;;;;;0BAAO,iBAA0BC,SAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcb,oBAAoB,EADlC;;AAAA;AACCc,YAAAA,IADD;AAAA;AAAA,mBAEkBA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,OAAtB,CAA8BC,IAA9B,CAAmC;AAACL,cAAAA,SAAS,EAATA;AAAD,aAAnC,CAFlB;;AAAA;AAAA;AAEEM,YAAAA,MAFF,SAEEA,MAFF;AAAA,6CAGEA,MAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAsBC,yBAAtB;AAAA;AAAA;;;;;0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,QADK,QACLA,QADK,EAELC,OAFK,QAELA,OAFK,EAGLX,GAHK,QAGLA,GAHK,EAILP,KAJK,QAILA,KAJK,EAKLmB,KALK,QAKLA,KALK;AAAA;AAAA,mBAOcvB,oBAAoB,EAPlC;;AAAA;AAOCc,YAAAA,IAPD;AAAA;AAAA,mBASuBA,IAAI,CAACC,MAAL,CAAYC,SAAZ,CAAsBC,OAAtB,CAA8BO,UAA9B,CAAyCC,MAAzC,CAAgD;AAC1EJ,cAAAA,QAAQ,EAARA,QAD0E;AAE1EjB,cAAAA,KAAK,EAALA,KAF0E;AAG1EsB,cAAAA,QAAQ,EAAE3B,eAAe,CAAC4B,UAHgD;AAI1EJ,cAAAA,KAAK,EAALA,KAJ0E;AAK1ED,cAAAA,OAAO,EAAE;AACPM,gBAAAA,IAAI,EAAEN,OAAO,CAACO,cAAR,EADC;AAEPC,gBAAAA,KAAK,EAAER,OAAO,CAACS,WAAR,KAAwB,CAFxB;AAGPC,gBAAAA,GAAG,EAAEV,OAAO,CAACW,UAAR;AAHE,eALiE;AAU1EC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,KAAK,EAAEb,OAAO,CAACc,WAAR,EADA;AAEPC,gBAAAA,OAAO,EAAEf,OAAO,CAACgB,aAAR,EAFF;AAGPC,gBAAAA,OAAO,EAAE,CAHF;AAIPC,gBAAAA,KAAK,EAAE;AAJA,eAViE;AAgB1EC,cAAAA,SAAS,EAAE;AACTC,gBAAAA,IAAI,EAAE;AACJ/B,kBAAAA,GAAG,EAAHA,GADI;AAEJP,kBAAAA,KAAK,EAALA,KAFI;AAGJuC,kBAAAA,YAAY,EAAE;AAHV;AADG;AAhB+D,aAAhD,CATvB;;AAAA;AASCC,YAAAA,aATD;AAAA,8CAiCEA,aAAa,CAACzB,MAjChB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
    "sourcesContent": [
      "import qs from 'qs';\n\nimport {AssignmentState} from '../enums';\nimport {loadAndConfigureGapi} from '../services/gapi';\n\nconst BASE_URL = 'https://classroom.google.com/u/0/share?';\n\nexport function createShareToClassroomUrl(snapshotKey, title) {\n  const uri = document.createElement('a');\n  uri.href = '/';\n  uri.search = `snapshot=${snapshotKey}`;\n  return BASE_URL + qs.stringify({url: uri.href, title});\n}\n\nexport async function getCourses(pageToken) {\n  const gapi = await loadAndConfigureGapi();\n  const {result} = await gapi.client.classroom.courses.list({pageToken});\n  return result;\n}\n\nexport async function createClassroomAssignment({\n  courseId,\n  dueDate,\n  url,\n  title,\n  state,\n}) {\n  const gapi = await loadAndConfigureGapi();\n\n  const newAssignment = await gapi.client.classroom.courses.courseWork.create({\n    courseId,\n    title,\n    workType: AssignmentState.ASSIGNMENT,\n    state,\n    dueDate: {\n      year: dueDate.getUTCFullYear(),\n      month: dueDate.getUTCMonth() + 1,\n      day: dueDate.getUTCDate(),\n    },\n    dueTime: {\n      hours: dueDate.getUTCHours(),\n      minutes: dueDate.getUTCMinutes(),\n      seconds: 0,\n      nanos: 0,\n    },\n    materials: {\n      link: {\n        url,\n        title,\n        thumbnailUrl: 'N/A',\n      },\n    },\n  });\n  return newAssignment.result;\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

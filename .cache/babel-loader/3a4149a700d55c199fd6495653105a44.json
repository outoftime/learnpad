{
  "ast": null,
  "code": "function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React from 'react';\nimport { t } from 'i18next';\nimport classnames from 'classnames';\nimport chrono from 'chrono-node';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { Field } from 'redux-form/immutable';\nimport FormDate from '../records/FormDate';\nimport AssignmentCreatorTextField from './AssignmentCreatorTextField';\nimport AssignmentCreatorSelectField from './AssignmentCreatorSelectField';\n\nfunction parseDate(value) {\n  var _chrono$parse = chrono.parse(value),\n      _chrono$parse2 = _slicedToArray(_chrono$parse, 1),\n      parsedResponse = _chrono$parse2[0];\n\n  var parsedDate;\n\n  if (parsedResponse) {\n    parsedDate = parsedResponse.start.date();\n  }\n\n  return new FormDate({\n    string: value,\n    parsedDate: parsedDate\n  });\n}\n\nfunction formatDate(value) {\n  if (value) {\n    return value.string;\n  }\n\n  return '';\n}\n\nexport default function AssignmentCreatorForm(_ref) {\n  var courses = _ref.courses,\n      handleSubmit = _ref.handleSubmit,\n      isAssignmentExportInProgress = _ref.isAssignmentExportInProgress,\n      parsedDate = _ref.parsedDate,\n      onAssignAssignment = _ref.onAssignAssignment,\n      onDraftAssignment = _ref.onDraftAssignment,\n      onCloseAssignmentCreator = _ref.onCloseAssignmentCreator;\n  return React.createElement(\"form\", null, React.createElement(\"div\", null, React.createElement(Field, {\n    component: AssignmentCreatorSelectField,\n    name: \"course\"\n  }, React.createElement(\"option\", {\n    value: \"\"\n  }, t('assignment-creator.select-class')), courses.map(function (course) {\n    return React.createElement(\"option\", {\n      key: course.id,\n      value: course.id\n    }, course.name);\n  }).valueSeq())), React.createElement(\"div\", null, React.createElement(Field, {\n    component: AssignmentCreatorTextField,\n    format: formatDate,\n    name: \"date\",\n    parse: parseDate,\n    placeholder: t('assignment-creator.input-placeholder'),\n    type: \"text\",\n    valueLabel: parsedDate\n  })), React.createElement(\"div\", null, isAssignmentExportInProgress ? React.createElement(\"button\", {\n    disabled: true,\n    className: classnames('assignment-creator__button', 'assignment-creator__button_disabled'),\n    type: \"button\"\n  }, t('assignment-creator.creating')) : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    className: classnames('assignment-creator__button', 'assignment-creator__button_reject'),\n    type: \"button\",\n    onClick: onCloseAssignmentCreator\n  }, t('assignment-creator.cancel-button')), React.createElement(\"button\", {\n    className: classnames('assignment-creator__button', 'assignment-creator__button_confirm'),\n    type: \"button\",\n    onClick: handleSubmit(onDraftAssignment)\n  }, t('assignment-creator.draft-button')), React.createElement(\"button\", {\n    className: classnames('assignment-creator__button', 'assignment-creator__button_confirm'),\n    type: \"button\",\n    onClick: handleSubmit(onAssignAssignment)\n  }, t('assignment-creator.assign-button')))));\n}\nAssignmentCreatorForm.propTypes = {\n  courses: ImmutablePropTypes.iterable.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  isAssignmentExportInProgress: PropTypes.bool.isRequired,\n  parsedDate: PropTypes.instanceOf(Date),\n  onAssignAssignment: PropTypes.func.isRequired,\n  onCloseAssignmentCreator: PropTypes.func.isRequired,\n  onDraftAssignment: PropTypes.func.isRequired\n};\nAssignmentCreatorForm.defaultProps = {\n  parsedDate: null\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/AssignmentCreatorForm.jsx"
    ],
    "names": [
      "React",
      "t",
      "classnames",
      "chrono",
      "PropTypes",
      "ImmutablePropTypes",
      "Field",
      "FormDate",
      "AssignmentCreatorTextField",
      "AssignmentCreatorSelectField",
      "parseDate",
      "value",
      "parse",
      "parsedResponse",
      "parsedDate",
      "start",
      "date",
      "string",
      "formatDate",
      "AssignmentCreatorForm",
      "courses",
      "handleSubmit",
      "isAssignmentExportInProgress",
      "onAssignAssignment",
      "onDraftAssignment",
      "onCloseAssignmentCreator",
      "map",
      "course",
      "id",
      "name",
      "valueSeq",
      "propTypes",
      "iterable",
      "isRequired",
      "func",
      "bool",
      "instanceOf",
      "Date",
      "defaultProps"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport {t} from 'i18next';\nimport classnames from 'classnames';\nimport chrono from 'chrono-node';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport {Field} from 'redux-form/immutable';\n\nimport FormDate from '../records/FormDate';\n\nimport AssignmentCreatorTextField from './AssignmentCreatorTextField';\nimport AssignmentCreatorSelectField from './AssignmentCreatorSelectField';\n\nfunction parseDate(value) {\n  const [parsedResponse] = chrono.parse(value);\n  let parsedDate;\n  if (parsedResponse) {\n    parsedDate = parsedResponse.start.date();\n  }\n  return new FormDate({\n    string: value,\n    parsedDate,\n  });\n}\n\nfunction formatDate(value) {\n  if (value) {\n    return value.string;\n  }\n  return '';\n}\n\nexport default function AssignmentCreatorForm({\n  courses,\n  handleSubmit,\n  isAssignmentExportInProgress,\n  parsedDate,\n  onAssignAssignment,\n  onDraftAssignment,\n  onCloseAssignmentCreator,\n}) {\n  return (\n    <form>\n      <div>\n        <Field component={AssignmentCreatorSelectField} name=\"course\">\n          <option value=\"\">{t('assignment-creator.select-class')}</option>\n          {courses\n            .map(course => (\n              <option key={course.id} value={course.id}>\n                {course.name}\n              </option>\n            ))\n            .valueSeq()}\n        </Field>\n      </div>\n      <div>\n        <Field\n          component={AssignmentCreatorTextField}\n          format={formatDate}\n          name=\"date\"\n          parse={parseDate}\n          placeholder={t('assignment-creator.input-placeholder')}\n          type=\"text\"\n          valueLabel={parsedDate}\n        />\n      </div>\n      <div>\n        {isAssignmentExportInProgress ? (\n          <button\n            disabled\n            className={classnames(\n              'assignment-creator__button',\n              'assignment-creator__button_disabled',\n            )}\n            type=\"button\"\n          >\n            {t('assignment-creator.creating')}\n          </button>\n        ) : (\n          <>\n            <button\n              className={classnames(\n                'assignment-creator__button',\n                'assignment-creator__button_reject',\n              )}\n              type=\"button\"\n              onClick={onCloseAssignmentCreator}\n            >\n              {t('assignment-creator.cancel-button')}\n            </button>\n            <button\n              className={classnames(\n                'assignment-creator__button',\n                'assignment-creator__button_confirm',\n              )}\n              type=\"button\"\n              onClick={handleSubmit(onDraftAssignment)}\n            >\n              {t('assignment-creator.draft-button')}\n            </button>\n            <button\n              className={classnames(\n                'assignment-creator__button',\n                'assignment-creator__button_confirm',\n              )}\n              type=\"button\"\n              onClick={handleSubmit(onAssignAssignment)}\n            >\n              {t('assignment-creator.assign-button')}\n            </button>\n          </>\n        )}\n      </div>\n    </form>\n  );\n}\n\nAssignmentCreatorForm.propTypes = {\n  courses: ImmutablePropTypes.iterable.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  isAssignmentExportInProgress: PropTypes.bool.isRequired,\n  parsedDate: PropTypes.instanceOf(Date),\n  onAssignAssignment: PropTypes.func.isRequired,\n  onCloseAssignmentCreator: PropTypes.func.isRequired,\n  onDraftAssignment: PropTypes.func.isRequired,\n};\n\nAssignmentCreatorForm.defaultProps = {\n  parsedDate: null,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

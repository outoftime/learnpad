{
  "ast": null,
  "code": "function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport isEmpty from 'lodash-es/isEmpty';\nimport isNull from 'lodash-es/isNull';\nimport trim from 'lodash-es/trim';\nimport retryingFailedImports from '../util/retryingFailedImports';\nimport performWithRetries from '../util/performWithRetries';\nimport compileProject from '../util/compileProject';\nimport ExtendableError from '../util/ExtendableError';\nvar COMMIT_MESSAGE = 'Created using Popcode: https://popcode.org';\nvar MASTER = 'master';\nvar GH_PAGES = 'gh-pages';\nvar NETWORK_ERROR = 'Network Error';\nexport var EmptyGistError =\n/*#__PURE__*/\nfunction (_ExtendableError) {\n  _inherits(EmptyGistError, _ExtendableError);\n\n  function EmptyGistError() {\n    _classCallCheck(this, EmptyGistError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EmptyGistError).apply(this, arguments));\n  }\n\n  return EmptyGistError;\n}(ExtendableError);\n\nfunction normalizeTitle(title) {\n  var titleWithoutPunctuationAndWhitespace = title.replace(/(?:[\\0-\\x08\\x0E-\\x1F!-\\/:-@\\[-\\^`\\{-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])|_/g, '').replace(/(?:[\\0-\\/:-@\\[-\\^`\\{-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g, '-');\n  return titleWithoutPunctuationAndWhitespace;\n}\n\nexport function getProfileForAuthenticatedUser(_x) {\n  return _getProfileForAuthenticatedUser.apply(this, arguments);\n}\n\nfunction _getProfileForAuthenticatedUser() {\n  _getProfileForAuthenticatedUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(accessToken) {\n    var github;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return createClient(accessToken);\n\n          case 2:\n            github = _context.sent;\n            return _context.abrupt(\"return\", github.getUser().getProfile());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getProfileForAuthenticatedUser.apply(this, arguments);\n}\n\nexport function createOrUpdateRepoFromProject(_x2, _x3) {\n  return _createOrUpdateRepoFromProject.apply(this, arguments);\n}\n\nfunction _createOrUpdateRepoFromProject() {\n  _createOrUpdateRepoFromProject = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(project, accessToken) {\n    var repoAlreadyExists;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            repoAlreadyExists = Boolean(project.externalLocations.githubRepoName);\n\n            if (!repoAlreadyExists) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", updateRepoFromProject(project, accessToken));\n\n          case 3:\n            return _context2.abrupt(\"return\", createRepoFromProject(project, accessToken));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createOrUpdateRepoFromProject.apply(this, arguments);\n}\n\nfunction createRepoFromProject(_x4, _x5) {\n  return _createRepoFromProject.apply(this, arguments);\n}\n\nfunction _createRepoFromProject() {\n  _createRepoFromProject = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(project, accessToken) {\n    var github, preview, title, repoName, duplicateNameFailureCount, fullRepoName, _ref, data, userName;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return createClient(accessToken);\n\n          case 2:\n            github = _context3.sent;\n            _context3.next = 5;\n            return compileProject(project);\n\n          case 5:\n            preview = _context3.sent;\n            title = normalizeTitle(preview.title);\n            repoName = \"\".concat(title);\n            duplicateNameFailureCount = 0;\n            fullRepoName = '';\n            _context3.next = 12;\n            return performWithRetries(function () {\n              var suffix = duplicateNameFailureCount === 0 ? '' : \"-\".concat(duplicateNameFailureCount);\n              fullRepoName = \"\".concat(repoName).concat(suffix);\n              return github.getUser().createRepo({\n                name: fullRepoName,\n                auto_init: true\n              });\n            }, function (errorMessage) {\n              var shouldRetry = errorMessage.includes('Unprocessable Entity') || errorMessage === NETWORK_ERROR;\n\n              if (errorMessage.includes('Unprocessable Entity')) {\n                duplicateNameFailureCount += 1;\n              }\n\n              return shouldRetry;\n            }, {});\n\n          case 12:\n            _ref = _context3.sent;\n            data = _ref.data;\n            userName = data.owner.login;\n            _context3.next = 17;\n            return performWithRetryNetworkErrors(function () {\n              return github.getRepo(userName, fullRepoName).deleteFile(MASTER, 'README.md');\n            });\n\n          case 17:\n            _context3.next = 19;\n            return createBranch(github, userName, fullRepoName, MASTER, GH_PAGES);\n\n          case 19:\n            _context3.next = 21;\n            return createRepoFiles(github, project, userName, fullRepoName);\n\n          case 21:\n            _context3.next = 23;\n            return updateRepoDescription(github, userName, fullRepoName);\n\n          case 23:\n            return _context3.abrupt(\"return\", {\n              url: data.html_url,\n              name: fullRepoName\n            });\n\n          case 24:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _createRepoFromProject.apply(this, arguments);\n}\n\nfunction updateRepoFromProject(_x6, _x7) {\n  return _updateRepoFromProject.apply(this, arguments);\n}\n\nfunction _updateRepoFromProject() {\n  _updateRepoFromProject = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(project, accessToken) {\n    var github, repoName, _ref2, userData, userName, _ref3, data;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return createClient(accessToken);\n\n          case 2:\n            github = _context4.sent;\n            repoName = project.externalLocations.githubRepoName;\n            _context4.next = 6;\n            return performWithRetryNetworkErrors(function () {\n              return github.getUser().getProfile();\n            });\n\n          case 6:\n            _ref2 = _context4.sent;\n            userData = _ref2.data;\n            userName = userData.login;\n            _context4.next = 11;\n            return createRepoFiles(github, project, userName, repoName);\n\n          case 11:\n            _context4.next = 13;\n            return performWithRetryNetworkErrors(function () {\n              return github.getRepo(userName, repoName).getDetails();\n            });\n\n          case 13:\n            _ref3 = _context4.sent;\n            data = _ref3.data;\n            return _context4.abrupt(\"return\", {\n              url: data.html_url,\n              name: repoName\n            });\n\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _updateRepoFromProject.apply(this, arguments);\n}\n\nfunction createRepoFiles(_x8, _x9, _x10, _x11) {\n  return _createRepoFiles.apply(this, arguments);\n}\n\nfunction _createRepoFiles() {\n  _createRepoFiles = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(github, project, userName, repoName) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return createHtmlFile(github, project, userName, repoName);\n\n          case 2:\n            _context5.next = 4;\n            return createCssFile(github, project, userName, repoName);\n\n          case 4:\n            _context5.next = 6;\n            return createJsFile(github, project, userName, repoName);\n\n          case 6:\n            _context5.next = 8;\n            return createPreviewFile(github, project, userName, repoName);\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _createRepoFiles.apply(this, arguments);\n}\n\nexport function createGistFromProject(_x12, _x13) {\n  return _createGistFromProject.apply(this, arguments);\n}\n\nfunction _createGistFromProject() {\n  _createGistFromProject = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(project, accessToken) {\n    var github, gist, response;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return createClient(accessToken);\n\n          case 2:\n            github = _context6.sent;\n            gist = buildGistFromProject(project);\n\n            if (!isEmpty(gist.files)) {\n              _context6.next = 6;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", Promise.reject(new EmptyGistError()));\n\n          case 6:\n            _context6.next = 8;\n            return performWithRetryNetworkErrors(function () {\n              return github.getGist().create(gist);\n            });\n\n          case 8:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", updateGistWithImportUrl(github, response.data));\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createGistFromProject.apply(this, arguments);\n}\n\nexport function loadGistFromId(_x14) {\n  return _loadGistFromId.apply(this, arguments);\n}\n\nfunction _loadGistFromId() {\n  _loadGistFromId = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(gistId) {\n    var github, gist, response;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return createClient();\n\n          case 2:\n            github = _context7.sent;\n            gist = github.getGist(gistId);\n            _context7.next = 6;\n            return performWithRetryNetworkErrors(function () {\n              return gist.read();\n            }, {\n              retries: 3\n            });\n\n          case 6:\n            response = _context7.sent;\n            return _context7.abrupt(\"return\", response.data);\n\n          case 8:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _loadGistFromId.apply(this, arguments);\n}\n\nfunction buildGistFromProject(project) {\n  var files = {};\n\n  if (trim(project.sources.html)) {\n    files['index.html'] = {\n      content: project.sources.html,\n      language: 'HTML'\n    };\n  }\n\n  if (trim(project.sources.css)) {\n    files['styles.css'] = {\n      content: project.sources.css,\n      language: 'CSS'\n    };\n  }\n\n  if (trim(project.sources.javascript)) {\n    files['script.js'] = {\n      content: project.sources.javascript,\n      language: 'JavaScript'\n    };\n  }\n\n  if (trim(project.instructions)) {\n    files['README.md'] = {\n      content: project.instructions,\n      language: 'Markdown'\n    };\n  }\n\n  if (project.enabledLibraries.length || project.hiddenUIComponents.length) {\n    files['popcode.json'] = {\n      content: createPopcodeJson(project),\n      language: 'JSON'\n    };\n  }\n\n  return {\n    description: 'Exported from Popcode.',\n    public: true,\n    files: files\n  };\n}\n\nfunction updateGistWithImportUrl(_x15, _x16) {\n  return _updateGistWithImportUrl.apply(this, arguments);\n}\n\nfunction _updateGistWithImportUrl() {\n  _updateGistWithImportUrl = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(github, gistData) {\n    var gist, uri, description, response;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            gist = github.getGist(gistData.id);\n            uri = document.createElement('a');\n            uri.setAttribute('href', '/');\n            uri.search = \"gist=\".concat(gistData.id);\n            description = \"\".concat(gistData.description, \" Click to import: \").concat(uri.href);\n            _context8.next = 7;\n            return performWithRetryNetworkErrors(function () {\n              return gist.update({\n                description: description\n              });\n            });\n\n          case 7:\n            response = _context8.sent;\n            return _context8.abrupt(\"return\", response.data);\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _updateGistWithImportUrl.apply(this, arguments);\n}\n\nfunction createPopcodeJson(project) {\n  var json = {};\n\n  if (project.enabledLibraries.length) {\n    json.enabledLibraries = project.enabledLibraries;\n  }\n\n  if (project.hiddenUIComponents.length) {\n    json.hiddenUIComponents = project.hiddenUIComponents;\n  }\n\n  return JSON.stringify(json);\n}\n\nfunction performWithRetryNetworkErrors(perform) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return performWithRetries(perform, function (errorMessage) {\n    return errorMessage === NETWORK_ERROR;\n  }, options);\n}\n\nfunction createSourceFileInRepo(_x17, _x18, _x19, _x20, _x21, _x22) {\n  return _createSourceFileInRepo.apply(this, arguments);\n}\n\nfunction _createSourceFileInRepo() {\n  _createSourceFileInRepo = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(github, userName, repoName, branchName, fileName, source) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return performWithRetryNetworkErrors(function () {\n              return github.getRepo(userName, repoName).writeFile(branchName, fileName, source, COMMIT_MESSAGE, {});\n            });\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _createSourceFileInRepo.apply(this, arguments);\n}\n\nfunction createHtmlFile(_x23, _x24, _x25, _x26) {\n  return _createHtmlFile.apply(this, arguments);\n}\n\nfunction _createHtmlFile() {\n  _createHtmlFile = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee10(github, project, userName, repoName) {\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!trim(project.sources.html)) {\n              _context10.next = 3;\n              break;\n            }\n\n            _context10.next = 3;\n            return createSourceFileInRepo(github, userName, repoName, MASTER, 'index.html', project.sources.html);\n\n          case 3:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _createHtmlFile.apply(this, arguments);\n}\n\nfunction createCssFile(_x27, _x28, _x29, _x30) {\n  return _createCssFile.apply(this, arguments);\n}\n\nfunction _createCssFile() {\n  _createCssFile = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11(github, project, userName, repoName) {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            if (!trim(project.sources.css)) {\n              _context11.next = 3;\n              break;\n            }\n\n            _context11.next = 3;\n            return createSourceFileInRepo(github, userName, repoName, MASTER, 'styles.css', project.sources.css);\n\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _createCssFile.apply(this, arguments);\n}\n\nfunction createJsFile(_x31, _x32, _x33, _x34) {\n  return _createJsFile.apply(this, arguments);\n}\n\nfunction _createJsFile() {\n  _createJsFile = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12(github, project, userName, repoName) {\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (!trim(project.sources.javascript)) {\n              _context12.next = 3;\n              break;\n            }\n\n            _context12.next = 3;\n            return createSourceFileInRepo(github, userName, repoName, MASTER, 'script.js', project.sources.javascript);\n\n          case 3:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _createJsFile.apply(this, arguments);\n}\n\nfunction createPreviewFile(_x35, _x36, _x37, _x38) {\n  return _createPreviewFile.apply(this, arguments);\n}\n\nfunction _createPreviewFile() {\n  _createPreviewFile = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee13(github, project, userName, repoName) {\n    var preview;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return compileProject(project);\n\n          case 2:\n            preview = _context13.sent;\n            _context13.next = 5;\n            return createSourceFileInRepo(github, userName, repoName, GH_PAGES, 'index.html', preview.source);\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _createPreviewFile.apply(this, arguments);\n}\n\nfunction createBranch(_x39, _x40, _x41, _x42, _x43) {\n  return _createBranch.apply(this, arguments);\n}\n\nfunction _createBranch() {\n  _createBranch = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee14(github, userName, repoName, oldBranch, newBranch) {\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return performWithRetryNetworkErrors(function () {\n              return github.getRepo(userName, repoName).createBranch(oldBranch, newBranch);\n            });\n\n          case 2:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _createBranch.apply(this, arguments);\n}\n\nfunction updateRepoDescription(_x44, _x45, _x46) {\n  return _updateRepoDescription.apply(this, arguments);\n}\n\nfunction _updateRepoDescription() {\n  _updateRepoDescription = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee15(github, userName, repoName) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            url = \"https://\".concat(userName, \".github.io/\").concat(repoName);\n            _context15.next = 3;\n            return performWithRetryNetworkErrors(function () {\n              return github.getRepo(userName, repoName).updateRepository({\n                name: repoName,\n                description: url,\n                homepage: url\n              });\n            });\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _updateRepoDescription.apply(this, arguments);\n}\n\nfunction createClient() {\n  return _createClient.apply(this, arguments);\n}\n\nfunction _createClient() {\n  _createClient = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee16() {\n    var token,\n        _ref4,\n        GitHub,\n        _args16 = arguments;\n\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            token = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : null;\n            _context16.next = 3;\n            return retryingFailedImports(function () {\n              return import(\n              /* webpackChunkName: \"mainAsync\" */\n              'github-api');\n            });\n\n          case 3:\n            _ref4 = _context16.sent;\n            GitHub = _ref4.default;\n\n            if (!isNull(token)) {\n              _context16.next = 7;\n              break;\n            }\n\n            return _context16.abrupt(\"return\", new GitHub({}));\n\n          case 7:\n            return _context16.abrupt(\"return\", new GitHub({\n              auth: 'oauth',\n              token: token\n            }));\n\n          case 8:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _createClient.apply(this, arguments);\n}",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/clients/github.js"],
    "names": [
      "isEmpty",
      "isNull",
      "trim",
      "retryingFailedImports",
      "performWithRetries",
      "compileProject",
      "ExtendableError",
      "COMMIT_MESSAGE",
      "MASTER",
      "GH_PAGES",
      "NETWORK_ERROR",
      "EmptyGistError",
      "normalizeTitle",
      "title",
      "titleWithoutPunctuationAndWhitespace",
      "replace",
      "getProfileForAuthenticatedUser",
      "accessToken",
      "createClient",
      "github",
      "getUser",
      "getProfile",
      "createOrUpdateRepoFromProject",
      "project",
      "repoAlreadyExists",
      "Boolean",
      "externalLocations",
      "githubRepoName",
      "updateRepoFromProject",
      "createRepoFromProject",
      "preview",
      "repoName",
      "duplicateNameFailureCount",
      "fullRepoName",
      "suffix",
      "createRepo",
      "name",
      "auto_init",
      "errorMessage",
      "shouldRetry",
      "includes",
      "data",
      "userName",
      "owner",
      "login",
      "performWithRetryNetworkErrors",
      "getRepo",
      "deleteFile",
      "createBranch",
      "createRepoFiles",
      "updateRepoDescription",
      "url",
      "html_url",
      "userData",
      "getDetails",
      "createHtmlFile",
      "createCssFile",
      "createJsFile",
      "createPreviewFile",
      "createGistFromProject",
      "gist",
      "buildGistFromProject",
      "files",
      "Promise",
      "reject",
      "getGist",
      "create",
      "response",
      "updateGistWithImportUrl",
      "loadGistFromId",
      "gistId",
      "read",
      "retries",
      "sources",
      "html",
      "content",
      "language",
      "css",
      "javascript",
      "instructions",
      "enabledLibraries",
      "length",
      "hiddenUIComponents",
      "createPopcodeJson",
      "description",
      "public",
      "gistData",
      "id",
      "uri",
      "document",
      "createElement",
      "setAttribute",
      "search",
      "href",
      "update",
      "json",
      "JSON",
      "stringify",
      "perform",
      "options",
      "createSourceFileInRepo",
      "branchName",
      "fileName",
      "source",
      "writeFile",
      "oldBranch",
      "newBranch",
      "updateRepository",
      "homepage",
      "token",
      "GitHub",
      "default",
      "auth"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import isEmpty from 'lodash-es/isEmpty';\nimport isNull from 'lodash-es/isNull';\nimport trim from 'lodash-es/trim';\n\nimport retryingFailedImports from '../util/retryingFailedImports';\nimport performWithRetries from '../util/performWithRetries';\nimport compileProject from '../util/compileProject';\nimport ExtendableError from '../util/ExtendableError';\n\nconst COMMIT_MESSAGE = 'Created using Popcode: https://popcode.org';\nconst MASTER = 'master';\nconst GH_PAGES = 'gh-pages';\nconst NETWORK_ERROR = 'Network Error';\n\nexport class EmptyGistError extends ExtendableError {}\n\nfunction normalizeTitle(title) {\n  const titleWithoutPunctuationAndWhitespace = title\n    .replace(/[^\\w\\s]|_/gu, '')\n    .replace(/\\W/gu, '-');\n\n  return titleWithoutPunctuationAndWhitespace;\n}\n\nexport async function getProfileForAuthenticatedUser(accessToken) {\n  const github = await createClient(accessToken);\n  return github.getUser().getProfile();\n}\n\nexport async function createOrUpdateRepoFromProject(project, accessToken) {\n  const repoAlreadyExists = Boolean(project.externalLocations.githubRepoName);\n  if (repoAlreadyExists) {\n    return updateRepoFromProject(project, accessToken);\n  }\n  return createRepoFromProject(project, accessToken);\n}\n\nasync function createRepoFromProject(project, accessToken) {\n  const github = await createClient(accessToken);\n  const preview = await compileProject(project);\n  const title = normalizeTitle(preview.title);\n\n  const repoName = `${title}`;\n  let duplicateNameFailureCount = 0;\n  let fullRepoName = '';\n  const {data} = await performWithRetries(\n    () => {\n      const suffix =\n        duplicateNameFailureCount === 0 ? '' : `-${duplicateNameFailureCount}`;\n      fullRepoName = `${repoName}${suffix}`;\n      return github.getUser().createRepo({\n        name: fullRepoName,\n        auto_init: true,\n      });\n    },\n    errorMessage => {\n      const shouldRetry =\n        errorMessage.includes('Unprocessable Entity') ||\n        errorMessage === NETWORK_ERROR;\n      if (errorMessage.includes('Unprocessable Entity')) {\n        duplicateNameFailureCount += 1;\n      }\n      return shouldRetry;\n    },\n    {},\n  );\n\n  const userName = data.owner.login;\n\n  await performWithRetryNetworkErrors(() =>\n    github.getRepo(userName, fullRepoName).deleteFile(MASTER, 'README.md'),\n  );\n\n  await createBranch(github, userName, fullRepoName, MASTER, GH_PAGES);\n\n  await createRepoFiles(github, project, userName, fullRepoName);\n\n  await updateRepoDescription(github, userName, fullRepoName);\n\n  return {\n    url: data.html_url,\n    name: fullRepoName,\n  };\n}\n\nasync function updateRepoFromProject(project, accessToken) {\n  const github = await createClient(accessToken);\n  const repoName = project.externalLocations.githubRepoName;\n\n  const {data: userData} = await performWithRetryNetworkErrors(() =>\n    github.getUser().getProfile(),\n  );\n\n  const userName = userData.login;\n\n  await createRepoFiles(github, project, userName, repoName);\n\n  const {data} = await performWithRetryNetworkErrors(() =>\n    github.getRepo(userName, repoName).getDetails(),\n  );\n\n  return {\n    url: data.html_url,\n    name: repoName,\n  };\n}\n\nasync function createRepoFiles(github, project, userName, repoName) {\n  await createHtmlFile(github, project, userName, repoName);\n\n  await createCssFile(github, project, userName, repoName);\n\n  await createJsFile(github, project, userName, repoName);\n\n  await createPreviewFile(github, project, userName, repoName);\n}\n\nexport async function createGistFromProject(project, accessToken) {\n  const github = await createClient(accessToken);\n\n  const gist = buildGistFromProject(project);\n  if (isEmpty(gist.files)) {\n    return Promise.reject(new EmptyGistError());\n  }\n\n  const response = await performWithRetryNetworkErrors(() =>\n    github.getGist().create(gist),\n  );\n\n  return updateGistWithImportUrl(github, response.data);\n}\n\nexport async function loadGistFromId(gistId) {\n  const github = await createClient();\n  const gist = github.getGist(gistId);\n  const response = await performWithRetryNetworkErrors(() => gist.read(), {\n    retries: 3,\n  });\n  return response.data;\n}\n\nfunction buildGistFromProject(project) {\n  const files = {};\n  if (trim(project.sources.html)) {\n    files['index.html'] = {\n      content: project.sources.html,\n      language: 'HTML',\n    };\n  }\n  if (trim(project.sources.css)) {\n    files['styles.css'] = {\n      content: project.sources.css,\n      language: 'CSS',\n    };\n  }\n  if (trim(project.sources.javascript)) {\n    files['script.js'] = {\n      content: project.sources.javascript,\n      language: 'JavaScript',\n    };\n  }\n  if (trim(project.instructions)) {\n    files['README.md'] = {\n      content: project.instructions,\n      language: 'Markdown',\n    };\n  }\n  if (project.enabledLibraries.length || project.hiddenUIComponents.length) {\n    files['popcode.json'] = {\n      content: createPopcodeJson(project),\n      language: 'JSON',\n    };\n  }\n\n  return {\n    description: 'Exported from Popcode.',\n    public: true,\n    files,\n  };\n}\n\nasync function updateGistWithImportUrl(github, gistData) {\n  const gist = github.getGist(gistData.id);\n  const uri = document.createElement('a');\n  uri.setAttribute('href', '/');\n  uri.search = `gist=${gistData.id}`;\n\n  const description = `${gistData.description} Click to import: ${uri.href}`;\n  const response = await performWithRetryNetworkErrors(() =>\n    gist.update({description}),\n  );\n  return response.data;\n}\n\nfunction createPopcodeJson(project) {\n  const json = {};\n  if (project.enabledLibraries.length) {\n    json.enabledLibraries = project.enabledLibraries;\n  }\n  if (project.hiddenUIComponents.length) {\n    json.hiddenUIComponents = project.hiddenUIComponents;\n  }\n  return JSON.stringify(json);\n}\n\nfunction performWithRetryNetworkErrors(perform, options = {}) {\n  return performWithRetries(\n    perform,\n    errorMessage => errorMessage === NETWORK_ERROR,\n    options,\n  );\n}\n\nasync function createSourceFileInRepo(\n  github,\n  userName,\n  repoName,\n  branchName,\n  fileName,\n  source,\n) {\n  await performWithRetryNetworkErrors(() =>\n    github\n      .getRepo(userName, repoName)\n      .writeFile(branchName, fileName, source, COMMIT_MESSAGE, {}),\n  );\n}\n\nasync function createHtmlFile(github, project, userName, repoName) {\n  if (trim(project.sources.html)) {\n    await createSourceFileInRepo(\n      github,\n      userName,\n      repoName,\n      MASTER,\n      'index.html',\n      project.sources.html,\n    );\n  }\n}\n\nasync function createCssFile(github, project, userName, repoName) {\n  if (trim(project.sources.css)) {\n    await createSourceFileInRepo(\n      github,\n      userName,\n      repoName,\n      MASTER,\n      'styles.css',\n      project.sources.css,\n    );\n  }\n}\n\nasync function createJsFile(github, project, userName, repoName) {\n  if (trim(project.sources.javascript)) {\n    await createSourceFileInRepo(\n      github,\n      userName,\n      repoName,\n      MASTER,\n      'script.js',\n      project.sources.javascript,\n    );\n  }\n}\n\nasync function createPreviewFile(github, project, userName, repoName) {\n  const preview = await compileProject(project);\n  await createSourceFileInRepo(\n    github,\n    userName,\n    repoName,\n    GH_PAGES,\n    'index.html',\n    preview.source,\n  );\n}\n\nasync function createBranch(github, userName, repoName, oldBranch, newBranch) {\n  await performWithRetryNetworkErrors(() =>\n    github.getRepo(userName, repoName).createBranch(oldBranch, newBranch),\n  );\n}\n\nasync function updateRepoDescription(github, userName, repoName) {\n  const url = `https://${userName}.github.io/${repoName}`;\n  await performWithRetryNetworkErrors(() =>\n    github.getRepo(userName, repoName).updateRepository({\n      name: repoName,\n      description: url,\n      homepage: url,\n    }),\n  );\n}\n\nasync function createClient(token = null) {\n  const {default: GitHub} = await retryingFailedImports(() =>\n    import(\n      /* webpackChunkName: \"mainAsync\" */\n      'github-api'\n    ),\n  );\n\n  if (isNull(token)) {\n    return new GitHub({});\n  }\n  return new GitHub({auth: 'oauth', token});\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

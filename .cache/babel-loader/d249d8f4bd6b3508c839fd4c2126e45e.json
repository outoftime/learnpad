{
  "ast": null,
  "code": "import { connect } from 'react-redux';\nimport TopBar from '../components/TopBar';\nimport { getCurrentProjectExportedRepoName, getCurrentProjectKey, getCurrentProjectInstructions, getCurrentUser, getCurrentValidationState, getEnabledLibraries, getOpenTopBarMenu, getAllProjectKeys, getAllProjects, isArchivedViewOpen, isEditingInstructions, isExperimental, isGapiReady, isGistExportInProgress, isRepoExportInProgress, isClassroomExportInProgress, isSaveIndicatorShown, isSnapshotInProgress, isTextSizeLarge, isUserAnonymous, isUserAuthenticatedWithGithub, isUserAuthenticatedWithGoogle, isUserAuthenticated, isUserTyping } from '../selectors';\nimport { changeCurrentProject, closeTopBarMenu, createProject, createSnapshot, exportProject, linkGithubIdentity, unlinkGithubIdentity, openAssignmentCreator, startEditingInstructions, toggleEditorTextSize, toggleLibrary, toggleTopBarMenu, toggleArchivedView, logIn, logOut } from '../actions';\n\nfunction mapStateToProps(state) {\n  return {\n    currentProjectKey: getCurrentProjectKey(state),\n    currentUser: getCurrentUser(state),\n    enabledLibraries: getEnabledLibraries(state),\n    hasInstructions: Boolean(getCurrentProjectInstructions(state)),\n    hasExportedRepo: Boolean(getCurrentProjectExportedRepoName(state)),\n    shouldShowArchivedProjects: isArchivedViewOpen(state),\n    isEditingInstructions: isEditingInstructions(state),\n    isExperimental: isExperimental(state),\n    isGapiReady: isGapiReady(state),\n    isGistExportInProgress: isGistExportInProgress(state),\n    isRepoExportInProgress: isRepoExportInProgress(state),\n    isClassroomExportInProgress: isClassroomExportInProgress(state),\n    shouldShowSavedIndicator: isSaveIndicatorShown(state),\n    isSnapshotInProgress: isSnapshotInProgress(state),\n    isTextSizeLarge: isTextSizeLarge(state),\n    isUserAnonymous: isUserAnonymous(state),\n    isUserAuthenticated: isUserAuthenticated(state),\n    isUserAuthenticatedWithGithub: isUserAuthenticatedWithGithub(state),\n    isUserAuthenticatedWithGoogle: isUserAuthenticatedWithGoogle(state),\n    isUserTyping: isUserTyping(state),\n    openMenu: getOpenTopBarMenu(state),\n    projectKeys: getAllProjectKeys(state),\n    projects: getAllProjects(state),\n    validationState: getCurrentValidationState(state)\n  };\n}\n\nfunction exportRepo(dispatch) {\n  dispatch(exportProject('repo'));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onChangeCurrentProject: function onChangeCurrentProject(projectKey) {\n      dispatch(changeCurrentProject(projectKey));\n    },\n    onClickMenu: function onClickMenu(menuKey) {\n      dispatch(toggleTopBarMenu(menuKey));\n    },\n    onCloseMenu: function onCloseMenu(menuKey) {\n      dispatch(closeTopBarMenu(menuKey));\n    },\n    onCreateNewProject: function onCreateNewProject() {\n      dispatch(createProject());\n    },\n    onCreateSnapshot: function onCreateSnapshot() {\n      dispatch(createSnapshot());\n    },\n    onExportGist: function onExportGist() {\n      dispatch(exportProject('gist'));\n    },\n    onExportRepo: function onExportRepo() {\n      exportRepo(dispatch);\n    },\n    onUpdateRepo: function onUpdateRepo() {\n      exportRepo(dispatch);\n    },\n    onExportToClassroom: function onExportToClassroom() {\n      dispatch(exportProject('classroom'));\n    },\n    onToggleLibrary: function onToggleLibrary(projectKey, libraryKey) {\n      dispatch(toggleLibrary(projectKey, libraryKey));\n    },\n    onLinkGitHub: function onLinkGitHub() {\n      dispatch(linkGithubIdentity());\n    },\n    onLogOut: function onLogOut() {\n      dispatch(logOut());\n    },\n    onOpenAssignmentCreator: function onOpenAssignmentCreator() {\n      dispatch(openAssignmentCreator());\n    },\n    onStartEditingInstructions: function onStartEditingInstructions(projectKey) {\n      dispatch(startEditingInstructions(projectKey));\n    },\n    onStartGithubLogIn: function onStartGithubLogIn() {\n      dispatch(logIn('github'));\n    },\n    onStartGoogleLogIn: function onStartGoogleLogIn() {\n      dispatch(logIn('google'));\n    },\n    onUnlinkGitHub: function onUnlinkGitHub() {\n      dispatch(unlinkGithubIdentity());\n    },\n    onToggleTextSize: function onToggleTextSize() {\n      dispatch(toggleEditorTextSize());\n    },\n    onToggleViewArchived: function onToggleViewArchived() {\n      dispatch(toggleArchivedView());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/containers/TopBar.js"],
    "names": [
      "connect",
      "TopBar",
      "getCurrentProjectExportedRepoName",
      "getCurrentProjectKey",
      "getCurrentProjectInstructions",
      "getCurrentUser",
      "getCurrentValidationState",
      "getEnabledLibraries",
      "getOpenTopBarMenu",
      "getAllProjectKeys",
      "getAllProjects",
      "isArchivedViewOpen",
      "isEditingInstructions",
      "isExperimental",
      "isGapiReady",
      "isGistExportInProgress",
      "isRepoExportInProgress",
      "isClassroomExportInProgress",
      "isSaveIndicatorShown",
      "isSnapshotInProgress",
      "isTextSizeLarge",
      "isUserAnonymous",
      "isUserAuthenticatedWithGithub",
      "isUserAuthenticatedWithGoogle",
      "isUserAuthenticated",
      "isUserTyping",
      "changeCurrentProject",
      "closeTopBarMenu",
      "createProject",
      "createSnapshot",
      "exportProject",
      "linkGithubIdentity",
      "unlinkGithubIdentity",
      "openAssignmentCreator",
      "startEditingInstructions",
      "toggleEditorTextSize",
      "toggleLibrary",
      "toggleTopBarMenu",
      "toggleArchivedView",
      "logIn",
      "logOut",
      "mapStateToProps",
      "state",
      "currentProjectKey",
      "currentUser",
      "enabledLibraries",
      "hasInstructions",
      "Boolean",
      "hasExportedRepo",
      "shouldShowArchivedProjects",
      "shouldShowSavedIndicator",
      "openMenu",
      "projectKeys",
      "projects",
      "validationState",
      "exportRepo",
      "dispatch",
      "mapDispatchToProps",
      "onChangeCurrentProject",
      "projectKey",
      "onClickMenu",
      "menuKey",
      "onCloseMenu",
      "onCreateNewProject",
      "onCreateSnapshot",
      "onExportGist",
      "onExportRepo",
      "onUpdateRepo",
      "onExportToClassroom",
      "onToggleLibrary",
      "libraryKey",
      "onLinkGitHub",
      "onLogOut",
      "onOpenAssignmentCreator",
      "onStartEditingInstructions",
      "onStartGithubLogIn",
      "onStartGoogleLogIn",
      "onUnlinkGitHub",
      "onToggleTextSize",
      "onToggleViewArchived"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import {connect} from 'react-redux';\n\nimport TopBar from '../components/TopBar';\nimport {\n  getCurrentProjectExportedRepoName,\n  getCurrentProjectKey,\n  getCurrentProjectInstructions,\n  getCurrentUser,\n  getCurrentValidationState,\n  getEnabledLibraries,\n  getOpenTopBarMenu,\n  getAllProjectKeys,\n  getAllProjects,\n  isArchivedViewOpen,\n  isEditingInstructions,\n  isExperimental,\n  isGapiReady,\n  isGistExportInProgress,\n  isRepoExportInProgress,\n  isClassroomExportInProgress,\n  isSaveIndicatorShown,\n  isSnapshotInProgress,\n  isTextSizeLarge,\n  isUserAnonymous,\n  isUserAuthenticatedWithGithub,\n  isUserAuthenticatedWithGoogle,\n  isUserAuthenticated,\n  isUserTyping,\n} from '../selectors';\n\nimport {\n  changeCurrentProject,\n  closeTopBarMenu,\n  createProject,\n  createSnapshot,\n  exportProject,\n  linkGithubIdentity,\n  unlinkGithubIdentity,\n  openAssignmentCreator,\n  startEditingInstructions,\n  toggleEditorTextSize,\n  toggleLibrary,\n  toggleTopBarMenu,\n  toggleArchivedView,\n  logIn,\n  logOut,\n} from '../actions';\n\nfunction mapStateToProps(state) {\n  return {\n    currentProjectKey: getCurrentProjectKey(state),\n    currentUser: getCurrentUser(state),\n    enabledLibraries: getEnabledLibraries(state),\n    hasInstructions: Boolean(getCurrentProjectInstructions(state)),\n    hasExportedRepo: Boolean(getCurrentProjectExportedRepoName(state)),\n    shouldShowArchivedProjects: isArchivedViewOpen(state),\n    isEditingInstructions: isEditingInstructions(state),\n    isExperimental: isExperimental(state),\n    isGapiReady: isGapiReady(state),\n    isGistExportInProgress: isGistExportInProgress(state),\n    isRepoExportInProgress: isRepoExportInProgress(state),\n    isClassroomExportInProgress: isClassroomExportInProgress(state),\n    shouldShowSavedIndicator: isSaveIndicatorShown(state),\n    isSnapshotInProgress: isSnapshotInProgress(state),\n    isTextSizeLarge: isTextSizeLarge(state),\n    isUserAnonymous: isUserAnonymous(state),\n    isUserAuthenticated: isUserAuthenticated(state),\n    isUserAuthenticatedWithGithub: isUserAuthenticatedWithGithub(state),\n    isUserAuthenticatedWithGoogle: isUserAuthenticatedWithGoogle(state),\n    isUserTyping: isUserTyping(state),\n    openMenu: getOpenTopBarMenu(state),\n    projectKeys: getAllProjectKeys(state),\n    projects: getAllProjects(state),\n    validationState: getCurrentValidationState(state),\n  };\n}\n\nfunction exportRepo(dispatch) {\n  dispatch(exportProject('repo'));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onChangeCurrentProject(projectKey) {\n      dispatch(changeCurrentProject(projectKey));\n    },\n\n    onClickMenu(menuKey) {\n      dispatch(toggleTopBarMenu(menuKey));\n    },\n\n    onCloseMenu(menuKey) {\n      dispatch(closeTopBarMenu(menuKey));\n    },\n\n    onCreateNewProject() {\n      dispatch(createProject());\n    },\n\n    onCreateSnapshot() {\n      dispatch(createSnapshot());\n    },\n\n    onExportGist() {\n      dispatch(exportProject('gist'));\n    },\n\n    onExportRepo() {\n      exportRepo(dispatch);\n    },\n\n    onUpdateRepo() {\n      exportRepo(dispatch);\n    },\n\n    onExportToClassroom() {\n      dispatch(exportProject('classroom'));\n    },\n\n    onToggleLibrary(projectKey, libraryKey) {\n      dispatch(toggleLibrary(projectKey, libraryKey));\n    },\n\n    onLinkGitHub() {\n      dispatch(linkGithubIdentity());\n    },\n\n    onLogOut() {\n      dispatch(logOut());\n    },\n\n    onOpenAssignmentCreator() {\n      dispatch(openAssignmentCreator());\n    },\n\n    onStartEditingInstructions(projectKey) {\n      dispatch(startEditingInstructions(projectKey));\n    },\n\n    onStartGithubLogIn() {\n      dispatch(logIn('github'));\n    },\n\n    onStartGoogleLogIn() {\n      dispatch(logIn('google'));\n    },\n\n    onUnlinkGitHub() {\n      dispatch(unlinkGithubIdentity());\n    },\n\n    onToggleTextSize() {\n      dispatch(toggleEditorTextSize());\n    },\n\n    onToggleViewArchived() {\n      dispatch(toggleArchivedView());\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TopBar);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

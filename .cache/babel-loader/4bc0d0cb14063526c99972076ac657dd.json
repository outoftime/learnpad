{
  "ast": null,
  "code": "import { handleActions } from 'redux-actions';\nimport { List, Map } from 'immutable';\nimport reduce from 'lodash-es/reduce';\nvar defaultState = new Map();\nexport default handleActions({\n  UPDATE_RESIZABLE_FLEX: function UPDATE_RESIZABLE_FLEX(state, _ref) {\n    var _ref$payload = _ref.payload,\n        name = _ref$payload.name,\n        updates = _ref$payload.updates;\n    return state.update(name, new List(), function (flexStateIn) {\n      return reduce(updates, function (flexState, _ref2) {\n        var index = _ref2.index,\n            flexGrow = _ref2.flexGrow;\n        return flexState.set(index, flexGrow);\n      }, flexStateIn);\n    });\n  }\n}, defaultState);",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/reducers/resizableFlex.js"
    ],
    "names": [
      "handleActions",
      "List",
      "Map",
      "reduce",
      "defaultState",
      "UPDATE_RESIZABLE_FLEX",
      "state",
      "payload",
      "name",
      "updates",
      "update",
      "flexStateIn",
      "flexState",
      "index",
      "flexGrow",
      "set"
    ],
    "mappings": "AAAA,SAAQA,aAAR,QAA4B,eAA5B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,IAAMC,YAAY,GAAG,IAAIF,GAAJ,EAArB;AAEA,eAAeF,aAAa,CAC1B;AACEK,EAAAA,qBAAqB,EAAE,+BAACC,KAAD;AAAA,4BAASC,OAAT;AAAA,QAAmBC,IAAnB,gBAAmBA,IAAnB;AAAA,QAAyBC,OAAzB,gBAAyBA,OAAzB;AAAA,WACrBH,KAAK,CAACI,MAAN,CAAaF,IAAb,EAAmB,IAAIP,IAAJ,EAAnB,EAA+B,UAAAU,WAAW;AAAA,aACxCR,MAAM,CACJM,OADI,EAEJ,UAACG,SAAD;AAAA,YAAaC,KAAb,SAAaA,KAAb;AAAA,YAAoBC,QAApB,SAAoBA,QAApB;AAAA,eAAkCF,SAAS,CAACG,GAAV,CAAcF,KAAd,EAAqBC,QAArB,CAAlC;AAAA,OAFI,EAGJH,WAHI,CADkC;AAAA,KAA1C,CADqB;AAAA;AADzB,CAD0B,EAW1BP,YAX0B,CAA5B",
    "sourcesContent": [
      "import {handleActions} from 'redux-actions';\nimport {List, Map} from 'immutable';\nimport reduce from 'lodash-es/reduce';\n\nconst defaultState = new Map();\n\nexport default handleActions(\n  {\n    UPDATE_RESIZABLE_FLEX: (state, {payload: {name, updates}}) =>\n      state.update(name, new List(), flexStateIn =>\n        reduce(\n          updates,\n          (flexState, {index, flexGrow}) => flexState.set(index, flexGrow),\n          flexStateIn,\n        ),\n      ),\n  },\n  defaultState,\n);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

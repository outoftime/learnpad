{
  "ast": null,
  "code": "function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(handleInitialAuth),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(handleAuthChange),\n    _marked3 =\n/*#__PURE__*/\nregeneratorRuntime.mark(handleAuthError),\n    _marked4 =\n/*#__PURE__*/\nregeneratorRuntime.mark(reportUserCredentialMismatch),\n    _marked5 =\n/*#__PURE__*/\nregeneratorRuntime.mark(manageUserState);\n\nimport { all, call, fork, put, race, take } from 'redux-saga/effects';\nimport difference from 'lodash-es/difference';\nimport isEmpty from 'lodash-es/isEmpty';\nimport isError from 'lodash-es/isError';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport map from 'lodash-es/map';\nimport reject from 'lodash-es/reject';\nimport { bugsnagClient } from '../util/bugsnag';\nimport { getSessionUid, loadCredentialsForUser, saveUserCredential, signIn, signOut, startSessionHeartbeat } from '../clients/firebase';\nimport { makeLoginState } from '../channels';\nimport { notificationTriggered } from '../actions/ui';\nimport { userAuthenticated, userLoggedOut } from '../actions/user';\nexport function handleInitialAuth(user) {\n  var sessionUid, credentials;\n  return regeneratorRuntime.wrap(function handleInitialAuth$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!isNil(user)) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 3;\n          return put(userLoggedOut());\n\n        case 3:\n          return _context.abrupt(\"return\");\n\n        case 4:\n          _context.next = 6;\n          return call(getSessionUid);\n\n        case 6:\n          sessionUid = _context.sent;\n\n          if (!(user.uid !== sessionUid)) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 10;\n          return call(signOut);\n\n        case 10:\n          return _context.abrupt(\"return\");\n\n        case 11:\n          _context.next = 13;\n          return call(loadCredentialsForUser, user.uid);\n\n        case 13:\n          credentials = _context.sent;\n\n          if (!isEmpty(credentials)) {\n            _context.next = 18;\n            break;\n          }\n\n          _context.next = 17;\n          return call(signOut);\n\n        case 17:\n          return _context.abrupt(\"return\");\n\n        case 18:\n          return _context.delegateYield(reportUserCredentialMismatch(user, credentials), \"t0\", 19);\n\n        case 19:\n          _context.next = 21;\n          return put(userAuthenticated(user, credentials));\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function handleAuthChange(user) {\n  var _ref,\n      newCredential,\n      credentials,\n      storedCredentials,\n      _args2 = arguments;\n\n  return regeneratorRuntime.wrap(function handleAuthChange$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, newCredential = _ref.newCredential;\n\n          if (!isNil(user)) {\n            _context2.next = 5;\n            break;\n          }\n\n          _context2.next = 4;\n          return put(userLoggedOut());\n\n        case 4:\n          return _context2.abrupt(\"return\");\n\n        case 5:\n          if (isNil(newCredential)) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 8;\n          return fork(saveUserCredential, {\n            user: user,\n            credential: newCredential\n          });\n\n        case 8:\n          _context2.next = 10;\n          return call(loadCredentialsForUser, user.uid);\n\n        case 10:\n          storedCredentials = _context2.sent;\n\n          if (isNil(newCredential)) {\n            credentials = storedCredentials;\n          } else {\n            credentials = reject(storedCredentials, {\n              providerId: newCredential.providerId\n            });\n            credentials.push(newCredential);\n          }\n\n          return _context2.delegateYield(reportUserCredentialMismatch(user, credentials), \"t0\", 13);\n\n        case 13:\n          _context2.next = 15;\n          return put(userAuthenticated(user, credentials));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function handleAuthError(e) {\n  return regeneratorRuntime.wrap(function handleAuthError$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!('message' in e && e.message === 'popup_closed_by_user')) {\n            _context3.next = 4;\n            break;\n          }\n\n          _context3.next = 3;\n          return put(notificationTriggered('user-cancelled-auth'));\n\n        case 3:\n          return _context3.abrupt(\"return\");\n\n        case 4:\n          _context3.t0 = e.code;\n          _context3.next = _context3.t0 === 'auth/popup-closed-by-user' ? 7 : _context3.t0 === 'auth/network-request-failed' ? 10 : _context3.t0 === 'auth/cancelled-popup-request' ? 13 : _context3.t0 === 'auth/web-storage-unsupported' ? 14 : _context3.t0 === 'auth/operation-not-supported-in-this-environment' ? 14 : _context3.t0 === 'access_denied' ? 17 : _context3.t0 === 'auth/internal-error' ? 17 : 20;\n          break;\n\n        case 7:\n          _context3.next = 9;\n          return put(notificationTriggered('user-cancelled-auth'));\n\n        case 9:\n          return _context3.abrupt(\"break\", 31);\n\n        case 10:\n          _context3.next = 12;\n          return put(notificationTriggered('auth-network-error'));\n\n        case 12:\n          return _context3.abrupt(\"break\", 31);\n\n        case 13:\n          return _context3.abrupt(\"break\", 31);\n\n        case 14:\n          _context3.next = 16;\n          return put(notificationTriggered('auth-third-party-cookies-disabled'));\n\n        case 16:\n          return _context3.abrupt(\"break\", 31);\n\n        case 17:\n          _context3.next = 19;\n          return put(notificationTriggered('auth-error'));\n\n        case 19:\n          return _context3.abrupt(\"break\", 31);\n\n        case 20:\n          _context3.next = 22;\n          return put(notificationTriggered('auth-error'));\n\n        case 22:\n          if (!isError(e)) {\n            _context3.next = 27;\n            break;\n          }\n\n          _context3.next = 25;\n          return call([bugsnagClient, 'notify'], e, {\n            metaData: {\n              code: e.code\n            }\n          });\n\n        case 25:\n          _context3.next = 30;\n          break;\n\n        case 27:\n          if (!isString(e)) {\n            _context3.next = 30;\n            break;\n          }\n\n          _context3.next = 30;\n          return call([bugsnagClient, 'notify'], new Error(e));\n\n        case 30:\n          return _context3.abrupt(\"break\", 31);\n\n        case 31:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction reportUserCredentialMismatch(user, credentials) {\n  var userProviders, credentialProviders, missingUserProviders, missingCredentialProviders, e, _e;\n\n  return regeneratorRuntime.wrap(function reportUserCredentialMismatch$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          userProviders = map(user.providerData, 'providerId');\n          credentialProviders = map(credentials, 'providerId');\n          missingUserProviders = difference(userProviders, credentialProviders);\n          missingCredentialProviders = difference(credentialProviders, userProviders);\n\n          if (isEmpty(missingUserProviders)) {\n            _context4.next = 8;\n            break;\n          }\n\n          e = new Error(\"User \".concat(user.uid, \" has credentials for \") + \"\".concat(missingUserProviders.join(','), \" + but no linked account\"));\n          _context4.next = 8;\n          return call([bugsnagClient, 'notify'], e, {\n            metaData: {\n              user: user,\n              credentials: credentials\n            },\n            severity: 'warning'\n          });\n\n        case 8:\n          if (isEmpty(missingCredentialProviders)) {\n            _context4.next = 12;\n            break;\n          }\n\n          _e = new Error(\"User \".concat(user.uid, \" has linked accounts for \") + \"\".concat(missingCredentialProviders.join(','), \" + but no credentials\"));\n          _context4.next = 12;\n          return call([bugsnagClient, 'notify'], _e, {\n            metaData: {\n              user: user,\n              credentials: credentials\n            },\n            severity: 'warning'\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function manageUserState() {\n  var loginState,\n      _ref2,\n      initialUser,\n      _ref3,\n      loginStateChange,\n      logInAction,\n      _ref4,\n      _ref5,\n      _ref5$,\n      user,\n      credential,\n      _args5 = arguments;\n\n  return regeneratorRuntime.wrap(function manageUserState$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          loginState = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : makeLoginState();\n          _context5.next = 3;\n          return fork(startSessionHeartbeat);\n\n        case 3:\n          _context5.next = 5;\n          return take(loginState);\n\n        case 5:\n          _ref2 = _context5.sent;\n          initialUser = _ref2.user;\n          _context5.next = 9;\n          return call(handleInitialAuth, initialUser);\n\n        case 9:\n          if (!true) {\n            _context5.next = 38;\n            break;\n          }\n\n          _context5.next = 12;\n          return race({\n            logInAction: take('LOG_IN'),\n            loginStateChange: take(loginState)\n          });\n\n        case 12:\n          _ref3 = _context5.sent;\n          loginStateChange = _ref3.loginStateChange;\n          logInAction = _ref3.logInAction;\n\n          if (!isNil(logInAction)) {\n            _context5.next = 20;\n            break;\n          }\n\n          _context5.next = 18;\n          return call(handleAuthChange, loginStateChange.user);\n\n        case 18:\n          _context5.next = 36;\n          break;\n\n        case 20:\n          _context5.prev = 20;\n          _context5.next = 23;\n          return all([call(signIn, logInAction.payload.provider), take(loginState)]);\n\n        case 23:\n          _ref4 = _context5.sent;\n          _ref5 = _slicedToArray(_ref4, 1);\n          _ref5$ = _ref5[0];\n          user = _ref5$.user;\n          credential = _ref5$.credential;\n          _context5.next = 30;\n          return call(handleAuthChange, user, {\n            newCredential: credential\n          });\n\n        case 30:\n          _context5.next = 36;\n          break;\n\n        case 32:\n          _context5.prev = 32;\n          _context5.t0 = _context5[\"catch\"](20);\n          _context5.next = 36;\n          return handleAuthError(_context5.t0);\n\n        case 36:\n          _context5.next = 9;\n          break;\n\n        case 38:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[20, 32]]);\n}",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/sagas/manageUserState.js"
    ],
    "names": [
      "handleInitialAuth",
      "handleAuthChange",
      "handleAuthError",
      "reportUserCredentialMismatch",
      "manageUserState",
      "all",
      "call",
      "fork",
      "put",
      "race",
      "take",
      "difference",
      "isEmpty",
      "isError",
      "isNil",
      "isString",
      "map",
      "reject",
      "bugsnagClient",
      "getSessionUid",
      "loadCredentialsForUser",
      "saveUserCredential",
      "signIn",
      "signOut",
      "startSessionHeartbeat",
      "makeLoginState",
      "notificationTriggered",
      "userAuthenticated",
      "userLoggedOut",
      "user",
      "sessionUid",
      "uid",
      "credentials",
      "newCredential",
      "credential",
      "storedCredentials",
      "providerId",
      "push",
      "e",
      "message",
      "code",
      "metaData",
      "Error",
      "userProviders",
      "providerData",
      "credentialProviders",
      "missingUserProviders",
      "missingCredentialProviders",
      "join",
      "severity",
      "loginState",
      "initialUser",
      "logInAction",
      "loginStateChange",
      "payload",
      "provider"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import {all, call, fork, put, race, take} from 'redux-saga/effects';\nimport difference from 'lodash-es/difference';\nimport isEmpty from 'lodash-es/isEmpty';\nimport isError from 'lodash-es/isError';\nimport isNil from 'lodash-es/isNil';\nimport isString from 'lodash-es/isString';\nimport map from 'lodash-es/map';\nimport reject from 'lodash-es/reject';\n\nimport {bugsnagClient} from '../util/bugsnag';\nimport {\n  getSessionUid,\n  loadCredentialsForUser,\n  saveUserCredential,\n  signIn,\n  signOut,\n  startSessionHeartbeat,\n} from '../clients/firebase';\nimport {makeLoginState} from '../channels';\nimport {notificationTriggered} from '../actions/ui';\nimport {userAuthenticated, userLoggedOut} from '../actions/user';\n\nexport function* handleInitialAuth(user) {\n  if (isNil(user)) {\n    yield put(userLoggedOut());\n    return;\n  }\n\n  const sessionUid = yield call(getSessionUid);\n  if (user.uid !== sessionUid) {\n    yield call(signOut);\n    return;\n  }\n\n  const credentials = yield call(loadCredentialsForUser, user.uid);\n\n  if (isEmpty(credentials)) {\n    yield call(signOut);\n    return;\n  }\n\n  yield* reportUserCredentialMismatch(user, credentials);\n\n  yield put(userAuthenticated(user, credentials));\n}\n\nexport function* handleAuthChange(user, {newCredential} = {}) {\n  if (isNil(user)) {\n    yield put(userLoggedOut());\n    return;\n  }\n\n  if (!isNil(newCredential)) {\n    yield fork(saveUserCredential, {user, credential: newCredential});\n  }\n  let credentials;\n\n  const storedCredentials = yield call(loadCredentialsForUser, user.uid);\n  if (isNil(newCredential)) {\n    credentials = storedCredentials;\n  } else {\n    credentials = reject(storedCredentials, {\n      providerId: newCredential.providerId,\n    });\n    credentials.push(newCredential);\n  }\n\n  yield* reportUserCredentialMismatch(user, credentials);\n\n  yield put(userAuthenticated(user, credentials));\n}\nexport function* handleAuthError(e) {\n  if ('message' in e && e.message === 'popup_closed_by_user') {\n    yield put(notificationTriggered('user-cancelled-auth'));\n    return;\n  }\n\n  switch (e.code) {\n    case 'auth/popup-closed-by-user':\n      yield put(notificationTriggered('user-cancelled-auth'));\n      break;\n\n    case 'auth/network-request-failed':\n      yield put(notificationTriggered('auth-network-error'));\n      break;\n\n    case 'auth/cancelled-popup-request':\n      break;\n\n    case 'auth/web-storage-unsupported':\n    case 'auth/operation-not-supported-in-this-environment':\n      yield put(notificationTriggered('auth-third-party-cookies-disabled'));\n      break;\n\n    case 'access_denied':\n    case 'auth/internal-error':\n      yield put(notificationTriggered('auth-error'));\n      break;\n\n    default:\n      yield put(notificationTriggered('auth-error'));\n\n      if (isError(e)) {\n        yield call([bugsnagClient, 'notify'], e, {metaData: {code: e.code}});\n      } else if (isString(e)) {\n        yield call([bugsnagClient, 'notify'], new Error(e));\n      }\n      break;\n  }\n}\n\nfunction* reportUserCredentialMismatch(user, credentials) {\n  const userProviders = map(user.providerData, 'providerId');\n  const credentialProviders = map(credentials, 'providerId');\n\n  const missingUserProviders = difference(userProviders, credentialProviders);\n  const missingCredentialProviders = difference(\n    credentialProviders,\n    userProviders,\n  );\n\n  if (!isEmpty(missingUserProviders)) {\n    const e = new Error(\n      `User ${user.uid} has credentials for ` +\n        `${missingUserProviders.join(',')} + but no linked account`,\n    );\n    yield call([bugsnagClient, 'notify'], e, {\n      metaData: {user, credentials},\n      severity: 'warning',\n    });\n  }\n\n  if (!isEmpty(missingCredentialProviders)) {\n    const e = new Error(\n      `User ${user.uid} has linked accounts for ` +\n        `${missingCredentialProviders.join(',')} + but no credentials`,\n    );\n    yield call([bugsnagClient, 'notify'], e, {\n      metaData: {user, credentials},\n      severity: 'warning',\n    });\n  }\n}\n\nexport default function* manageUserState(loginState = makeLoginState()) {\n  yield fork(startSessionHeartbeat);\n\n  const {user: initialUser} = yield take(loginState);\n  yield call(handleInitialAuth, initialUser);\n\n  while (true) {\n    const {loginStateChange, logInAction} = yield race({\n      logInAction: take('LOG_IN'),\n      loginStateChange: take(loginState),\n    });\n\n    if (isNil(logInAction)) {\n      yield call(handleAuthChange, loginStateChange.user);\n    } else {\n      try {\n        const [{user, credential}] = yield all([\n          call(signIn, logInAction.payload.provider),\n          take(loginState),\n        ]);\n        yield call(handleAuthChange, user, {newCredential: credential});\n      } catch (e) {\n        yield handleAuthError(e);\n      }\n    }\n  }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

{
  "ast": null,
  "code": "exports.WEEKDAY_OFFSET = {\n  'sunday': 0,\n  'sun': 0,\n  'monday': 1,\n  'mon': 1,\n  'tuesday': 2,\n  'tue': 2,\n  'wednesday': 3,\n  'wed': 3,\n  'thursday': 4,\n  'thur': 4,\n  'thu': 4,\n  'friday': 5,\n  'fri': 5,\n  'saturday': 6,\n  'sat': 6\n};\nexports.MONTH_OFFSET = {\n  'january': 1,\n  'jan': 1,\n  'jan.': 1,\n  'february': 2,\n  'feb': 2,\n  'feb.': 2,\n  'march': 3,\n  'mar': 3,\n  'mar.': 3,\n  'april': 4,\n  'apr': 4,\n  'apr.': 4,\n  'may': 5,\n  'june': 6,\n  'jun': 6,\n  'jun.': 6,\n  'july': 7,\n  'jul': 7,\n  'jul.': 7,\n  'august': 8,\n  'aug': 8,\n  'aug.': 8,\n  'september': 9,\n  'sep': 9,\n  'sep.': 9,\n  'sept': 9,\n  'sept.': 9,\n  'october': 10,\n  'oct': 10,\n  'oct.': 10,\n  'november': 11,\n  'nov': 11,\n  'nov.': 11,\n  'december': 12,\n  'dec': 12,\n  'dec.': 12\n};\nexports.MONTH_PATTERN = '(?:' + Object.keys(exports.MONTH_OFFSET).join('|').replace(/\\./g, '\\\\.') + ')';\nexports.INTEGER_WORDS = {\n  'one': 1,\n  'two': 2,\n  'three': 3,\n  'four': 4,\n  'five': 5,\n  'six': 6,\n  'seven': 7,\n  'eight': 8,\n  'nine': 9,\n  'ten': 10,\n  'eleven': 11,\n  'twelve': 12\n};\nexports.INTEGER_WORDS_PATTERN = '(?:' + Object.keys(exports.INTEGER_WORDS).join('|') + ')';\nexports.ORDINAL_WORDS = {\n  'first': 1,\n  'second': 2,\n  'third': 3,\n  'fourth': 4,\n  'fifth': 5,\n  'sixth': 6,\n  'seventh': 7,\n  'eighth': 8,\n  'ninth': 9,\n  'tenth': 10,\n  'eleventh': 11,\n  'twelfth': 12,\n  'thirteenth': 13,\n  'fourteenth': 14,\n  'fifteenth': 15,\n  'sixteenth': 16,\n  'seventeenth': 17,\n  'eighteenth': 18,\n  'nineteenth': 19,\n  'twentieth': 20,\n  'twenty first': 21,\n  'twenty second': 22,\n  'twenty third': 23,\n  'twenty fourth': 24,\n  'twenty fifth': 25,\n  'twenty sixth': 26,\n  'twenty seventh': 27,\n  'twenty eighth': 28,\n  'twenty ninth': 29,\n  'thirtieth': 30,\n  'thirty first': 31\n};\nexports.ORDINAL_WORDS_PATTERN = '(?:' + Object.keys(exports.ORDINAL_WORDS).join('|').replace(/ /g, '[ -]') + ')';\nvar TIME_UNIT = '(' + exports.INTEGER_WORDS_PATTERN + '|[0-9]+|[0-9]+\\.[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' + '(sec(?:onds?)?|min(?:ute)?s?|hours?|weeks?|days?|months?|years?)\\\\s*';\nvar TIME_UNIT_STRICT = '(?:[0-9]+|an?)\\\\s*' + '(?:seconds?|minutes?|hours?|days?)\\\\s*';\nvar PATTERN_TIME_UNIT = new RegExp(TIME_UNIT, 'i');\nexports.TIME_UNIT_PATTERN = '(?:' + TIME_UNIT + ')+';\nexports.TIME_UNIT_STRICT_PATTERN = '(?:' + TIME_UNIT_STRICT + ')+';\n\nexports.extractDateTimeUnitFragments = function (timeunitText) {\n  var fragments = {};\n  var remainingText = timeunitText;\n  var match = PATTERN_TIME_UNIT.exec(remainingText);\n\n  while (match) {\n    collectDateTimeFragment(match, fragments);\n    remainingText = remainingText.substring(match[0].length);\n    match = PATTERN_TIME_UNIT.exec(remainingText);\n  }\n\n  return fragments;\n};\n\nfunction collectDateTimeFragment(match, fragments) {\n  var num = match[1].toLowerCase();\n\n  if (exports.INTEGER_WORDS[num] !== undefined) {\n    num = exports.INTEGER_WORDS[num];\n  } else if (num === 'a' || num === 'an') {\n    num = 1;\n  } else if (num.match(/few/)) {\n    num = 3;\n  } else if (num.match(/half/)) {\n    num = 0.5;\n  } else {\n    num = parseFloat(num);\n  }\n\n  if (match[2].match(/hour/i)) {\n    fragments['hour'] = num;\n  } else if (match[2].match(/min/i)) {\n    fragments['minute'] = num;\n  } else if (match[2].match(/sec/i)) {\n    fragments['second'] = num;\n  } else if (match[2].match(/week/i)) {\n    fragments['week'] = num;\n  } else if (match[2].match(/day/i)) {\n    fragments['d'] = num;\n  } else if (match[2].match(/month/i)) {\n    fragments['month'] = num;\n  } else if (match[2].match(/year/i)) {\n    fragments['year'] = num;\n  }\n\n  return fragments;\n}",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/utils/EN.js"
    ],
    "names": [
      "exports",
      "WEEKDAY_OFFSET",
      "MONTH_OFFSET",
      "MONTH_PATTERN",
      "Object",
      "keys",
      "join",
      "replace",
      "INTEGER_WORDS",
      "INTEGER_WORDS_PATTERN",
      "ORDINAL_WORDS",
      "ORDINAL_WORDS_PATTERN",
      "TIME_UNIT",
      "TIME_UNIT_STRICT",
      "PATTERN_TIME_UNIT",
      "RegExp",
      "TIME_UNIT_PATTERN",
      "TIME_UNIT_STRICT_PATTERN",
      "extractDateTimeUnitFragments",
      "timeunitText",
      "fragments",
      "remainingText",
      "match",
      "exec",
      "collectDateTimeFragment",
      "substring",
      "length",
      "num",
      "toLowerCase",
      "undefined",
      "parseFloat"
    ],
    "mappings": "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",
    "sourcesContent": [
      "exports.WEEKDAY_OFFSET = { \n    'sunday': 0, \n    'sun': 0, \n    'monday': 1, \n    'mon': 1,\n    'tuesday': 2, \n    'tue':2, \n    'wednesday': 3, \n    'wed': 3, \n    'thursday': 4, \n    'thur': 4, \n    'thu': 4,\n    'friday': 5, \n    'fri': 5,\n    'saturday': 6, \n    'sat': 6\n};\n    \nexports.MONTH_OFFSET = { \n    'january': 1,\n    'jan': 1,\n    'jan.': 1,\n    'february': 2,\n    'feb': 2,\n    'feb.': 2,\n    'march': 3,\n    'mar': 3,\n    'mar.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'may': 5,\n    'june': 6,\n    'jun': 6,\n    'jun.': 6,\n    'july': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'october': 10,\n    'oct': 10,\n    'oct.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexports.MONTH_PATTERN = '(?:' \n    + Object.keys(exports.MONTH_OFFSET).join('|').replace(/\\./g, '\\\\.')\n    + ')';\n\nexports.INTEGER_WORDS = {\n    'one' : 1,\n    'two' : 2,\n    'three' : 3,\n    'four' : 4,\n    'five' : 5,\n    'six' : 6,\n    'seven' : 7,\n    'eight' : 8,\n    'nine' : 9,\n    'ten' : 10,\n    'eleven' : 11,\n    'twelve' : 12\n};\nexports.INTEGER_WORDS_PATTERN = '(?:' \n    + Object.keys(exports.INTEGER_WORDS).join('|') \n    +')';\n\nexports.ORDINAL_WORDS = {\n    'first' : 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9,\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19,\n    'twentieth': 20,\n    'twenty first': 21,\n    'twenty second': 22,\n    'twenty third': 23,\n    'twenty fourth': 24,\n    'twenty fifth': 25,\n    'twenty sixth': 26,\n    'twenty seventh': 27,\n    'twenty eighth': 28,\n    'twenty ninth': 29,\n    'thirtieth': 30,\n    'thirty first': 31\n};\nexports.ORDINAL_WORDS_PATTERN = '(?:' \n    + Object.keys(exports.ORDINAL_WORDS).join('|').replace(/ /g, '[ -]') \n    + ')';\n\nvar TIME_UNIT = \n    '(' + exports.INTEGER_WORDS_PATTERN + '|[0-9]+|[0-9]+\\.[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(sec(?:onds?)?|min(?:ute)?s?|hours?|weeks?|days?|months?|years?)\\\\s*';\n\nvar TIME_UNIT_STRICT = \n    '(?:[0-9]+|an?)\\\\s*' +\n    '(?:seconds?|minutes?|hours?|days?)\\\\s*';\n\nvar PATTERN_TIME_UNIT = new RegExp(TIME_UNIT, 'i');\n\nexports.TIME_UNIT_PATTERN = '(?:' + TIME_UNIT + ')+';\nexports.TIME_UNIT_STRICT_PATTERN = '(?:' + TIME_UNIT_STRICT + ')+';\n\nexports.extractDateTimeUnitFragments = function (timeunitText) {\n    var fragments = {};\n    var remainingText = timeunitText;\n    var match = PATTERN_TIME_UNIT.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(match, fragments);\n        remainingText = remainingText.substring(match[0].length);\n        match = PATTERN_TIME_UNIT.exec(remainingText);\n    }\n    return fragments;\n};\n\nfunction collectDateTimeFragment(match, fragments) {\n    var num = match[1].toLowerCase() ;\n    if (exports.INTEGER_WORDS[num] !== undefined) {\n        num = exports.INTEGER_WORDS[num];\n    } else if(num === 'a' || num === 'an'){\n        num = 1;\n    } else if (num.match(/few/)) {\n        num = 3;\n    } else if (num.match(/half/)) {\n        num = 0.5;\n    } else {\n        num = parseFloat(num);\n    }\n\n    if (match[2].match(/hour/i)) {\n        fragments['hour'] = num;\n    } else if (match[2].match(/min/i)) {\n        fragments['minute'] = num;\n    } else if (match[2].match(/sec/i)) {\n        fragments['second'] = num;\n    } else if (match[2].match(/week/i)) {\n        fragments['week'] = num;\n    } else if (match[2].match(/day/i)) {\n        fragments['d'] = num;\n    } else if (match[2].match(/month/i)) {\n        fragments['month'] = num;\n    } else if (match[2].match(/year/i)) {\n        fragments['year'] = num;\n    }\n\n    return fragments;\n}"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

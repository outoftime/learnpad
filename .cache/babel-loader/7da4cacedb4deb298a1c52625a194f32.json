{
  "ast": null,
  "code": "/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function OverlapRemovalRefiner() {\n  Refiner.call(this);\n\n  this.refine = function (text, results, opt) {\n    if (results.length < 2) return results;\n    var filteredResults = [];\n    var prevResult = results[0];\n\n    for (var i = 1; i < results.length; i++) {\n      var result = results[i]; // If overlap, compare the length and discard the shorter one\n\n      if (result.index < prevResult.index + prevResult.text.length) {\n        if (result.text.length > prevResult.text.length) {\n          prevResult = result;\n        }\n      } else {\n        filteredResults.push(prevResult);\n        prevResult = result;\n      }\n    } // The last one\n\n\n    if (prevResult != null) {\n      filteredResults.push(prevResult);\n    }\n\n    return filteredResults;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/refiners/OverlapRemovalRefiner.js"
    ],
    "names": [
      "Refiner",
      "require",
      "exports",
      "OverlapRemovalRefiner",
      "call",
      "refine",
      "text",
      "results",
      "opt",
      "length",
      "filteredResults",
      "prevResult",
      "i",
      "result",
      "index",
      "push"
    ],
    "mappings": "AAAA;;;AAGA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,OAAnC;;AAEAE,OAAO,CAACF,OAAR,GAAkB,SAASG,qBAAT,GAAiC;AAClDH,EAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;;AAGA,OAAKC,MAAL,GAAc,UAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6B;AAEpC,QAAID,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB,OAAOF,OAAP;AAExB,QAAIG,eAAe,GAAG,EAAtB;AACA,QAAIC,UAAU,GAAGJ,OAAO,CAAC,CAAD,CAAxB;;AAEA,SAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,OAAO,CAACE,MAAxB,EAAgCG,CAAC,EAAjC,EAAoC;AAEhC,UAAIC,MAAM,GAAGN,OAAO,CAACK,CAAD,CAApB,CAFgC,CAIhC;;AACA,UAAIC,MAAM,CAACC,KAAP,GAAeH,UAAU,CAACG,KAAX,GAAmBH,UAAU,CAACL,IAAX,CAAgBG,MAAtD,EAA8D;AAE1D,YAAII,MAAM,CAACP,IAAP,CAAYG,MAAZ,GAAqBE,UAAU,CAACL,IAAX,CAAgBG,MAAzC,EAAgD;AAC5CE,UAAAA,UAAU,GAAGE,MAAb;AACH;AAEJ,OAND,MAMO;AACHH,QAAAA,eAAe,CAACK,IAAhB,CAAqBJ,UAArB;AACAA,QAAAA,UAAU,GAAGE,MAAb;AACH;AACJ,KAtBmC,CAwBpC;;;AACA,QAAIF,UAAU,IAAI,IAAlB,EAAwB;AACpBD,MAAAA,eAAe,CAACK,IAAhB,CAAqBJ,UAArB;AACH;;AAED,WAAOD,eAAP;AACH,GA9BJ;AA+BA,CAnCD",
    "sourcesContent": [
      "/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function OverlapRemovalRefiner() {\n\tRefiner.call(this);\n\t\n\n\tthis.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n        \n        var filteredResults = [];\n        var prevResult = results[0];\n        \n        for (var i=1; i<results.length; i++){\n            \n            var result = results[i];\n            \n            // If overlap, compare the length and discard the shorter one\n            if (result.index < prevResult.index + prevResult.text.length) {\n\n                if (result.text.length > prevResult.text.length){\n                    prevResult = result;\n                }\n                \n            } else {\n                filteredResults.push(prevResult);\n                prevResult = result;\n            }\n        }\n        \n        // The last one\n        if (prevResult != null) {\n            filteredResults.push(prevResult);\n        }\n\n        return filteredResults;\n    }\n}"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

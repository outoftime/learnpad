{
  "ast": null,
  "code": "import { createAction } from 'redux-actions';\nexport var logIn = createAction('LOG_IN', function (provider) {\n  return {\n    provider: provider\n  };\n});\nexport var linkGithubIdentity = createAction('LINK_GITHUB_IDENTITY');\nexport var unlinkGithubIdentity = createAction('UNLINK_GITHUB_IDENTITY');\nexport var identityLinked = createAction('IDENTITY_LINKED', function (user, credential) {\n  return {\n    user: user,\n    credential: credential\n  };\n});\nexport var linkIdentityFailed = createAction('LINK_IDENTITY_FAILED', function (error) {\n  return {\n    error: error\n  };\n});\nexport var identityUnlinked = createAction('IDENTITY_UNLINKED', function (providerId) {\n  return {\n    providerId: providerId\n  };\n});\nexport var accountMigrationNeeded = createAction('ACCOUNT_MIGRATION_NEEDED', function (profile, credential) {\n  return {\n    profile: profile,\n    credential: credential\n  };\n});\nexport var startAccountMigration = createAction('START_ACCOUNT_MIGRATION');\nexport var dismissAccountMigration = createAction('DISMISS_ACCOUNT_MIGRATION');\nexport var accountMigrationUndoPeriodExpired = createAction('ACCOUNT_MIGRATION_UNDO_PERIOD_EXPIRED');\nexport var accountMigrationComplete = createAction('ACCOUNT_MIGRATION_COMPLETE', function (user, credential, projects) {\n  return {\n    user: user,\n    credential: credential,\n    projects: projects\n  };\n});\nexport var accountMigrationError = createAction('ACCOUNT_MIGRATION_ERROR', function (error) {\n  return {\n    error: error\n  };\n});\nexport var logOut = createAction('LOG_OUT');\nexport var userAuthenticated = createAction('USER_AUTHENTICATED', function (user, credentials) {\n  return {\n    user: user,\n    credentials: credentials\n  };\n});\nexport var userLoggedOut = createAction('USER_LOGGED_OUT');",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/actions/user.js"],
    "names": [
      "createAction",
      "logIn",
      "provider",
      "linkGithubIdentity",
      "unlinkGithubIdentity",
      "identityLinked",
      "user",
      "credential",
      "linkIdentityFailed",
      "error",
      "identityUnlinked",
      "providerId",
      "accountMigrationNeeded",
      "profile",
      "startAccountMigration",
      "dismissAccountMigration",
      "accountMigrationUndoPeriodExpired",
      "accountMigrationComplete",
      "projects",
      "accountMigrationError",
      "logOut",
      "userAuthenticated",
      "credentials",
      "userLoggedOut"
    ],
    "mappings": "AAAA,SAAQA,YAAR,QAA2B,eAA3B;AAEA,OAAO,IAAMC,KAAK,GAAGD,YAAY,CAAC,QAAD,EAAW,UAAAE,QAAQ;AAAA,SAAK;AAACA,IAAAA,QAAQ,EAARA;AAAD,GAAL;AAAA,CAAnB,CAA1B;AAEP,OAAO,IAAMC,kBAAkB,GAAGH,YAAY,CAAC,sBAAD,CAAvC;AAEP,OAAO,IAAMI,oBAAoB,GAAGJ,YAAY,CAAC,wBAAD,CAAzC;AAEP,OAAO,IAAMK,cAAc,GAAGL,YAAY,CACxC,iBADwC,EAExC,UAACM,IAAD,EAAOC,UAAP;AAAA,SAAuB;AAACD,IAAAA,IAAI,EAAJA,IAAD;AAAOC,IAAAA,UAAU,EAAVA;AAAP,GAAvB;AAAA,CAFwC,CAAnC;AAKP,OAAO,IAAMC,kBAAkB,GAAGR,YAAY,CAC5C,sBAD4C,EAE5C,UAAAS,KAAK;AAAA,SAAK;AAACA,IAAAA,KAAK,EAALA;AAAD,GAAL;AAAA,CAFuC,CAAvC;AAKP,OAAO,IAAMC,gBAAgB,GAAGV,YAAY,CAC1C,mBAD0C,EAE1C,UAAAW,UAAU;AAAA,SAAK;AAACA,IAAAA,UAAU,EAAVA;AAAD,GAAL;AAAA,CAFgC,CAArC;AAKP,OAAO,IAAMC,sBAAsB,GAAGZ,YAAY,CAChD,0BADgD,EAEhD,UAACa,OAAD,EAAUN,UAAV;AAAA,SAA0B;AAACM,IAAAA,OAAO,EAAPA,OAAD;AAAUN,IAAAA,UAAU,EAAVA;AAAV,GAA1B;AAAA,CAFgD,CAA3C;AAKP,OAAO,IAAMO,qBAAqB,GAAGd,YAAY,CAAC,yBAAD,CAA1C;AAEP,OAAO,IAAMe,uBAAuB,GAAGf,YAAY,CACjD,2BADiD,CAA5C;AAIP,OAAO,IAAMgB,iCAAiC,GAAGhB,YAAY,CAC3D,uCAD2D,CAAtD;AAIP,OAAO,IAAMiB,wBAAwB,GAAGjB,YAAY,CAClD,4BADkD,EAElD,UAACM,IAAD,EAAOC,UAAP,EAAmBW,QAAnB;AAAA,SAAiC;AAACZ,IAAAA,IAAI,EAAJA,IAAD;AAAOC,IAAAA,UAAU,EAAVA,UAAP;AAAmBW,IAAAA,QAAQ,EAARA;AAAnB,GAAjC;AAAA,CAFkD,CAA7C;AAKP,OAAO,IAAMC,qBAAqB,GAAGnB,YAAY,CAC/C,yBAD+C,EAE/C,UAAAS,KAAK;AAAA,SAAK;AAACA,IAAAA,KAAK,EAALA;AAAD,GAAL;AAAA,CAF0C,CAA1C;AAKP,OAAO,IAAMW,MAAM,GAAGpB,YAAY,CAAC,SAAD,CAA3B;AAEP,OAAO,IAAMqB,iBAAiB,GAAGrB,YAAY,CAC3C,oBAD2C,EAE3C,UAACM,IAAD,EAAOgB,WAAP;AAAA,SAAwB;AAAChB,IAAAA,IAAI,EAAJA,IAAD;AAAOgB,IAAAA,WAAW,EAAXA;AAAP,GAAxB;AAAA,CAF2C,CAAtC;AAKP,OAAO,IAAMC,aAAa,GAAGvB,YAAY,CAAC,iBAAD,CAAlC",
    "sourcesContent": [
      "import {createAction} from 'redux-actions';\n\nexport const logIn = createAction('LOG_IN', provider => ({provider}));\n\nexport const linkGithubIdentity = createAction('LINK_GITHUB_IDENTITY');\n\nexport const unlinkGithubIdentity = createAction('UNLINK_GITHUB_IDENTITY');\n\nexport const identityLinked = createAction(\n  'IDENTITY_LINKED',\n  (user, credential) => ({user, credential}),\n);\n\nexport const linkIdentityFailed = createAction(\n  'LINK_IDENTITY_FAILED',\n  error => ({error}),\n);\n\nexport const identityUnlinked = createAction(\n  'IDENTITY_UNLINKED',\n  providerId => ({providerId}),\n);\n\nexport const accountMigrationNeeded = createAction(\n  'ACCOUNT_MIGRATION_NEEDED',\n  (profile, credential) => ({profile, credential}),\n);\n\nexport const startAccountMigration = createAction('START_ACCOUNT_MIGRATION');\n\nexport const dismissAccountMigration = createAction(\n  'DISMISS_ACCOUNT_MIGRATION',\n);\n\nexport const accountMigrationUndoPeriodExpired = createAction(\n  'ACCOUNT_MIGRATION_UNDO_PERIOD_EXPIRED',\n);\n\nexport const accountMigrationComplete = createAction(\n  'ACCOUNT_MIGRATION_COMPLETE',\n  (user, credential, projects) => ({user, credential, projects}),\n);\n\nexport const accountMigrationError = createAction(\n  'ACCOUNT_MIGRATION_ERROR',\n  error => ({error}),\n);\n\nexport const logOut = createAction('LOG_OUT');\n\nexport const userAuthenticated = createAction(\n  'USER_AUTHENTICATED',\n  (user, credentials) => ({user, credentials}),\n);\n\nexport const userLoggedOut = createAction('USER_LOGGED_OUT');\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

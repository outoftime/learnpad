{
  "ast": null,
  "code": "import { faArchive } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { t } from 'i18next';\nvar MAX_LENGTH = 50;\nexport default function ProjectPreview(_ref) {\n  var isCurrentProject = _ref.isCurrentProject,\n      preview = _ref.preview,\n      project = _ref.project,\n      onProjectArchived = _ref.onProjectArchived;\n  return React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"project-preview\"\n  }, React.createElement(\"div\", {\n    className: classnames('project-preview__label', {\n      'project-preview__label_archived': project.isArchived\n    })\n  }, preview.slice(0, MAX_LENGTH)), function showArchived() {\n    if (isCurrentProject) {\n      return null;\n    }\n\n    if (project.isArchived) {\n      return React.createElement(\"div\", {\n        className: \"project-preview__archived\"\n      }, t('top-bar.project-archived'));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"project-preview__archive\",\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        onProjectArchived();\n      }\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faArchive\n    }));\n  }()), project.updatedAt && React.createElement(\"div\", {\n    className: \"project-preview__timestamp\"\n  }, moment(project.updatedAt).fromNow()));\n}\nProjectPreview.propTypes = {\n  isCurrentProject: PropTypes.bool.isRequired,\n  preview: PropTypes.string.isRequired,\n  project: PropTypes.object.isRequired,\n  onProjectArchived: PropTypes.func.isRequired\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/src/components/ProjectPreview.jsx"
    ],
    "names": [
      "faArchive",
      "FontAwesomeIcon",
      "classnames",
      "React",
      "PropTypes",
      "moment",
      "t",
      "MAX_LENGTH",
      "ProjectPreview",
      "isCurrentProject",
      "preview",
      "project",
      "onProjectArchived",
      "isArchived",
      "slice",
      "showArchived",
      "e",
      "stopPropagation",
      "updatedAt",
      "fromNow",
      "propTypes",
      "bool",
      "isRequired",
      "string",
      "object",
      "func"
    ],
    "mappings": "AAAA,SAAQA,SAAR,QAAwB,mCAAxB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,CAAR,QAAgB,SAAhB;AAEA,IAAMC,UAAU,GAAG,EAAnB;AAEA,eAAe,SAASC,cAAT,OAKZ;AAAA,MAJDC,gBAIC,QAJDA,gBAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,iBACC,QADDA,iBACC;AACD,SACE,iCACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,SAAS,EAAEV,UAAU,CAAC,wBAAD,EAA2B;AAC9C,yCAAmCS,OAAO,CAACE;AADG,KAA3B;AADvB,KAKGH,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBP,UAAjB,CALH,CADF,EAQI,SAASQ,YAAT,GAAwB;AACxB,QAAIN,gBAAJ,EAAsB;AACpB,aAAO,IAAP;AACD;;AACD,QAAIE,OAAO,CAACE,UAAZ,EAAwB;AACtB,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGP,CAAC,CAAC,0BAAD,CADJ,CADF;AAKD;;AACD,WACE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,OAAO,EAAE,iBAAAU,CAAC,EAAI;AACZA,QAAAA,CAAC,CAACC,eAAF;AACAL,QAAAA,iBAAiB;AAClB;AALH,OAOE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEZ;AAAvB,MAPF,CADF;AAWD,GAtBA,EARH,CADF,EAiCGW,OAAO,CAACO,SAAR,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGb,MAAM,CAACM,OAAO,CAACO,SAAT,CAAN,CAA0BC,OAA1B,EADH,CAlCJ,CADF;AAyCD;AAEDX,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,gBAAgB,EAAEL,SAAS,CAACiB,IAAV,CAAeC,UADR;AAEzBZ,EAAAA,OAAO,EAAEN,SAAS,CAACmB,MAAV,CAAiBD,UAFD;AAGzBX,EAAAA,OAAO,EAAEP,SAAS,CAACoB,MAAV,CAAiBF,UAHD;AAIzBV,EAAAA,iBAAiB,EAAER,SAAS,CAACqB,IAAV,CAAeH;AAJT,CAA3B",
    "sourcesContent": [
      "import {faArchive} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {t} from 'i18next';\n\nconst MAX_LENGTH = 50;\n\nexport default function ProjectPreview({\n  isCurrentProject,\n  preview,\n  project,\n  onProjectArchived,\n}) {\n  return (\n    <div>\n      <div className=\"project-preview\">\n        <div\n          className={classnames('project-preview__label', {\n            'project-preview__label_archived': project.isArchived,\n          })}\n        >\n          {preview.slice(0, MAX_LENGTH)}\n        </div>\n        {(function showArchived() {\n          if (isCurrentProject) {\n            return null;\n          }\n          if (project.isArchived) {\n            return (\n              <div className=\"project-preview__archived\">\n                {t('top-bar.project-archived')}\n              </div>\n            );\n          }\n          return (\n            <div\n              className=\"project-preview__archive\"\n              onClick={e => {\n                e.stopPropagation();\n                onProjectArchived();\n              }}\n            >\n              <FontAwesomeIcon icon={faArchive} />\n            </div>\n          );\n        })()}\n      </div>\n      {project.updatedAt && (\n        <div className=\"project-preview__timestamp\">\n          {moment(project.updatedAt).fromNow()}\n        </div>\n      )}\n    </div>\n  );\n}\n\nProjectPreview.propTypes = {\n  isCurrentProject: PropTypes.bool.isRequired,\n  preview: PropTypes.string.isRequired,\n  project: PropTypes.object.isRequired,\n  onProjectArchived: PropTypes.func.isRequired,\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

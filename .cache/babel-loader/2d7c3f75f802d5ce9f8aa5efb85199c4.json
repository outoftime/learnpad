{
  "ast": null,
  "code": "/*\n\n\n*/\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\n\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/FR'); // Force load fr localization data from moment for the locale files to be linkded durning browserify.\n// NOTE: The function moment.defineLocale() also has a side effect that it change global locale\n//  We also need to save and restore the previous locale (see. moment.js, loadLocale)\n\n\nvar originalLocale = moment.locale();\n\nrequire('moment/locale/fr');\n\nmoment.locale(originalLocale);\nvar PATTERN = new RegExp('(\\\\W|^)' + '(?:les?|la|l\\'|du|des?)\\\\s*' + '(' + util.INTEGER_WORDS_PATTERN + '|\\\\d+)?\\\\s*' + '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?\\\\s*' + '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|trimestres?|années?)\\\\s*' + '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?' + '(?=\\\\W|$)', 'i');\nvar MULTIPLIER_GROUP = 2;\nvar MODIFIER_1_GROUP = 3;\nvar RELATIVE_WORD_GROUP = 4;\nvar MODIFIER_2_GROUP = 5;\n\nexports.Parser = function FRRelativeDateFormatParser() {\n  Parser.apply(this, arguments);\n\n  this.pattern = function () {\n    return PATTERN;\n  };\n\n  this.extract = function (text, ref, match, opt) {\n    var index = match.index + match[1].length;\n    var text = match[0];\n    text = match[0].substr(match[1].length, match[0].length - match[1].length); // Multiplier\n\n    var multiplier = match[MULTIPLIER_GROUP] === undefined ? '1' : match[MULTIPLIER_GROUP];\n\n    if (util.INTEGER_WORDS[multiplier] !== undefined) {\n      multiplier = util.INTEGER_WORDS[multiplier];\n    } else {\n      multiplier = parseInt(multiplier);\n    } // Modifier\n\n\n    var modifier = match[MODIFIER_1_GROUP] === undefined ? match[MODIFIER_2_GROUP] === undefined ? '' : match[MODIFIER_2_GROUP].toLowerCase() : match[MODIFIER_1_GROUP].toLowerCase();\n\n    if (!modifier) {\n      // At least one modifier is mandatory to match this parser\n      return;\n    }\n\n    var result = new ParsedResult({\n      index: index,\n      text: text,\n      ref: ref\n    });\n    result.tags['FRRelativeDateFormatParser'] = true;\n    var modifierFactor;\n\n    switch (true) {\n      case /prochaine?s?/.test(modifier):\n      case /suivants?/.test(modifier):\n        modifierFactor = 1;\n        break;\n\n      case /derni[eè]re?s?/.test(modifier):\n      case /pass[ée]e?s?/.test(modifier):\n      case /pr[ée]c[ée]dents?/.test(modifier):\n        modifierFactor = -1;\n        break;\n    }\n\n    var total = multiplier * modifierFactor;\n    var dateFrom = moment(ref),\n        dateTo = moment(ref);\n    dateFrom.locale('fr');\n    dateTo.locale('fr');\n    var relative = match[RELATIVE_WORD_GROUP];\n    var startOf;\n\n    switch (true) {\n      case /secondes?/.test(relative):\n        dateFrom.add(total, 's');\n        dateTo.add(modifierFactor, 's');\n        startOf = 'second';\n        break;\n\n      case /min(?:ute)?s?/.test(relative):\n        dateFrom.add(total, 'm');\n        dateTo.add(modifierFactor, 'm');\n        startOf = 'minute';\n        break;\n\n      case /heures?/.test(relative):\n        dateFrom.add(total, 'h');\n        dateTo.add(modifierFactor, 'h');\n        startOf = 'hour';\n        break;\n\n      case /jours?/.test(relative):\n        dateFrom.add(total, 'd');\n        dateTo.add(modifierFactor, 'd');\n        startOf = 'day';\n        break;\n\n      case /semaines?/.test(relative):\n        dateFrom.add(total, 'w');\n        dateTo.add(modifierFactor, 'w');\n        startOf = 'week';\n        break;\n\n      case /mois?/.test(relative):\n        dateFrom.add(total, 'M');\n        dateTo.add(modifierFactor, 'M');\n        startOf = 'month';\n        break;\n\n      case /trimestres?/.test(relative):\n        dateFrom.add(total, 'Q');\n        dateTo.add(modifierFactor, 'Q');\n        startOf = 'quarter';\n        break;\n\n      case /années?/.test(relative):\n        dateFrom.add(total, 'y');\n        dateTo.add(modifierFactor, 'y');\n        startOf = 'year';\n        break;\n    } // if we go forward, switch the start and end dates\n\n\n    if (modifierFactor > 0) {\n      var dateTmp = dateFrom;\n      dateFrom = dateTo;\n      dateTo = dateTmp;\n    } // Get start and end of dates\n\n\n    dateFrom.startOf(startOf);\n    dateTo.endOf(startOf); // Assign results\n\n    result.start.assign('year', dateFrom.year());\n    result.start.assign('month', dateFrom.month() + 1);\n    result.start.assign('day', dateFrom.date());\n    result.start.assign('minute', dateFrom.minute());\n    result.start.assign('second', dateFrom.second());\n    result.start.assign('hour', dateFrom.hour());\n    result.start.assign('millisecond', dateFrom.millisecond());\n    result.end = result.start.clone();\n    result.end.assign('year', dateTo.year());\n    result.end.assign('month', dateTo.month() + 1);\n    result.end.assign('day', dateTo.date());\n    result.end.assign('minute', dateTo.minute());\n    result.end.assign('second', dateTo.second());\n    result.end.assign('hour', dateTo.hour());\n    result.end.assign('millisecond', dateTo.millisecond());\n    return result;\n  };\n};",
  "map": {
    "version": 3,
    "sources": [
      "/Users/peter/Desktop/code/popcode/node_modules/chrono-node/src/parsers/fr/FRRelativeDateFormatParser.js"
    ],
    "names": [
      "moment",
      "require",
      "Parser",
      "ParsedResult",
      "util",
      "originalLocale",
      "locale",
      "PATTERN",
      "RegExp",
      "INTEGER_WORDS_PATTERN",
      "MULTIPLIER_GROUP",
      "MODIFIER_1_GROUP",
      "RELATIVE_WORD_GROUP",
      "MODIFIER_2_GROUP",
      "exports",
      "FRRelativeDateFormatParser",
      "apply",
      "arguments",
      "pattern",
      "extract",
      "text",
      "ref",
      "match",
      "opt",
      "index",
      "length",
      "substr",
      "multiplier",
      "undefined",
      "INTEGER_WORDS",
      "parseInt",
      "modifier",
      "toLowerCase",
      "result",
      "tags",
      "modifierFactor",
      "test",
      "total",
      "dateFrom",
      "dateTo",
      "relative",
      "startOf",
      "add",
      "dateTmp",
      "endOf",
      "start",
      "assign",
      "year",
      "month",
      "date",
      "minute",
      "second",
      "hour",
      "millisecond",
      "end",
      "clone"
    ],
    "mappings": "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",
    "sourcesContent": [
      "/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/FR');\n\n// Force load fr localization data from moment for the locale files to be linkded durning browserify.\n// NOTE: The function moment.defineLocale() also has a side effect that it change global locale\n//  We also need to save and restore the previous locale (see. moment.js, loadLocale)\nvar originalLocale = moment.locale();\nrequire('moment/locale/fr');\nmoment.locale(originalLocale);\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:les?|la|l\\'|du|des?)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|\\\\d+)?\\\\s*' +\n    '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?\\\\s*' +\n    '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|trimestres?|années?)\\\\s*' +\n    '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar MULTIPLIER_GROUP = 2;\nvar MODIFIER_1_GROUP = 3;\nvar RELATIVE_WORD_GROUP = 4;\nvar MODIFIER_2_GROUP = 5;\n\nexports.Parser = function FRRelativeDateFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        // Multiplier\n        var multiplier = match[MULTIPLIER_GROUP] === undefined ? '1' : match[MULTIPLIER_GROUP];\n        if (util.INTEGER_WORDS[multiplier] !== undefined) {\n            multiplier = util.INTEGER_WORDS[multiplier];\n        } else {\n            multiplier = parseInt(multiplier);\n        }\n\n        // Modifier\n        var modifier = match[MODIFIER_1_GROUP] === undefined ?\n                    (match[MODIFIER_2_GROUP] === undefined ? '' : match[MODIFIER_2_GROUP].toLowerCase())\n                     : match[MODIFIER_1_GROUP].toLowerCase();\n        if(!modifier) {\n            // At least one modifier is mandatory to match this parser\n            return;\n        }\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n        result.tags['FRRelativeDateFormatParser'] = true;\n\n        var modifierFactor;\n        switch(true) {\n            case /prochaine?s?/.test(modifier):\n            case /suivants?/.test(modifier):\n                modifierFactor = 1;\n                break;\n            case /derni[eè]re?s?/.test(modifier):\n            case /pass[ée]e?s?/.test(modifier):\n            case /pr[ée]c[ée]dents?/.test(modifier):\n                modifierFactor = -1;\n                break;\n        }\n\n        var total = multiplier * modifierFactor;\n\n        var dateFrom = moment(ref),\n            dateTo = moment(ref);\n        dateFrom.locale('fr');\n        dateTo.locale('fr');\n        var relative = match[RELATIVE_WORD_GROUP];\n        var startOf;\n        switch(true) {\n            case /secondes?/.test(relative):\n                dateFrom.add(total, 's');\n                dateTo.add(modifierFactor, 's');\n                startOf = 'second';\n                break;\n            case /min(?:ute)?s?/.test(relative):\n                dateFrom.add(total, 'm');\n                dateTo.add(modifierFactor, 'm');\n                startOf = 'minute';\n                break;\n            case /heures?/.test(relative):\n                dateFrom.add(total, 'h');\n                dateTo.add(modifierFactor, 'h');\n                startOf = 'hour';\n                break;\n            case /jours?/.test(relative):\n                dateFrom.add(total, 'd');\n                dateTo.add(modifierFactor, 'd');\n                startOf = 'day';\n                break;\n            case /semaines?/.test(relative):\n                dateFrom.add(total, 'w');\n                dateTo.add(modifierFactor, 'w');\n                startOf = 'week';\n                break;\n            case /mois?/.test(relative):\n                dateFrom.add(total, 'M');\n                dateTo.add(modifierFactor, 'M');\n                startOf = 'month';\n                break;\n            case /trimestres?/.test(relative):\n                dateFrom.add(total, 'Q');\n                dateTo.add(modifierFactor, 'Q');\n                startOf = 'quarter';\n                break;\n            case /années?/.test(relative):\n                dateFrom.add(total, 'y');\n                dateTo.add(modifierFactor, 'y');\n                startOf = 'year';\n                break;\n        }\n\n        // if we go forward, switch the start and end dates\n        if(modifierFactor > 0) {\n            var dateTmp = dateFrom;\n            dateFrom = dateTo;\n            dateTo = dateTmp;\n        }\n\n        // Get start and end of dates\n        dateFrom.startOf(startOf);\n        dateTo.endOf(startOf);\n\n        // Assign results\n        result.start.assign('year', dateFrom.year());\n        result.start.assign('month', dateFrom.month() + 1);\n        result.start.assign('day', dateFrom.date());\n        result.start.assign('minute', dateFrom.minute());\n        result.start.assign('second', dateFrom.second());\n        result.start.assign('hour', dateFrom.hour());\n        result.start.assign('millisecond', dateFrom.millisecond());\n\n        result.end = result.start.clone();\n        result.end.assign('year', dateTo.year());\n        result.end.assign('month', dateTo.month() + 1);\n        result.end.assign('day', dateTo.date());\n        result.end.assign('minute', dateTo.minute());\n        result.end.assign('second', dateTo.second());\n        result.end.assign('hour', dateTo.hour());\n        result.end.assign('millisecond', dateTo.millisecond());\n        return result;\n    };\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

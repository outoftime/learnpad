{
  "ast": null,
  "code": "import { connect } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport throttle from 'lodash-es/throttle';\nimport Preview from '../components/Preview';\nimport { addRuntimeError, consoleErrorProduced, consoleLogBatchProduced, consoleValueProduced, popOutProject, refreshPreview, toggleComponent } from '../actions';\nimport { getCompiledProjects, getConsoleHistory, getCurrentProjectKey, getCurrentProjectPreviewTitle, getHiddenUIComponents, isCurrentProjectSyntacticallyValid, isUserTyping } from '../selectors';\n\nfunction mapStateToProps(state) {\n  return {\n    compiledProjects: getCompiledProjects(state),\n    consoleEntries: getConsoleHistory(state),\n    currentProjectKey: getCurrentProjectKey(state),\n    isOpen: !getHiddenUIComponents(state).includes('preview'),\n    showingErrors: !isUserTyping(state) && !isCurrentProjectSyntacticallyValid(state),\n    title: getCurrentProjectPreviewTitle(state)\n  };\n}\n\nfunction generateConsoleLogDispatcher(dispatch, timeout) {\n  var queue = [];\n\n  function flushQueue() {\n    dispatch(consoleLogBatchProduced(queue));\n    queue = [];\n  }\n\n  var throttledFlushQueue = throttle(flushQueue, timeout, {\n    leading: true,\n    trailing: true\n  });\n  return function addLogEntry(value, compiledProjectKey) {\n    queue.push({\n      value: value,\n      compiledProjectKey: compiledProjectKey,\n      key: uuid().toString()\n    });\n    throttledFlushQueue();\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  var dispatchConsoleLog = generateConsoleLogDispatcher(dispatch, 1000);\n  return {\n    onConsoleError: function onConsoleError(key, compiledProjectKey, error) {\n      dispatch(consoleErrorProduced(key, compiledProjectKey, error));\n    },\n    onConsoleValue: function onConsoleValue(key, value, compiledProjectKey) {\n      dispatch(consoleValueProduced(key, value, compiledProjectKey));\n    },\n    onConsoleLog: function onConsoleLog(value, compiledProjectKey) {\n      dispatchConsoleLog(value, compiledProjectKey);\n    },\n    onPopOutProject: function onPopOutProject() {\n      dispatch(popOutProject());\n    },\n    onRefreshClick: function onRefreshClick() {\n      dispatch(refreshPreview(Date.now()));\n    },\n    onRuntimeError: function onRuntimeError(error) {\n      dispatch(addRuntimeError('javascript', error));\n    },\n    onToggleVisible: function onToggleVisible(projectKey) {\n      dispatch(toggleComponent(projectKey, 'preview'));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preview);",
  "map": {
    "version": 3,
    "sources": ["/Users/peter/Desktop/code/popcode/src/containers/Preview.js"],
    "names": [
      "connect",
      "uuid",
      "throttle",
      "Preview",
      "addRuntimeError",
      "consoleErrorProduced",
      "consoleLogBatchProduced",
      "consoleValueProduced",
      "popOutProject",
      "refreshPreview",
      "toggleComponent",
      "getCompiledProjects",
      "getConsoleHistory",
      "getCurrentProjectKey",
      "getCurrentProjectPreviewTitle",
      "getHiddenUIComponents",
      "isCurrentProjectSyntacticallyValid",
      "isUserTyping",
      "mapStateToProps",
      "state",
      "compiledProjects",
      "consoleEntries",
      "currentProjectKey",
      "isOpen",
      "includes",
      "showingErrors",
      "title",
      "generateConsoleLogDispatcher",
      "dispatch",
      "timeout",
      "queue",
      "flushQueue",
      "throttledFlushQueue",
      "leading",
      "trailing",
      "addLogEntry",
      "value",
      "compiledProjectKey",
      "push",
      "key",
      "toString",
      "mapDispatchToProps",
      "dispatchConsoleLog",
      "onConsoleError",
      "error",
      "onConsoleValue",
      "onConsoleLog",
      "onPopOutProject",
      "onRefreshClick",
      "Date",
      "now",
      "onRuntimeError",
      "onToggleVisible",
      "projectKey"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import {connect} from 'react-redux';\nimport uuid from 'uuid/v4';\nimport throttle from 'lodash-es/throttle';\n\nimport Preview from '../components/Preview';\nimport {\n  addRuntimeError,\n  consoleErrorProduced,\n  consoleLogBatchProduced,\n  consoleValueProduced,\n  popOutProject,\n  refreshPreview,\n  toggleComponent,\n} from '../actions';\nimport {\n  getCompiledProjects,\n  getConsoleHistory,\n  getCurrentProjectKey,\n  getCurrentProjectPreviewTitle,\n  getHiddenUIComponents,\n  isCurrentProjectSyntacticallyValid,\n  isUserTyping,\n} from '../selectors';\n\nfunction mapStateToProps(state) {\n  return {\n    compiledProjects: getCompiledProjects(state),\n    consoleEntries: getConsoleHistory(state),\n    currentProjectKey: getCurrentProjectKey(state),\n    isOpen: !getHiddenUIComponents(state).includes('preview'),\n    showingErrors:\n      !isUserTyping(state) && !isCurrentProjectSyntacticallyValid(state),\n    title: getCurrentProjectPreviewTitle(state),\n  };\n}\n\nfunction generateConsoleLogDispatcher(dispatch, timeout) {\n  let queue = [];\n\n  function flushQueue() {\n    dispatch(consoleLogBatchProduced(queue));\n    queue = [];\n  }\n\n  const throttledFlushQueue = throttle(flushQueue, timeout, {\n    leading: true,\n    trailing: true,\n  });\n\n  return function addLogEntry(value, compiledProjectKey) {\n    queue.push({value, compiledProjectKey, key: uuid().toString()});\n    throttledFlushQueue();\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const dispatchConsoleLog = generateConsoleLogDispatcher(dispatch, 1000);\n  return {\n    onConsoleError(key, compiledProjectKey, error) {\n      dispatch(consoleErrorProduced(key, compiledProjectKey, error));\n    },\n\n    onConsoleValue(key, value, compiledProjectKey) {\n      dispatch(consoleValueProduced(key, value, compiledProjectKey));\n    },\n\n    onConsoleLog(value, compiledProjectKey) {\n      dispatchConsoleLog(value, compiledProjectKey);\n    },\n\n    onPopOutProject() {\n      dispatch(popOutProject());\n    },\n\n    onRefreshClick() {\n      dispatch(refreshPreview(Date.now()));\n    },\n\n    onRuntimeError(error) {\n      dispatch(addRuntimeError('javascript', error));\n    },\n\n    onToggleVisible(projectKey) {\n      dispatch(toggleComponent(projectKey, 'preview'));\n    },\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Preview);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
